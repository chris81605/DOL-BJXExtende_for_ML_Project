:: The Pod

<<if $molestationstart is 1>>
	<<set $molestationstart to 0>>
	<<generate1>><<generate2>><<generate3>><<generate4>><<generate5>><<generate6>><<person1>>
	You feel the room shake, then shift sideways. You find yourself in a featureless black room with a gang of $enemyno and an audience behind ropes. There is a sign on the wall that says <span class="orange">DEBUG</span> in bright orange letters, along with other statistics you don't understand.
	<br><br>
	<span class="red">The gang advances...</span>
	<br><br>
	<<controlloss>>
	<br>
	<<violence 1>>
	<<neutral 1>>
	<<maninit>>
<</if>>

<span class="orange">DEBUG GROUP:</span> <span class="red">TRST: $enemytrust HLTH: <<print Math.trunc($enemyhealth)>> : $enemyhealthmax AROSL: <<print Math.trunc($enemyarousal)>> : $enemyarousalmax ANGR: $enemyanger : $enemyangermax </span>
<br>
<span class="orange">DEBUG BROTHEL EVENT:</span> Enemy current of $enemynomax (1 - 6): $enemyno
<br>
<span class="green">DEBUG: Enemy #: Health Descr Gen Pro PP Vag Mouth LH RH Clothes</span>
<br>
<<for _ii = 0; _ii < $enemynomax; _ii++>>
	DEBUG: _ii: <<print Math.trunc($NPCList[_ii].health)>> $NPCList[_ii].description $NPCList[_ii].gender $NPCList[_ii].pronoun $NPCList[_ii].penis $NPCList[_ii].vagina $NPCList[_ii].mouth $NPCList[_ii].lefthand $NPCList[_ii].righthand $NPCList[_ii].clothes.upper.name $NPCList[_ii].clothes.lower.name
	<br>
<</for>>
DEBUG PC (P/V/A/M/LARM): $penisstate $vaginastate $anusstate $mouthstate $leftarm
<br><br>

<<effects>>
<<effectsman>>
<<alarmstate>>
<<man>>
<<audience>>
<<stateman>>
<br><br>
<<actionsman>>

<<if $alarm is 1>>
	<<if $rescue is 0>>
		<<set $alarm to 0>>
		<<if ($enemyarousal gte $enemyarousalmax) or ($enemyhealth lte 0)>>
			<span id="next"><<link [[Next->The Pod Finish]]>><</link>></span><<nexttext>>
		<<else>>
			<span id="next"><<link [[Next->The Pod]]>><</link>></span><<nexttext>>
		<</if>>
	<</if>>
<<elseif ($enemyarousal gte $enemyarousalmax) or ($enemyhealth lte 0)>>
	<span id="next"><<link [[Next->The Pod Finish]]>><</link>></span><<nexttext>>
<<else>>
	<span id="next"><<link [[Next->The Pod]]>><</link>></span><<nexttext>>
<</if>>

:: The Pod Finish
<<effects>>

<<if $enemyhealth lte 0>>
	<<He>> recoils in pain, giving you the chance you need. <<tearful>> you escape the gang, leaving them defeated on the floor.
	<br>
	You feel the room shift again, and find yourself in your bedroom.
	<br><br>
	<<clotheson>>
	<<endcombat>>
	<<link [[Next|Bedroom]]>><</link>>
<<elseif $enemyarousal gte $enemyarousalmax>>
	<<ejaculation>>
	<<if $audience is 1>>
		A cheer erupts from the crowd as the <<person1>><<person>> climaxes. <<tearful>> you manage to stagger away before anyone else gets ideas.
	<<elseif $audience lte 6>>
		The <<person1>><<person>> and <<person2>><<person>> high-five each other. <<tearful>> you manage to stagger away while the audience congratulates each other.
	<<else>>
		A cheer erupts from the crowd, seems they enjoyed the show. <<tearful>> you manage to stagger away before anyone else gets any ideas.
	<</if>>
	<br><br>
	<<stealclothes>>
	<<clotheson>>
	<<endcombat>>
	You feel the room shift again, and find yourself in your bedroom.
	<br><br>
	<<link [[Next|Bedroom]]>><</link>>
<</if>>

:: The Farm
<<if $molestationstart is 1>>
	<<set $molestationstart to 0>>
	<<beastTrainGenerate 5 `["pig","cat","dog","pig","creature"]`>>
	<<beastNEWinit 1 dog>>
		You stumble from the woods onto the verge of a steep cliff. Losing your balance <span class="red">you tip over the edge, tumbling to the bottom.</span>
		<br><br>
		When you recover, you find yourself in the main yard of a small farm. You are stunned to see several animals dancing around you... singing...
		<br><br>
		<span class="green">Old McDonalds rape-y farm
		<br>
		E-I-E-I-O
		<br>
		And on this farm we found a whore
		<br>
		E-I-E-I-O</span>
		<br><br>
		<span class="red">They stop singing and advance on you</span>
		<br>
	<<controlloss>>
	<<violence 1>>
	<<neutral 1>>
	<<molested>>
	<<beastCombatInit>>
<</if>>
<<effects>>
<<effectsman>>
<br>
<<beast $enemyno>>
<br><br>
DEBUG BEAST EVENT: Enemy current of $enemynomax (1 - 6): $enemyno
<br>
<span class="green">DEBUG: Enemy #: Gen Pro Type Monster Stance PP Vag</span>
<br>
<<for _ii = 0; _ii < $enemynomax; _ii++>>
	DEBUG: _ii: $NPCList[_ii].gender $NPCList[_ii].pronoun $NPCList[_ii].type $NPCList[_ii].monster $NPCList[_ii].stance $NPCList[_ii].penis $NPCList[_ii].vagina
	<br>
<</for>>
<br><br>
<<stateman>>
<br><br>
<<actionsman>>

<<if _combatend>>
	<span id="next"><<link [[Next|The Farm Finish]]>><</link>></span><<nexttext>>
<<else>>
	<span id="next"><<link [[Next|The Farm]]>><</link>></span><<nexttext>>
<</if>>

:: The Farm Finish

<<effects>>
<<if $enemyhealth lte 0>>
	<<beastwound>>
		<<if $combatTrain.length gt 0>>
		The $NPCList[0].type recoils in pain and fear, but another beast is eager for a go.
		<<beastNEWinit $combatTrain.numberPerTrain[0] $combatTrain.beastTypes[0]>>
		<<combatTrainAdvance>>
		<br><br>
		<<link [[Next|The Farm]]>><</link>>
	<<else>>
		The $NPCList[_na].type recoils in pain and fear.
		<br><br>
		<<link [[Next|The Farm Finish]]>><<set $finish to 1>><</link>>
	<</if>>
<<elseif $enemyarousal gte $enemyarousalmax>>
	<<beastejaculation>>
	<<if $combatTrain.length gt 0>>
		Satisfied, the $NPCList[0].type moves and another beast takes its turn.
		<<beastNEWinit $combatTrain.numberPerTrain[0] $combatTrain.beastTypes[0]>>
		<<combatTrainAdvance>>
		<br><br>
		<<link [[Next|The Farm]]>><</link>>
	<<else>>
		Satisfied, the $NPCList[0].type moves away from you.
		<br><br>
		<<link [[Next|The Farm Finish]]>><<set $finish to 1>><</link>>
	<</if>>
<<elseif $finish is 1>>
	<<if $enemywounded is 1 and $enemyejaculated is 0>>
		The $NPCList[_na].type whimpers and flees into a barn.
	<<elseif $enemywounded is 0 and $enemyejaculated is 1>>
		The $NPCList[_na].type leaves you lying on the grass.
	<<elseif $enemywounded gte 2 and $enemyejaculated is 0>>
		Feeling that you're more trouble than you're worth, the animals flee to a nearby barn.
	<<elseif $enemywounded is 0 and $enemyejaculated gte 2>>
		The animals leave you spent and shivering on the grass.
	<<elseif $enemywounded gte 1 and $enemyejaculated gte 1>>
		The animals leave you spent and shivering on the grass.
	<</if>>
	<br><br>
	<<tearful>> you gather yourself.
	<br><br>
	<<clotheson>>
	<<endcombat>>
	<<destinationeventend>>
	Out of nowhere a goat runs from the shed. Rearing back, <span class="green">it kicks you all the way to Domus Street and through your bedroom window.</span>
	<br>
	<<link [[Next|Bedroom]]>><</link>>
<</if>>

:: Beast Parade
<!-- Used to debug Beast generation by displaying all attributes. -->
<span class="red">TOTAL BEAST TYPES: $BeastList.length</span>
<br>

<<for _i = 0; _i lt $BeastList.length; _i++>>
	/% <<generateBEAST 1 $BeastList[_i]>><!-- This can call all m/f if specified --> %/
	<<beastNEWinit 1 $BeastList[_i]>>
	<br>
	Introducing Beast <<print _i>>: <span class="green">$NPCList[0].description $NPCList[0].type</span>
	<br>
	PRONOUN: <span class="red">$NPCList[0].pronoun</span> GENDER: <span class="red">$NPCList[0].gender</span>
	<br>
	PPSize,Desc: <span class="gold">$NPCList[0].penissize, $NPCList[0].penisdesc</span> BREASTSize,Desc: <span class="gold">$NPCList[0].breastsize, $NPCList[0].breastsdesc</span>
	<br>
	PenActiv: <span class="gold">$NPCList[0].penis</span> VagActiv: <span class="gold">$NPCList[0].vagina</span>
	<br>
	/% DOM: $NPCList[0].dom LUST $NPCList[0].lust RAGE: $NPCList[0].rage TRAUMA $NPCList[0].trauma<br> %/
	/% STATE: $NPCList[0].state<br> %/
<</for>>

<<link [[Next|Bedroom]]>><</link>>

:: Beast Train
<!-- Used to debug Beast Train -->
<<beastNEWinit 6 dolphin>>
<span class="red">BEAST TRAIN: $enemyno members</span>
<br>
<<for _x = $enemyno-1; _x gte 0; _x-->>
Introducing Beast <<print _x+1>>: <span class="green">$NPCList[_x].description $NPCList[_x].type</span>
<br>
PRONOUN: <span class="red">$NPCList[_x].pronoun</span> GENDER: <span class="red">$NPCList[_x].gender</span>
<br>
PPSize,Desc: <span class="gold">$NPCList[_x].penissize, $NPCList[_x].penisdesc</span> BREASTSize,Desc: <span class="gold">$NPCList[_x].breastsize, $NPCList[_x].breastsdesc</span>
<br>
PenActiv: <span class="gold">$NPCList[_x].penis</span> VagActiv: <span class="gold">$NPCList[_x].vagina</span>
<br><br>
<</for>>

<<link [[Next|Bedroom]]>><</link>>

:: NNPC Parade
<!-- Used to debug Named NPCs by displaying all attributes. -->
<span class="red">TOTAL NAMED NPCS: $NPCName.length</span>
<br>
<!-- Example of introduction, variable set / increment, and put away of npc -->
/% <<npc Robin>> %/
/% In walks $npc[0], and takes a bow. <<He>> has more Trauma now. And out <<he>> goes.<br> %/
/% <<npcset $npc[0] trauma 80>> %/
/% <<npcincr $npc[0] trauma 100>> %/
/% <<endnpc>> %/

<<set _genderColor to {"m": "blue", "h": "purple", "f": "pink"}>>

<<for _i = 0; _i lt $NPCName.length; _i++>>
	<<set _nnpc to $NPCName[_i]>>
	<<set _nnpc_init_backup to _nnpc.init>>
	<<npc _nnpc.nam>>
	<<set _listnpc to $NPCList[0]>>
	<br>
	NNPC #<<print _i>>: <span class="green">_nnpc.nam, the _nnpc.title</span>
	<br>
	<<set _pColor to _genderColor[_nnpc.pronoun]>>
	<<set _gColor to _genderColor[_nnpc.gender]>>
	PRONOUN: <span @class="_pColor"><<print _nnpc.pronoun.toUpperCase()>></span> |
	GENDER: <span @class="_gColor"><<print _nnpc.gender.toUpperCase()>></span>
	<br>
	Penis Size: <span class="gold">_nnpc.penissize</span>, Desc: <span class="gold">_nnpc.penisdesc</span>,
	State: <span @class="_nnpc.penis is 'none' ? 'red' : 'gold'">_nnpc.penis</span>
	<br>
	Breast Size: <span class="gold">_nnpc.breastsize</span>, Desc: <span class="gold">_nnpc.breastsdesc</span>
	<br>
	TYPE: <span class="blue"><<if _nnpc.adult>>Adult<<elseif _nnpc.teen>>Teen<<else>>???<</if>></span>
	| INSECURITY: <span class="red">_nnpc.insecurity</span>
	<br>
	TRUST:	<span class="gold">_nnpc.trust</span>
	| LOVE:		<span class="gold">_nnpc.love</span>
	| DOM:		<span class="gold">_nnpc.dom</span>
	| LUST:		<span class="gold">_nnpc.lust</span>
	| RAGE:		<span class="gold">_nnpc.rage</span>
	| TRAUMA: <span class="gold">_nnpc.trauma</span>
	<br>
	STATE: _nnpc.state
	<br>
	CLOTHES: <span class="teal">_nnpc.clothes.set</span>
	<br>
	Upper: <span class="teal">_nnpc.clothes.upper.name</span> | Lower: <span class="teal">_nnpc.clothes.lower.name</span>
	<br>
	Outfits: [<<print '<span class="teal">'+_nnpc.outfits.join('</span>, <span class="teal">')+"</span>">>]
	<br>

	You have <<if _nnpc_init_backup isnot 1>><span class="red">not</span><</if>> been introduced to <<him>>.
	<br>
	<<endnpc _nnpc.nam>>
	<<set _nnpc.init to _nnpc_init_backup>>

	<hr>
<</for>>

<<link [[Next|Bedroom]]>><</link>>

:: Alley Dog

<!-- Keeping this only as an example on how to use Widget as Event for debug -->
<<residentialex2>>
<<link [[Next|Domus Street]]>><</link>>

:: Abomination Old

<<if $molestationstart is 1>>
	<<set $molestationstart to 0>>
	<<controlloss>>
	<<violence 1>>
	<<neutral 1>>
	<<molested>>
	<<abomination>>
	You awaken to find yourself being assaulted by a strange beast!
<</if>>
<<effects>>
<<effectsman>>
<<alarmstate>>
<<man>>
<<stateman>>
<br><br>
<<actionsman>>
<<if $alarm is 1>>
	<<if $rescue is 1>>
		<span id="next"><<link [[Next->Abomination Old]]>><</link>></span><<nexttext>>
	<<else>>
		<<set $alarm to 0>>
		<<if $enemyarousal gte $enemyarousalmax>>
			<span id="next"><<link [[Next->Abomination Old]]>><</link>></span><<nexttext>>
		<<else>>
			<span id="next"><<link [[Next->Abomination Old]]>><</link>></span><<nexttext>>
		<</if>>
	<</if>>
<<elseif $enemyarousal gte $enemyarousalmax>>
	<span id="next"><<link [[Next->Abomination Old]]>><</link>></span><<nexttext>>
<<elseif $enemyhealth lte 0>>
	<span id="next"><<link [[Next->Abomination Old]]>><</link>></span><<nexttext>>
<<else>>
	<span id="next"><<link [[Next->Abomination Old]]>><</link>></span><<nexttext>>
<</if>>

:: Swarm Test
<<if $molestationstart is 1>>
	<<set $molestationstart to 0>>
	<<molested>>
	<<controlloss>>
	<<set $combat to 1>>
<</if>>

<<underwater>><<effects>><<swarmeffects>>
<<swarm>>
<<swarmactions>>

<<if $stress gte $stressmax>>
	<span id="next"><<link [[Next|Swarm Test]]>><</link>></span><<nexttext>>
<<elseif $swimdistance lte 0>>
	<span id="next"><<link [[Next|Swarm Test]]>><</link>></span><<nexttext>>
<<else>>
	<span id="next"><<link [[Next|Swarm Test]]>><</link>></span><<nexttext>>
<</if>>

:: Monster Test

<<location "sea">><<effects>>

<<if $molestationstart is 1>><<set $molestationstart to 0>>
	<<set $combat to 1>>
	<<molested>>
	<<controlloss>>

	<<set $enemytype to "tentacles">>
	<<tentaclestart 6 15>>

	<<set $vorestage to 1>>
	<<set $vorecreature to "whale">>
	<<set $vorestrength to 1>><<set $position to "doggy">>
	<<if $hallucinations gte 1>>
		<<set $voretentacles to 1>>
	<<else>>
		<<set $voretentacles to 0>>
	<</if>>

	<<swarminit "fish" "swarm" "moving towards you" "encircle you" "fend off" 1 9>>

	<<set $swimdistance to 20>>
	<<set $water to 1>>
	<<resetLastOptions>>
	<<getCombatDefaultsType>>
<</if>>

<<voreeffects>><<swarmeffects>><<effectstentacles>>
<<vore>><<swarm>><<tentacles>>
<<statetentacles>>
<<actionsOmni>>

<<if $stress gte $stressmax>>
	<span id="next"><<link [[Next|Monster Test]]>><</link>></span><<nexttext>>
<<elseif $vorestage lte 0>>
	<span id="next"><<link [[Next|Monster Test]]>><</link>></span><<nexttext>>
<<else>>
	<span id="next"><<link [[Next|Monster Test]]>><</link>></span><<nexttext>>
<</if>>

:: DP Test

<<if $molestationstart is 1>>
	<<set $molestationstart to 0>>
	<<controlloss>>
	<<violence 1>>
	<<neutral 1>>
	<<molested>>
	<<generate1>><<generate2>><<maninit>>
	<<set $NPCList[0].penis to "vagina">><<set $vaginause to "penis">><<set $vaginastate to "penetrated">><<set $vaginatarget to 0>>
	<<set $NPCList[1].penis to "anus">><<set $anususe to "penis">><<set $anusstate to "penetrated">><<set $anustarget to 1>>
<</if>>

<<effects>>
<<effectsman>>
<<alarmstate>>
<<man>>
<<stateman>>
<br><br>
<<actionsman>>

<<if $alarm is 1>>
	<<if $rescue is 1>>
		<span id="next"><<link [[Next->DP Test]]>><</link>></span><<nexttext>>
	<<else>>
		<<set $alarm to 0>>
		<<if $enemyarousal gte $enemyarousalmax>>
			<span id="next"><<link [[Next->Molestation Ejaculation]]>><</link>></span><<nexttext>>
		<<elseif $enemyhealth lte 0>>
			<span id="next"><<link [[Next->Molestation Escape]]>><</link>></span><<nexttext>>
		<<else>>
			<span id="next"><<link [[Next->DP Test]]>><</link>></span><<nexttext>>
		<</if>>
	<</if>>
<<elseif $enemyarousal gte $enemyarousalmax>>
	<span id="next"><<link [[Next->Molestation Ejaculation]]>><</link>></span><<nexttext>>
<<elseif $enemyhealth lte 0>>
	<span id="next"><<link [[Next->Molestation Escape]]>><</link>></span><<nexttext>>
<<else>>
	<span id="next"><<link [[Next->DP Test]]>><</link>></span><<nexttext>>
<</if>>

:: Wolf Pack
<<if $molestationstart is 1>>
	<<set $molestationstart to 0>>
	<<controlloss>>
	<<violence 1>>
	<<neutral 1>>
	<<molested>>
	<<beastNEWinit 1 dog>>
	<<beastCombatInit>>

	<<beastTrainGenerate>>

	You awaken to find yourself surrounded by a pack of stray dogs!
<</if>>

<<effects>>
<<effectsman>>
<<alarmstate>>
<<beast $enemyno>>
<br><br>

<<stateman>>
<br><br>
<<actionsman>>

<<if $alarm is 1>>
	<<set $alarm to 0>>
	<<if $enemyarousal gte $enemyarousalmax>>
		<span id="next"><<link [[Next|Wolf Pack Ejaculation]]>><</link>></span><<nexttext>>
	<<elseif $enemyhealth lte 0>>
		<span id="next"><<link [[Next->Wolf Pack Escape]]>><</link>></span><<nexttext>>
	<<else>>
		<span id="next"><<link [[Next|Wolf Pack]]>><</link>></span><<nexttext>>
	<</if>>

	<<elseif $enemyarousal gte $enemyarousalmax>>
		<span id="next"><<link [[Next->Wolf Pack Ejaculation]]>><</link>></span><<nexttext>>
	<<elseif $enemyhealth lte 0>>
		<span id="next"><<link [[Next->Wolf Pack Escape]]>><</link>></span><<nexttext>>
	<<else>>
		<span id="next"><<link [[Next->Wolf Pack]]>><</link>></span><<nexttext>>
<</if>>

:: Wolf Pack Escape
<<effects>>
<<beastwound>>
<<if $combatTrain.length gt 0>>
	The beast recoils in pain and fear, but another takes its place.
	<<beastNEWinit $combatTrain.numberPerTrain[0] $combatTrain.beastTypes[0]>>
	<<combatTrainAdvance>>
	<br><br>
	<<link [[Next|Wolf Pack]]>><</link>>
<<else>>
	The beast recoils in pain and fear.
	<br><br>
	<<link [[Next|Wolf Pack End]]>><</link>>
<</if>>

:: Wolf Pack Ejaculation
<<effects>>
<<beastejaculation>>
<<if $combatTrain.length gt 0>>
	Satisfied, the beast leaves you be. Another takes its place.
	<<beastNEWinit $combatTrain.numberPerTrain[0] $combatTrain.beastTypes[0]>>
	<<combatTrainAdvance>>
	<br><br>
	<<link [[Next|Wolf Pack]]>><</link>>
<<else>>
	Satisfied, the beast leaves you be.
	<br><br>
	<<link [[Next|Wolf Pack End]]>><</link>>
<</if>>

:: Wolf Pack End
<<effects>>

<<if $enemywounded is 1 and $enemyejaculated is 0>>
	The wolf whimpers and flees into the forest.
<<elseif $enemywounded is 0 and $enemyejaculated is 1>>
	The wolf leaves you lying on the grass.
<<elseif $enemywounded gte 2 and $enemyejaculated is 0>>
	Feeling that you're more trouble than you're worth, the wolves flee into the forest.
<<elseif $enemywounded is 0 and $enemyejaculated gte 2>>
	The wolves leave you spent and shivering on the grass.
<<elseif $enemywounded gte 1 and $enemyejaculated gte 1>>
	The wolves leave you spent and shivering on the grass. One seems to be limping.
<</if>>
<br><br>

<<clotheson>>
<<endcombat>>

<<link [[It was just a dream|Bedroom]]>><</link>>

:: Named NPC Gangbang Select

Add the NPCs you want.<br>
<<if $enemyno lt 6>>
	<<if !($npc.includes("Alex"))>>
		<<link [[Add Alex|$passage]]>><<npc Alex -1>><</link>><br>
	<</if>>
	<<if !($npc.includes("Avery"))>>
		<<link [[Add Avery|$passage]]>><<npc Avery -1>><</link>><br>
	<</if>>
	<<if !($npc.includes("Bailey"))>>
		<<link [[Add Bailey|$passage]]>><<npc Bailey -1>><</link>><br>
	<</if>>
	<<if !($npc.includes("Briar"))>>
		<<link [[Add Briar|$passage]]>><<npc Briar -1>><</link>><br>
	<</if>>
	<<if !($npc.includes("Charlie"))>>
		<<link [[Add Charlie|$passage]]>><<npc Charlie -1>><</link>><br>
	<</if>>
	<<if !($npc.includes("Darryl"))>>
		<<link [[Add Darryl|$passage]]>><<npc Darryl -1>><</link>><br>
	<</if>>
	<<if !($npc.includes("Doren"))>>
		<<link [[Add Doren|$passage]]>><<npc Doren -1>><</link>><br>
	<</if>>
	<<if !($npc.includes("Eden"))>>
		<<link [[Add Eden|$passage]]>><<npc Eden -1>><</link>><br>
	<</if>>
	<<if !($npc.includes("Gwylan"))>>
		<<link [[Add Gwylan|$passage]]>><<npc Gwylan -1>><</link>><br>
	<</if>>
	<<if !($npc.includes("Harper"))>>
		<<link [[Add Harper|$passage]]>><<npc Harper -1>><</link>><br>
	<</if>>
	<<if !($npc.includes("Jordan"))>>
		<<link [[Add Jordan|$passage]]>><<npc Jordan -1>><</link>><br>
	<</if>>
	<<if !($npc.includes("Kylar"))>>
		<<link [[Add Kylar|$passage]]>><<npc Kylar -1>><</link>><br>
	<</if>>
	<<if !($npc.includes("Landry"))>>
		<<link [[Add Landry|$passage]]>><<npc Landry -1>><</link>><br>
	<</if>>
	<<if !($npc.includes("Leighton"))>>
		<<link [[Add Leighton|$passage]]>><<npc Leighton -1>><</link>><br>
	<</if>>
	<<if !($npc.includes("Mason"))>>
		<<link [[Add Mason|$passage]]>><<npc Mason -1>><</link>><br>
	<</if>>
	<<if !($npc.includes("Morgan"))>>
		<<link [[Add Morgan|$passage]]>><<npc Morgan -1>><</link>><br>
	<</if>>
	<<if !($npc.includes("Niki"))>>
		<<link [[Add Niki|$passage]]>><<npc Niki -1>><</link>><br>
	<</if>>
	<<if !($npc.includes("Quinn"))>>
		<<link [[Add Quinn|$passage]]>><<npc Quinn -1>><</link>><br>
	<</if>>
	<<if !($npc.includes("Remy"))>>
		<<link [[Add Remy|$passage]]>><<npc Remy -1>><</link>><br>
	<</if>>
	<<if !($npc.includes("River"))>>
		<<link [[Add River|$passage]]>><<npc River -1>><</link>><br>
	<</if>>
	<<if !($npc.includes("Robin"))>>
		<<link [[Add Robin|$passage]]>><<npc Robin -1>><</link>><br>
	<</if>>
	<<if !($npc.includes("Sam"))>>
		<<link [[Add Sam|$passage]]>><<npc Sam -1>><</link>><br>
	<</if>>
	<<if !($npc.includes("Sirris"))>>
		<<link [[Add Sirris|$passage]]>><<npc Sirris -1>><</link>><br>
	<</if>>
	<<if !($npc.includes("Sydney"))>>
		<<link [[Add Sydney|$passage]]>><<npc Sydney -1>><</link>><br>
	<</if>>
	<<if !($npc.includes("Whitney"))>>
		<<link [[Add Whitney|$passage]]>><<npc Whitney -1>><</link>><br>
	<</if>>
	<<if !($npc.includes("Winter"))>>
		<<link [[Add Winter|$passage]]>><<npc Winter -1>><</link>><br>
	<</if>>
	<<if !($npc.includes("Wren"))>>
		<<link [[Add Wren|$passage]]>><<npc Wren -1>><</link>><br>
	<</if>>
	<<if !($npc.includes("Zephyr"))>>
		<<link [[Add Zephyr|$passage]]>><<npc Zephyr -1>><</link>><br>
	<</if>>
<</if>>
<br><br>
<<if $enemyno gte 1>>
	<<for _lll to 0; _lll lt $enemyno; _lll++>>
		$npc[_lll] is active.<br>
	<</for>><br>
	<<link "Remove $npc[0]"$passage>><<endnpc `$npc[0]`>><</link>><br>
	<<if $enemyno gte 2>>
		<<link "Remove $npc[1]"$passage>><<endnpc `$npc[1]`>><</link>><br>
	<</if>>
	<<if $enemyno gte 3>>
		<<link "Remove $npc[2]"$passage>><<endnpc `$npc[2]`>><</link>><br>
	<</if>>
	<<if $enemyno gte 4>>
		<<link "Remove $npc[3]"$passage>><<endnpc `$npc[3]`>><</link>><br>
	<</if>>
	<<if $enemyno gte 5>>
		<<link "Remove $npc[4]"$passage>><<endnpc `$npc[4]`>><</link>><br>
	<</if>>
	<<if $enemyno is 6>>
		<<link "Remove $npc[5]"$passage>><<endnpc `$npc[5]`>><</link>><br>
	<</if>>
	<<if $enemyno gte 2>>
		<<link [[Remove all NPCs|$passage]]>><<endnpc>><</link>><br>
	<</if>>
	<br><br>
	<<link [[Named NPC Gangbang]]>><<set $sexstart to 1>><</link>>
<</if>>

:: Named NPC Gangbang
<<if $sexstart is 1>>
	<<set $sexstart to 0>>
	<<consensual>>
	<<set $consensual to 1>>
	<<neutral 1>>
	<<maninit>>
	<<if $possessed is true>>
		<<set $enemyanger to 200>><<npcidlegenitals>>
	<</if>>
<</if>>

<<effects>>
<<effectsman>>
<<man>>
<<stateman>>
<br><br>
<<actionsman>>

<<if _combatend or _controlRegain is 1>>
	<span id="next"><<link [[Next|Named NPC Gangbang Finish]]>><</link>></span><<nexttext>>
<<else>>
	<span id="next"><<link [[Next|Named NPC Gangbang]]>><</link>></span><<nexttext>>
<</if>>

:: Named NPC Gangbang Finish
<<if $enemyarousal gte $enemyarousalmax>>
	<<ejaculation>><br>
<<elseif $enemyhealth lte 0>>
	You've beaten their ass.
<<elseif $finish is 1>>
	You ended it prematurely.
<<elseif $possessed is true and $control gte $controlmax>>
	You maxed out your control.
	<<set $possessed to 0>><<set _possess to 1>>
<</if>>
<br>
<<clotheson>>
<<if _possess>>
	<<link [[Go again|Possessed Fight Test]]>><<endcombat>><<set $possessed to true>><<set $control to 0>><</link>><<lllcontrol>><<note "+ Wraith" "wraith">><br>
<<else>>
	<<link [[Select NPCs|Named NPC Gangbang Select]]>><<endcombat>><</link>><br>
<</if>>
<<link [[Back Home|Bedroom]]>><<endcombat>><</link>>

:: Wraith Test Start
<<set $outside to 0>><<set $location to "home">><<effects>>
<!-- Generate Ivory Wraith -->
<<generateWraith 1 true>><<person1>><<rainWraith>>
You find yourself standing before your mirror. You trace a holy symbol on it, and a baleful red glow begins to emanate from it. A beautiful pale figure stares back. It presses a hand against the mirror.
<br><br>
"<span class="wraith">I can feel your heartbeat. I am already inside you. Won't you give in?</span>"
<br><br>
How do you respond?
<br><br>
<<link [[As One.|Wraith Test]]>><<set $wraith.select to "man">><</link>>
<br>
<<link [[The Writhing Ensues.|Wraith Test]]>><<set $wraith.select to "tentacles">><</link>>
<br>
<<link [[Enveloped by Nothing.|Wraith Test]]>><<set $wraith.select to "slimetentacles">><</link>>
<br>
<<link [[Dissolve.|Wraith Test]]>><<set $wraith.select to "slime">><</link>>
<br>
<<link [[Immaculate Vanity.|Wraith Test]]>><<set $wraith.select to "arms">><</link>>
<br>
<<link [[The Power of Lust.|Wraith Test]]>><<set $wraith.select to "abomination">><</link>>
<br>
<<link [[Surprise Me.|Wraith Test]]>><<set $wraith.select to "random">><</link>>
<br>
<<link [[I'm going to jump out my window now, bye.|Domus Street]]>><<endWraith>><<clearWraith>><<set $eventskip to 1>><</link>>
<br>

:: Wraith Test
<<effects>>
<<if $wraith.select is "random">>
	<<switch random(1, 6)>>
		<<case 1>>
			<<set $wraith.select to "man">>
		<<case 2>>
			<<set $wraith.select to "tentacles">>
		<<case 3>>
			<<set $wraith.select to "slimetentacles">>
		<<case 4>>
			<<set $wraith.select to "slime">>
		<<case 5>>
			<<set $wraith.select to "arms">>
		<<case 6>>
			<<set $wraith.select to "abomination">>
	<</switch>>
<</if>>
<<if ($wraith.select.includes("slime") and $slimedisable is "t") or (($wraith.select.includes("tentacle") or $wraith.select is "abomination") and $tentacledisable is "t")>>
	The image in the mirror freezes, and the figure's face becomes blank. A message appears on the surface:
	<br><br>
	<span class="red">ERROR: You have chosen or randomly rolled an option disabled by your current settings. Please enable both slimes and tentacles. If both are already enabled, please tell PurityGuy that he's an idiot.</span>
	<br><br>
	The figure unfreezes, and shakes its head. It then looks at you. "<span class="wraith">Get fucked.</span>" Your mirror shatters, and signals for replacement. When you blink, it's been fixed.
	<br><br>
	<<link [[Next...?|Bedroom]]>><<endWraith>><</link>>
	<br>
<<else>>
	<<initWraith $wraith.select>>
	<<switch $wraith.gen>>
		<<case "man">>
			A pale arm reaches out from the mirror and lifts your chin. "<span class="wraith">Forever,</span> <span class="tentacle">As One.</span>" It steps from the mirror.
		<<case "tentacles">>
			The space behind the figure begins to distort. A mass of pale tentacles shoot out from the mirror, violently pinning you to the wall and destroying your clothes.
			<<clothesruined>><<legsruined>><<feetruined>>
			<br><br>
			"<span class="wraith">The writhing ensues.</span>" The figure steps out of the mirror.
		<<case "slimetentacles">>
			The space behind the figure begins to distort. A mass of pale tentacles shoot out from the mirror, violently pinning you to the wall and destroying your clothes.
			<br><br>
			It raises its hand, and a swirling portal appears above you. Slimes begin to pour out and cover you.
			<br><br>
			"<span class="wraith">Be enveloped by nothing.</span>"
			<<clothesruined>><<legsruined>><<feetruined>>
		<<case "slime">>
			The figure raises a hand as it steps from the mirror. From behind it, a group of pale slimes leap at you! "<span class="wraith">Dissolve the shell to have your way with the flesh.</span>"
		<<case "arms">>
			The figure steps out from the mirror. As it emerges before you, several extra pairs of arms spring out from its back. "<span class="wraith">Kneel before my immaculate form.</span>"
		<<case "abomination">>
			The space behind the figure begins to distort. A mass of pale tentacles shoot out from the mirror as it steps out. "<span class="wraith">Embrace the power of lust.</span>"
	<</switch>>
	<br><br>
	<<link [[Next|Wraith Test Sex]]>><</link>>
<</if>>

:: Wraith Test Sex
<<effects>>
<<if $struggle_start is 1>>
	<<set $combat to 1>>
	<<controlloss>>
	<<violence 1>>
	<<molested>>
	<<if $player.penisExist>>
		<<set $struggle.penis.creature to "pale slime">><<set $penisuse to "struggle">><<set $penisstate to "struggle">><<set $struggle.enemy[0].location to "penis">>
	<<else>>
		<<set $struggle.vagina.creature to "pale slime">><<set $vaginause to "struggle">><<set $vaginastate to "struggle">><<set $struggle.enemy[0].location to "vagina">>
	<</if>>
	<<unset $struggle_start>>
<<elseif $molestationstart is 1>>
	<<set $molestationstart to 0>>
	<<controlloss>>
	<<violence 1>>
	<<neutral 1>>
	<<molested>>
	<<set $enemytype to $wraith.type>>
<</if>>
<<set $rescue to 0>>

<<effectsWraith>>

<<switch $wraith.type>>
	<<case "man">>
		<<if $enemyarousal gte $enemyarousalmax>>
			<span id="next"><<link [[Next|Wraith Test Sex Finish]]>><</link>></span><<nexttext>>
		<<elseif $enemyhealth lte 0>>
			<span id="next"><<link [[Next|Wraith Test Sex Finish]]>><</link>></span><<nexttext>>
		<<else>>
			<span id="next"><<link [[Next|Wraith Test Sex]]>><</link>></span><<nexttext>>
		<</if>>
	<<case "tentacles">>
		<<if $tentacles.active lte ($tentacles.max / 2)>>
			<span id="next"><<link [[Next|Wraith Test Sex Finish]]>><</link>></span><<nexttext>>
		<<else>>
			<span id="next"><<link [[Next|Wraith Test Sex]]>><</link>></span><<nexttext>>
		<</if>>
	<<case "slime">>
		<<if $struggle.done gte $struggle.number>>
			<span id="next"><<link [[Next|Wraith Test Sex Finish]]>><</link>></span><<nexttext>>
		<<else>>
			<span id="next"><<link [[Next|Wraith Test Sex]]>><</link>></span><<nexttext>>
		<</if>>
<</switch>>
<br>
<<link [[Back to the bedroom|Bedroom]]>><<endcombat>><<endWraith>><<clotheson>><</link>>
<br><br><br><br>

:: Wraith Test Sex Finish
<<effects>>

<<switch $wraith.type>>
	<<case "man">>
		<<if $enemyhealth lte 0>>
			The figure looks down at you in shock as it staggers backwards.
			<<if $wraith.gen is "abomination">>
				The tentacles drop lifelessly to the ground, and sublimate into a pink mist.
			<<elseif $wraith.gen is "arms">>
				Its extra arms fold back in.
			<</if>>
			Its head snaps back, and it dissipates into nothingness with a brief shriek that echoes in your mind. Your ears ring, and you think you hear laughter. "<span class="wraith">Worry not, we'll meet again soon.</span>"
			<br><br>
			<<tearful>> you sit against you bed, wondering if what just happened was real.
			<<set $wraith.defeated++>>
		<<else>>
			<<ejaculation>>
			With a bright flash, it vanishes. You feel lewd energy linger in the air, and its laughs echo between your ears. "<span class="wraith">Worry not, we'll meet again soon.</span>"
			<br><br>
			<<tearful>> you sit against you bed, wondering if what just happened was real.
		<</if>>
	<<case "tentacles">>
		The tentacles retreat from you, back to the pale figure's side.<<if $wraith.gen is "slimetentacles">> The slimes quickly follow.<</if>> It gives you a regal bow, before stepping back into your mirror, which promptly shatters behind it.
		<br><br>
		You blink, and your mirror looks normal again. <<tearful>> you sit against you bed, wondering if what just happened was real.
	<<case "slime">>
		The slimes disengage, retreating back to the figure. It picks one up, and begins to pet it as it walks back though your mirror.
		<br><br>
		<<tearful>> you sit against you bed, wondering if what just happened was real.
<</switch>>

<<clotheson>>
<<endcombat>>
<<endWraith>>

<<link [[Next|Bedroom]]>><<set $eventskip to 1>><</link>>
<br>

:: Plantperson Test
<br>
<<if $plantdisable is "f" or $tentacledisable is "f">>
	<<link [[Consensual sex in the forest|Plantperson Test Sex]]>><<set $sexstart to 1>><<set $location to "forest">><</link>><br>
	<<link [[Nonconsensual sex in the forest|Plantperson Test Sex]]>><<set $molestationstart to 1>><<set $location to "forest">><</link>><br>
	<<link [[Consensual sex in the moor|Plantperson Test Sex]]>><<set $sexstart to 1>><<set $location to "moor">><</link>><br>
	<<link [[Nonconsensual sex in the moor|Plantperson Test Sex]]>><<set $molestationstart to 1>><<set $location to "moor">><</link>>
<<else>>
	<b>Plantpeople/tentacles are disabled or otherwise unavailable.</b> I don't know what you're trying to do here.
	<br><br>
	<<link [[Enable plantpeople|Plantperson Test]]>><<hallucinogen 10>><<set $plantdisable to "f">><<set $tentacledisable to "f">><</link>><<ghallucinogens>>
<</if>>
<br><br>
<<link [[Back home|Bedroom]]>><<endevent>><</link>>

:: Plantperson Test Sex
<<if $sexstart is 1 or $molestationstart is 1>>
	<<if $sexstart is 1>>
		<<set $sexstart to 0>>
		<<consensual>><<set $consensual to 1>>
		<<neutral 1>>
	<<elseif $molestationstart is 1>>
		<<set $molestationstart to 0>>
		<<controlloss>>
		<<violence 1>>
		<<neutral 1>>
		<<molested>>
	<</if>>
	<<generatePlant1>><<person1>>
	<<maninit "plant">><<npcexpose>>
	<<if $location is "forest">>
		<<enable_rescue>>
	<</if>>
	<<set $enemyarousalmax to 800>>
	<<set _randomtentacles to random(6, 10)>>
	<<makeAbomination _randomtentacles 10 "vine" "vine" true>>
	"Hi there!" A <<person>> pops up in front of you, <<plant_details>> strewn through <<his>> hair because you're in the $location and it's <<print Time.season>>. "You're cute! I'm gonna fuck you with my vines!"
	<br>
	A bunch of vines pop out of the ground.
<</if>>
<<effects>>
<<effectsabomination>><<abomination>>
<<stateabomination>>
<br><br>
<<actionsabomination>>

<<if $finish is 1>>
	<span id="next"><<link [[FINISH|Plantperson Test Sex Finish]]>><</link>></span><<nexttext>>
<<elseif $enemyhealth lte 0>>
	<span id="next"><<link [[HEALTH|Plantperson Test Sex Finish]]>><</link>></span><<nexttext>>
<<elseif $enemyarousal gte $enemyarousalmax>>
	<span id="next"><<link [[ORGASM|Plantperson Test Sex Finish]]>><</link>></span><<nexttext>>
<<elseif $alarm is 1 and $rescue is 1>>
	<span id="next"><<link [[RESCUE|Plantperson Test Sex Finish]]>><</link>></span><<nexttext>>
<<else>>
	<span id="next"><<link [[Next|Plantperson Test Sex]]>><</link>></span><<nexttext>>
<</if>>
<br>
<<link [[Emergency exit|Plantperson Test Sex Finish]]>><<set $finish to 1>><</link>>
<br><br><br><br>

:: Plantperson Test Sex Finish
<<effects>>
<<if $enemyarousal gte $enemyarousalmax>>
	<<ejaculation>>
	<<if _orgasm>>
		"That was great!" the <<person>> cheers. "And thanks for cumming in me! Later!"
	<<else>>
		"That was fun!" the <<person>> chirps. "Later!"
	<</if>>
	<<He>> digs back into the ground, and <<his>> vines follow. One of the vines waves at you.
<<elseif $enemyhealth lte 0>>
	"Ow!" the <<person>> whines. "You're no fun!" <<He>> digs back into the ground, and <<his>> vines follow. One of the vines flips you off, somehow.
<<elseif $alarm is 1 and $rescue is 1>>
	You hear a gun fire close by, and a bullet lands at the <<persons>> feet. "Fuck," <<he>> hisses. "It's the <<nnpc_title "Eden">>. Fuck. Fuck shit fuck. Um." <<He>> grabs your face and gives you a syrupy kiss on each cheek, before pulling away from you. "See ya! I'm out!"
	<<bodyliquid "face" "goo">>
	<br><br>

	The <<person>> retracts <<his>> vines and retreats into the forest right as Eden emerges. <<nnpc_He "Eden">> helps you collect yourself. "Damn hikers," <<nnpc_he "Eden">> mutters. "Are you okay?"
<<else>>
	"Emergency exit? Bummer," the <<person>> says. <<He>> shrugs. "Oh well. Fuck your holes until you're a gibbering mess hopelessly addicted to my nectar later!" <<He>> digs back into the ground, and <<his>> vines follow. One of the vines checks <<his>> notifications on <<his>> phone.
<</if>>
<<endcombat>>
<<clotheson>>
<<link [[Do it again|Plantperson Test]]>><</link>><br>
<<link [[Back home|Bedroom]]>><</link>>

:: Possessed Fight Test
<<generateWraith>><<endevent>>
<<if !$wraith.will>>
	<<set $wraith.will to random(1300, 1700)>>
<</if>>
<br>
You feel a tap on your shoulder. You turn around. Nothing is there. You turn back.
<br><br>

"<span class="wraith">Boo.</span>"
<br><br>

You open your mouth to scream, but it is already inside you.
<br><br>

<<link [[Fight a stranger|Possessed Fight]]>><<set $opponent to 1>><<set $fightstart to 1>><</link>><br>
<<link [[Fight Sydney|Possessed Fight]]>><<set $opponent to 2>><<set $fightstart to 1>><</link>><br>
<<link [[Select your named NPCs|Named NPC Gangbang Select]]>><</link>>

:: Possessed Fight
<<if $fightstart is 1>>
	<<set $fightstart to 0>>
	<<if $opponent is 1>>
		<<generate1>><<person1>>
		<<catcall>> A <<person>> reaches for you.
		<br><br>
		Your body is made to laugh. "<span class="wraith">Those who interrupt ghosts shall join them.</span>"
	<<elseif $opponent is 2>>
		<<npc Sydney>><<person1>>
		Sydney freezes in front of you. "Oh, no. Beloved, something's wrong, I can feel it."
		<br><br>
		Your body is made to laugh. "<span class="wraith">False. Everything is right in the world.</span>"
	<</if>>
	<<neutral 1>>
	<<maninit>>
	<<set $enemytrust -= 100>>
	<<set $enemyanger += 200>>
	<<npcidlegenitals>>
	<br><br>
<</if>>

<<effects>>
<<effectsman>><<man>>

<<stateman>>
<br><br>
<<actionsman>>

<<if $enemyhealth lte 0>>
	<span id="next" class="nextWraith"><<link [[HEALTH|Possessed Fight Finish]]>><</link>></span><<nexttext>>
<<elseif $enemyarousal gte $enemyarousalmax>>
	<span id="next" class="nextWraith"><<link [[ORGASM|Possessed Fight Finish]]>><</link>></span><<nexttext>>
<<elseif _controlRegain is 1>>
	<span id="next" class="nextWraith"><<link [[CONTROL|Possessed Fight Finish]]>><</link>></span><<nexttext>>
<<else>>
	<span id="next" class="nextWraith"><<link [[Next|Possessed Fight]]>><</link>></span><<nexttext>>
<</if>>

:: Possessed Fight Finish
<<effects>>
<<if $enemyarousal gte $enemyarousalmax>>
	<<ejaculation>>
	<br><br>
	<<tearful>> you recover. "<span class="wraith">Shall we dance again?</span>" your mouth is forced to ask.
	<br><br>
	<<clotheson>>
	<<endcombat>>
	<<link [[Fight again|Possessed Fight]]>><<endevent phaseless>><<set $fightstart to 1>><</link>>
	<br>
	<<link [[Freshen up, then fight again|Possessed Fight]]>><<endevent phaseless>><<set $fightstart to 1>><<set $pain to 0>><<set $arousal to 0>><</link>><<lpain>><<larousal>>

<<elseif $enemyhealth lte 0>>
	<<if $opponent is 1>>
		The <<person>> falls back, and scrambles away.
	<<elseif $opponent is 2>>
		Sydney moans, slaps a hand over <<his>> mouth, and runs away.
	<</if>>
	<br><br>
	<<tearful>> you recover. "<span class="wraith">Shall we dance again?</span>" your mouth is forced to ask.
	<br><br>
	<<clotheson>>
	<<endcombat>>
	<<link [[Fight again|Possessed Fight]]>><<set $fightstart to 1>><<endevent phaseless>><</link>>
	<br>
	<<link [[Freshen up, then fight again|Possessed Fight]]>><<set $fightstart to 1>><<endevent phaseless>><<set $pain to 0>><<set $arousal to 0>><</link>><<lpain>><<larousal>>

<<else>>
	<<set $possessed to 0>>
	You regain control in your body, and rip the pale figure out of your chest like you're pulling a rabbit out of a hat.
	<<if $opponent is 1>>The <<person>>, justifiably terrified by this development, scrambles away.<</if>>
	<br><br>
	"<span class="wraith">Congratulations. You won.</span>" It pats you on the head, then vanishes in a torrent of water.
	<<if $opponent is 2>>Sydney is nowhere to be seen.<</if>>
	<br><br>
	<<tearful>> you try to decide if you want to go again or not.
	<br><br>
	<<clotheson>>
	<<endcombat>>
	<<link [[Fight again|Possessed Fight]]>><<set $possessed to true>><<set $control to 0>><<set $fightstart to 1>><<endevent phaseless>><</link>><<lllcontrol>><<note "+ Wraith" "wraith">>
	<br>
	<<link [[Freshen up, then fight again|Possessed Fight]]>><<set $possessed to true>><<set $control to 0>><<set $fightstart to 1>><<endevent phaseless>><<set $pain to 0>><<set $arousal to 0>><</link>><<lpain>><<larousal>><<lllcontrol>><<note "+ Wraith" "wraith">>
	<br>
	<<link [[Decision room|Possessed Fight Test]]>><<set $possessed to true>><<set $control to 0>><</link>><<lllcontrol>><<note "Also + Wraith" "wraith">>
<</if>>
<br><br>
<<link [[Back home|Bedroom]]>><<set $possessed to 0>><<endevent>><<unset $opponent>><</link>>

:: NPC Role Select
<br>
The lights flash on. You find yourself in a strange chamber, completely smooth and featureless. There is a sign on the wall that says <span class="orange">DEBUG</span> in bright orange letters. A large, opaque tube reaches to the ceiling, The words <span class="blue">CUSTOM CONSTRUCT</span> are labelled on the front.
<br>
A terminal is attached to the tube. You look at the prompts.
<br><br>
<i>Please select the construct's descriptor. Leave blank for default generation.</i>
<br>

<<if $npcselectdesc is undefined>><<set $npcselectdesc to "custom">><</if>>
<<textbox "$npcselectdesc" $npcselectdesc>>
<br><br>

<i>Please select the construct's role. Leave blank for default generation.</i>
<br>

<<if $npcselectrole is undefined>><<set $npcselectrole to "construct">><</if>>
<<textbox "$npcselectrole" $npcselectrole>>
<br><br>

<<link [[Sex|NPC Role Fight]]>><<set $sexstart to 1>>
	<<if $npcselectdesc is undefined>><<set $npcselectdesc to "custom">><</if>>
	<<if $npcselectrole is undefined>><<set $npcselectrole to "construct">><</if>>
	<<set $npcselectdesc to Util.escape($npcselectdesc)>>
	<<set $npcselectrole to Util.escape($npcselectrole)>>
	<<generateRole 0 $npcselectdesc $npcselectrole>><<person1>>
	<<unset $npcselectdesc>><<unset $npcselectrole>>
<</link>>
<br>
<<link [[Fight|NPC Role Fight]]>><<set $fightstart to 1>>
	<<if $npcselectdesc is undefined>><<set $npcselectdesc to "custom">><</if>>
	<<if $npcselectrole is undefined>><<set $npcselectrole to "construct">><</if>>
	<<set $npcselectdesc to Util.escape($npcselectdesc)>>
	<<set $npcselectrole to Util.escape($npcselectrole)>>
	<<generateRole 0 $npcselectdesc $npcselectrole>><<person1>>
	<<unset $npcselectdesc>><<unset $npcselectrole>>
<</link>>
<br><br>
<<link [[Back home|Bedroom]]>><<unset $npcselectdesc>><<unset $npcselectrole>><</link>>

:: NPC Role Fight
<<if $sexstart is 1>>
	<<set $sexstart to 0>>
	<<consensual>>
	<<set $consensual to 1>>
	<<neutral 1>>

	<<maninit>>
	With a hiss of steam, the tube retracts to the ceiling. A figure walks out, a <<if $pronoun is "m">>man<<else>>woman<</if>>. You recognise <<him>> as the <<person>> you selected.
	<br><br>

	"Beginning sex encounter," the <<person>> says in a flat tone, before <<his>> face morphs into a lascivious smile. <<catcall>>
<<elseif $fightstart is 1>>
	<<set $fightstart to 0>>
	<<neutral 1>>

	<<maninit>>
	<<set $enemytrust -= 100>>
	<<set $enemyanger += 200>>
	<<npcidlegenitals>>
	With a hiss of steam, the tube retracts to the ceiling. A figure walks out, a <<if $pronoun is "m">>man<<else>>woman<</if>>. You recognise <<him>> as the <<person>> you selected.
	<br><br>

	"Beginning combat encounter," the <<person>> says in a flat tone, before <<his>> face morphs into an angry scowl. "Oh, you're in for it now!"
<</if>>

<<effects>>
<<effectsman>><<man>>

<<stateman>>
<br><br>
<<actionsman>>

<<if $finish is 1>>
	<span id="next"><<link [[FINISH|NPC Role Fight Finish]]>><</link>></span><<nexttext>>
<<elseif $enemyhealth lte 0>>
	<span id="next"><<link [[HEALTH|NPC Role Fight Finish]]>><</link>></span><<nexttext>>
<<elseif $enemyarousal gte $enemyarousalmax>>
	<span id="next"><<link [[ORGASM|NPC Role Fight Finish]]>><</link>></span><<nexttext>>
<<elseif $pain gte 100 and $willpowerpain is 0>>
	<span id="next"><<link [[PAIN|NPC Role Fight Finish]]>><</link>></span><<nexttext>>
<<else>>
	<span id="next"><<link [[Next|NPC Role Fight]]>><</link>></span><<nexttext>>
<</if>>
<br>
<<link [[Emergency exit|NPC Role Fight Finish]]>><<set $finish to 1>><</link>>
<br><br><br><br>

:: NPC Role Fight Finish
<<if $finish is 1>>
	"Test concluded," the <<person>> says in a flat tone, abruptly stepping back. "Restoring state to default."
<<elseif $enemyhealth lte 0>>
	"Test concluded," the <<person>> says in a flat tone, stepping away from you as if <<he>> weren't hurt at all. "Restoring state to default."
<<elseif $pain gte 100 and $willpowerpain is 0>>
	"Test concluded," the <<person>> says in a flat tone, stepping away from you. "Restoring state to default."
<<elseif $enemyarousal gte $enemyarousalmax>>
	<<ejaculation>>
	"Test concluded," the <<person>> says in a flat tone, stepping away from you. "Restoring state to default."
<</if>>
<br><br>

<<He>> walks back to the terminal and flicks a switch. <<He>> steps past it, and the tube descends from the ceiling over <<him>> again. Once the tube touches the floor, the lights switch off.
<br><br>

<<tearful>> you wonder what to do next.
<br><br>

<<endcombat>><<clotheson>>

<<link [[Create another construct|NPC Role Select]]>><</link>>
<br>
<<link [[Back home|Bedroom]]>><</link>>

:: NPC Clothing Select
<br>
The lights flash on. You find yourself in a strange chamber, completely smooth and featureless. There is a sign on the wall that says <span class="orange">DEBUG</span> in bright orange letters. A large, opaque tube reaches to the ceiling, The words <span class="blue">CUSTOM CONSTRUCT</span> are labelled on the front.
<br>
A terminal is attached to the tube. You look at the prompts.
<br><br>
<i>Please select the construct's outfit.</i>
<br>

<<set _clothesOptions to setup.npcClothesSets.map(c => c.name)>>

<<listbox "_npcClothes" autoselect>>
	<<optionsfrom _clothesOptions>>
<</listbox>>
<br><br>

<i>Please select the construct's configuration.</i>
<br>
<label>Male <<radiobutton "_npcPronoun" "m">></label> |
<label>Female <<radiobutton "_npcPronoun" "f">></label> |
<label>Use Settings <<radiobutton "_npcPronoun" "" checked>></label>
<br>

<label>Penis <<radiobutton "_npcGender" "m">></label> |
<label>Vagina <<radiobutton "_npcGender" "f">></label> |
<label>Both <<radiobutton "_npcGender" "h">></label> |
<label>Use Settings <<radiobutton "_npcGender" "" checked>></label>
<br>

<label>Teen <<radiobutton "_npcType" "t">></label> |
<label>Adult <<radiobutton "_npcType" "a">></label> |
<label>Random <<radiobutton "_npcType" "r" checked>></label>
<br><br>

<!-- storing the values and then generating the npc in the next passage is a bit more convenient for debugging. -->
<<link [[Sex|NPC Clothing Fight]]>>
	<<set $sexstart to 1>>
	<<set $npcOptions to {"type": _npcType, "pronoun": _npcPronoun, "gender": _npcGender, "clothes": _npcClothes}>>
<</link>>
<br>
<<link [[Rape|NPC Clothing Fight]]>>
	<<set $fightstart to 1>>
	<<set $npcOptions to {"type": _npcType, "pronoun": _npcPronoun, "gender": _npcGender, "clothes": _npcClothes}>>
<</link>>
<br><br>

<<link [[Back home|Bedroom]]>><</link>>

:: NPC Clothing Fight
<<if $sexstart is 1>>
	<<generateNPC 1 $npcOptions.type $npcOptions.pronoun $npcOptions.gender>><<person1>>
	<<run npcEquipSet($NPCList[0], setup.npcClothesSets.find(n => n.name === $npcOptions.clothes))>>
	<<unset $npcOptions>>

	<<set $sexstart to 0>>
	<<consensual>>
	<<set $consensual to 1>>
	<<neutral 1>>

	<<maninit>>
	With a hiss of steam, the tube retracts to the ceiling. A figure walks out, a <<personsimple>>. You recognise <<him>> as the <<person>> you selected.
	<br><br>

	"Beginning sexual encounter," the <<person>> says in a flat tone, before <<his>> face morphs into a lascivious smile. <<catcall>>
<<elseif $fightstart is 1>>
	<<generateNPC 1 $npcOptions.type $npcOptions.pronoun $npcOptions.gender>><<person1>>
	<<run npcEquipSet($NPCList[0], setup.npcClothesSets.find(n => n.name === $npcOptions.clothes))>>
	<<unset $npcOptions>>

	<<set $fightstart to 0>>
	<<neutral 1>>

	<<maninit>>
	With a hiss of steam, the tube retracts to the ceiling. A figure walks out, a <<personsimple>>. You recognise <<him>> as the <<person>> you selected.
	<br><br>

	"Beginning combat encounter," the <<person>> says in a flat tone, before <<his>> face morphs into an angry scowl. "Oh, you're in for it now!"
<</if>>

<<effects>>
<<effectsman>><<man>>

<<stateman>>
<br><br>
<<actionsman>>

<<if $finish is 1>>
	<span id="next"><<link [[FINISH|NPC Clothing Fight Finish]]>><</link>></span><<nexttext>>
<<elseif $enemyhealth lte 0>>
	<span id="next"><<link [[HEALTH|NPC Clothing Fight Finish]]>><</link>></span><<nexttext>>
<<elseif $enemyarousal gte $enemyarousalmax>>
	<span id="next"><<link [[ORGASM|NPC Clothing Fight Finish]]>><</link>></span><<nexttext>>
<<elseif $pain gte 100 and $willpowerpain is 0>>
	<span id="next"><<link [[PAIN|NPC Clothing Fight Finish]]>><</link>></span><<nexttext>>
<<else>>
	<span id="next"><<link [[Next|NPC Clothing Fight]]>><</link>></span><<nexttext>>
<</if>>
<br>
<<link [[Emergency exit|NPC Clothing Fight Finish]]>><<set $finish to 1>><</link>>
<br><br><br><br>

:: NPC Clothing Fight Finish
<<if $finish is 1>>
	"Test concluded," the <<person>> says in a flat tone, abruptly stepping back. "Restoring state to default."
<<elseif $enemyhealth lte 0>>
	"Test concluded," the <<person>> says in a flat tone, stepping away from you as if <<he>> weren't hurt at all. "Restoring state to default."
<<elseif $pain gte 100 and $willpowerpain is 0>>
	"Test concluded," the <<person>> says in a flat tone, stepping away from you. "Restoring state to default."
<<elseif $enemyarousal gte $enemyarousalmax>>
	<<ejaculation>>
	"Test concluded," the <<person>> says in a flat tone, stepping away from you. "Restoring state to default."
<</if>>
<br><br>

<<He>> walks back to the terminal and flicks a switch. <<He>> steps past it, and the tube descends from the ceiling over <<him>> again. Once the tube touches the floor, the lights switch off.
<br><br>

<<tearful>> you wonder what to do next.
<br><br>

<<endcombat>><<clotheson>>

<<link [[Create another construct|NPC Clothing Select]]>><</link>>
<br>
<<link [[Back home|Bedroom]]>><</link>>

:: NPCInsertionAssert
Generating two NPCs both at slot 0.
<<generate1>><<generate1>>

:: TimeTest
Manipulating time itself.
<br>
Distorting time by $timeDistortion.
<br>
<<set $timeStamp += $timeDistortion>>
<<run Time.set()>>
$$timeStamp = $timeStamp
<br>
hour = <<print Time.hour>>
<br>
minute = <<print Time.minute>>
<br><br>
<<link [[Fast-Forward (0:05)|TimeTest]]>><<set $timeDistortion to 5>><</link>>
<br>
<<link [[Fast-Backward -(0:05)|TimeTest]]>><<set $timeDistortion to -5>><</link>>
<br><br>
<<link [[Go back|$prevPassage]]>><<run delete $timeDistortion>><</link>>

:: NNPC Strapon Generator Widgets [widget]

<<widget "straponGeneratorOptions">>
	<i>Size:</i>
	<<listbox "_straponSize" autoselect>>
		<<option "regular" 2>>
		<<option "large" 3>>
		<<option "massive" 4>>
	<</listbox>>

	<i>Colour:</i>
	<<set _colourOptions to ["black","red","pink","purple","fleshy","blue","green"]>>

	<<listbox "_straponColour" autoselect>>
		<<optionsfrom _colourOptions>>
	<</listbox>>

	<i>Shape:</i>
	<<set _shapeOptions to ["dildo","penis","beaded dildo","horse cock","knotted cock","tentacle","dolphin cock","studded cock","fist dildo"]>>

	<<listbox "_straponShape" autoselect>>
		<<optionsfrom _shapeOptions>>
	<</listbox>>

	<i>Additional Modifier:</i>
	<<set _modifierOptions to ["","floppy","transparent","sparkly"]>>
	<<listbox "_straponModifier" autoselect>>
		<<optionsfrom _modifierOptions>>
	<</listbox>>
	<br><br>
<</widget>>


:: NNPC Strapon Generator
The lights flash on. You find yourself in a strange chamber, completely smooth and featureless.
There is a sign on the wall that says <span class="orange">DEBUG</span> in bright orange letters.
A large, opaque tube reaches to the ceiling, The words <span class="blue">CUSTOM CONSTRUCT</span> are labelled on the front.
<br>

<<set _nnpcOptions to $NPCName.filter(npc => npc.penis === "none")>>
<<set _nnpcOptions to _nnpcOptions.map(npc => npc.nam)>>

A terminal is attached to the tube.

<<if _nnpcOptions.length gte 1>>
	Its screen is a monochrome green. You look at the prompts. The first one surprises you. It's a list of the names of people you recognise, how peculiar...
	<br><br>
	<i>Please select the construct's model.</i>
	<br>


	<<listbox "_npcNameSelect" autoselect>>
		<<optionsfrom _nnpcOptions>>
	<</listbox>>
	<br><br>

	<i>Please design the construct's strap-on.</i>
	<br>
	<<set _straponSize to 3>>
	<span id="straponOptions">
	<<straponGeneratorOptions>>
	</span>

	<<button "<i>Randomise</i>">>
		<<set _straponSize to [2,3,4].random()>>
		<<set _straponColour to ["black","red","pink","purple","fleshy","blue","green"].random()>>
		<<set _straponShape to ["dildo","penis","beaded dildo","horse cock","knotted cock","tentacle","dolphin cock","studded cock","fist dildo"].random()>>
		<<set _straponModifier to ["","","floppy","transparent","sparkly"].random()>>
		<<replace "#straponOptions">><<straponGeneratorOptions>><</replace>>
	<</button>>
	<br><br>

	Having selected the desired options, your finger hovers over the "Create" button. You really have no idea what this strange device is about to do...
	<br><br>

	<<link [[Create Construct|NNPC Strapon Generator Sex]]>>
		<<npc _npcNameSelect>><<npcexpose>><<person1>>
		<<generateNewStrapon _straponSize _straponColour _straponShape _straponModifier>>
		<<npcstrapon 0>>
		<<setNPCStrapon $NPCList[0] _newStrapon>>
		<<set $sexstart to 1>>
	<</link>>
	<br><br>

<<else>>
	Its screen is a solid red colour, and it displays a message.
	<br><br>
	<span class="red"><i>Subject has no compatible candidates for construct in memory.</i></span>
	<br>
	<span class="red"><i>No actions available at this time.</i></span>
	<br><br>

<</if>>

<<link [[Back home|Bedroom]]>><</link>>


:: NNPC Strapon Generator Sex
<<if $sexstart is 1>>
	<<set $sexstart to 0>>
	<<consensual>>
	<<set $consensual to 1>>
	<<neutral 1>>

	<<maninit>>
	With a hiss of steam, the tube retracts to the ceiling.
	A figure walks out, looking identical to <<print $NPCList[0].fullDescription>>,
	<<if $NPCList[0].fullDescription is "Whitney">>
		although fully nude and holding a <<print $NPCList[0].strapon.description>> in <<his>> hand.
		<br><br>
		<<setNPCStrapon $NPCList[0] $NPCName[$NPCNameList.indexOf("Whitney")].strapons[0]>>
		"This thing is cute and all, but I've already got one", <<he>> says,
		throwing it away and pulling <<his>> favourite <<print $NPCList[0].strapon.description>> out of nowhere.
	<<else>>
		although fully nude and wearing a <<print $NPCList[0].strapon.description>>.
	<</if>>
	<br><br>

	"Beginning sex encounter," the <<personsimple>> says in a flat tone, before <<his>> face morphs into a lascivious smile. <<catcall>>
<</if>>

<<effects>>
<<effectsman>><<man>>

<<stateman>>
<br><br>
<<actionsman>>

<<if $finish is 1>>
	<span id="next"><<link [[FINISH|NNPC Strapon Generator Sex Finish]]>><</link>></span><<nexttext>>
<<elseif $enemyhealth lte 0>>
	<span id="next"><<link [[HEALTH|NNPC Strapon Generator Sex Finish]]>><</link>></span><<nexttext>>
<<elseif $enemyarousal gte $enemyarousalmax>>
	<span id="next"><<link [[ORGASM|NNPC Strapon Generator Sex Finish]]>><</link>></span><<nexttext>>
<<elseif $pain gte 100 and $willpowerpain is 0>>
	<span id="next"><<link [[PAIN|NNPC Strapon Generator Sex Finish]]>><</link>></span><<nexttext>>
<<else>>
	<span id="next"><<link [[Next|NNPC Strapon Generator Sex]]>><</link>></span><<nexttext>>
<</if>>
<br>
<<link [[Emergency exit|NNPC Strapon Generator Sex Finish]]>><<set $finish to 1>><</link>>
<br><br><br><br>

:: NNPC Strapon Generator Sex Finish
<<if $finish is 1>>
	"Test concluded," the <<personsimple>> says in a flat tone, abruptly stepping back. "Restoring state to default."
<<elseif $enemyhealth lte 0>>
	"Test concluded," the <<personsimple>> says in a flat tone, stepping away from you as if <<he>> weren't hurt at all. "Restoring state to default."
<<elseif $pain gte 100 and $willpowerpain is 0>>
	"Test concluded," the <<personsimple>> says in a flat tone, stepping away from you. "Restoring state to default."
<<elseif $enemyarousal gte $enemyarousalmax>>
	<<ejaculation>>
	"Test concluded," the <<personsimple>> says in a flat tone, stepping away from you. "Restoring state to default."
<</if>>
<br><br>

<<He>> walks back to the terminal and flicks a switch. <<He>> steps past it, and the tube descends from the ceiling over <<him>> again.
Once the tube touches the floor, the lights switch off.
<br><br>

<<tearful>> you wonder what to do next.
<br><br>

<<endcombat>><<clotheson>>

<<link [[Create another construct|NNPC Strapon Generator]]>><</link>>
<br>
<<link [[Back home|Bedroom]]>><</link>>

:: Cow Test Sex
<<if $sexstart is 1>>
	<<beastNEWinit 1 cow>>
	<<set $sexstart to 0>>
	<<consensual>>
	<<set $consensual to 1>>
	<<neutral 1>>
	<<beastCombatInit>>
<</if>>

<<effects>>
<<effectsman>>
<br>
<<beast $enemyno>>
<br><br>

<<stateman>>
<br><br>
<<actionsman>>

<<if _combatend>>
	<span id="next"><<link [[Next|Cow Test Sex Finish]]>><</link>></span><<nexttext>>
<<else>>
	<span id="next"><<link [[Next|Cow Test Sex]]>><</link>></span><<nexttext>>
<</if>>

:: Cow Test Sex Finish
<<if $enemyarousal gte $enemyarousalmax>>
	<<beastejaculation>>
	The <<beasttype>> is spent
	<br><br>
<<elseif $enemyhealth lte 0>>
	The <<beasttype>> can't take any more and runs away
	<br><br>
<<else>>
	The <<beasttype>> leaves
	<br><br>
<</if>>

<<clotheson>>
<<endcombat>>
<<link [[Find another cow|Cow Test Sex]]>><<set $sexstart to 1>><</link>>
<br>
<<link [[Go home|Bedroom]]>><</link>>
<br>

:: Named NPC Stalk Select
<<set $location to "town">><<set $bus to "domus">><<set $outside to 1>><<effects>>

<<if $phase is 1>>
	<<if $enemyno gte 2>>
		<<person1>>You hear footsteps behind you, from more than one person. <span class="blue">You feel followed.</span>
		<br><br>

		<<link [[Next|Street Stalk Group]]>><<set $molestationstart to 1>><</link>>
		<br>
	<<else>>
		<<person1>>You hear footsteps behind you. <span class="blue">You feel followed.</span>
		<br><br>

		<<link [[Next|Street Stalk]]>><<set $molestationstart to 1>><</link>>
		<br>
	<</if>>
<<else>>
	<<if $stalkTestNPC>>
		<<if $stalkTestNPC is "Ivory Wraith">>
			<<generateWraith 1>>
		<<else>>
			<<npc $stalkTestNPC>>
		<</if>>
		<<set $NPCList[0].skills to {athletics: random(1, 1000), security: random(1, 1000)}>>
		<<unset $stalkTestNPC>>
	<</if>>

	<<if $enemyno gte 1>>
		<<person1>>
		<<if $NPCList[0].fullDescription is "Ivory Wraith">>
			<span class="red">You are being hunted by <span class="wraith">the Ivory Wraith.</span></span>
		<<else>>
			<span class="red">You are being hunted by <<print $npc[$npcrow.indexOf(0)]>>.</span>
		<</if>>
		<br><br>

		<<His>> athletics skill is <span class="gold"><<print $NPCList[0].skills.athletics>></span>.
		<br>
		<<His>> security skill is <span class="gold"><<print $NPCList[0].skills.security>></span>.
		<br><br>
	<</if>>

	<<if $enemyno is 2>>
		<span class="teal"><<He>> will be accompanied by a <<person2>><<person>>.</span>
		<<person1>>
		<br><br>
	<<elseif $enemyno gte 3>>
		<<He>> will be accompanied by
		<<switch $enemyno>>
			<<case 6>><span class="pink">five</span>
			<<case 5>><span class="purple">four</span>
			<<case 4>><span class="blue">three</span>
			<<case 3>><span class="lblue">two</span>
		<</switch>>
		others.
		<br><br>
	<</if>>
	<<if $NPCList[0].fullDescription is "Ivory Wraith">>
		<span class="blue">You can't add any NPCs to accompany the Wraith.</span>
		<br>
		<<link [[Start test|Named NPC Stalk Select]]>><<set $phase to 1>><</link>>
		<br>
	<<else>>
		<<switch $enemyno>>
			<<case 6>>
				<span class="blue">You can't add any more NPCs.</span>
				<br><br>
				<<link [[Start test|Named NPC Stalk Select]]>><<set $phase to 1>><</link>>
				<br>
			<<case 5>>
				<<link [[Add another unnamed NPC|Named NPC Stalk Select]]>><<generate6>><</link>>
				<br>
				<<link [[Start test|Named NPC Stalk Select]]>><<set $phase to 1>><</link>>
				<br>
			<<case 4>>
				<<link [[Add another unnamed NPC|Named NPC Stalk Select]]>><<generate5>><</link>>
				<br>
				<<link [[Start test|Named NPC Stalk Select]]>><<set $phase to 1>><</link>>
				<br>
			<<case 3>>
				<<link [[Add another unnamed NPC|Named NPC Stalk Select]]>><<generate4>><</link>>
				<br>
				<<link [[Start test|Named NPC Stalk Select]]>><<set $phase to 1>><</link>>
				<br>
			<<case 2>>
				<<link [[Add another unnamed NPC|Named NPC Stalk Select]]>><<generate3>><</link>>
				<br>
				<<link [[Start test|Named NPC Stalk Select]]>><<set $phase to 1>><</link>>
				<br>
			<<case 1>>
				<<link [[Add an unnamed NPC|Named NPC Stalk Select]]>><<generate2>><</link>>
				<br>
				<<link [[Start test|Named NPC Stalk Select]]>><<set $phase to 1>><</link>>
				<br>
		<</switch>>
	<</if>>
	<<if $enemyno is 0>>
		Choose a named NPC.
		<br><br>

		<<link [[Avery|Named NPC Stalk Select]]>><<set $stalkTestNPC to "Avery">><</link>>
		<br>
		<<link [[Bailey|Named NPC Stalk Select]]>><<set $stalkTestNPC to "Bailey">><</link>>
		<br>
		<<link [[Briar|Named NPC Stalk Select]]>><<set $stalkTestNPC to "Briar">><</link>>
		<br>
		<<link [[Eden|Named NPC Stalk Select]]>><<set $stalkTestNPC to "Eden">><</link>>
		<br>
		<<link [[Harper|Named NPC Stalk Select]]>><<set $stalkTestNPC to "Harper">><</link>>
		<br>
		<<link [[Kylar|Named NPC Stalk Select]]>><<set $stalkTestNPC to "Kylar">><</link>>
		<br>
		<<link [[Leighton|Named NPC Stalk Select]]>><<set $stalkTestNPC to "Leighton">><</link>>
		<br>
		<<link [[Morgan|Named NPC Stalk Select]]>><<set $stalkTestNPC to "Morgan">><</link>>
		<br>
		<<link [[Whitney|Named NPC Stalk Select]]>><<set $stalkTestNPC to "Whitney">><</link>>
		<br>
		<<link [[Wraith|Named NPC Stalk Select]]>><<set $stalkTestNPC to "Ivory Wraith">><</link>>
		<br>
		<<link [[Someone else|Named NPC Stalk Select]]>><<set $stalkTestNPC to either("Alex","Charlie","Darryl","Doren","Gwylan","Jordan","Landry","Mason","Niki","Quinn","Remy","River","Robin","Sam","Sirris","Sydney","Wren", "Zephyr")>><</link>>
		<br>
	<</if>>
	<br>
	<<link [[Restart|Named NPC Stalk Select]]>><<endevent>><<set $phase to 0>><</link>>
	<br>
<</if>>

:: Hypnotist Test
<br>
<<link [[Consensual sex|Hypnotist Test Sex]]>><<set $sexstart to 1>><</link>>
<br>
<<link [[Nonconsensual sex|Hypnotist Test Sex]]>><<set $molestationstart to 1>><</link>>
<br>
<<link [[Harper|Hypnotist Test Sex]]>><<set $molestationstart to 1>><<set $phase to "Harper">><</link>>
<br>

<<if $tentacledisable is "f">>
	<<link [[Tentacles|Hypnotist Test Tentacles]]>><<set $molestationstart to 1>><</link>>
<<else>>
	<b>Tentacles are disabled or otherwise unavailable.</b> Enable tentacles to test tentacle hypnosis.
	<br><br>
	<<link [[Enable tentacles|Hypnotist Test]]>><<set $tentacledisable to "f">><</link>>
<</if>>
<br><br>
<<link [[Back home|Bedroom]]>><<endevent>><</link>>

:: Hypnotist Test Sex
<<if $sexstart is 1 or $molestationstart is 1>>
	<<if $sexstart is 1>>
		<<set $sexstart to 0>>
		<<consensual>><<set $consensual to 1>>
		<<neutral 1>>
	<<elseif $molestationstart is 1>>
		<<set $molestationstart to 0>>
		<<controlloss>>
		<<violence 1>>
		<<neutral 1>>
		<<molested>>
	<</if>>
	<<if $phase is "Harper">>
		<<npc Harper>><<person1>>
		Doctor Harper approaches you. "It's time to commit medical malpractice," <<he>> says.
	<<else>>
		<<generate1>><<person1>><<set $NPCList[0].traits.pushUnique("hypnotist")>>
		A <<person>> walks up to you. "Hey," <<he>> says. "You're feeling sleepy, or whatever. Let's get this over with."
	<</if>>
	<<maninit>><<enable_rescue>>
	<<set $NPCList[0].lefthand to "hypnosis">><<set $NPCList[0].lefttool to "pendant">>
	<br><br>
<</if>>
<<effects>>
<<effectsman>><<man>>
<<stateman>>
<br><br>
<<actionsman>>

<<if $alarm is 1 and $rescue is 1>>
	<span id="next"><<link [[FINISH|Hypnotist Test Sex Finish]]>><</link>></span><<nexttext>>
<<elseif $enemyhealth lte 0>>
	<span id="next"><<link [[HEALTH|Hypnotist Test Sex Finish]]>><</link>></span><<nexttext>>
<<elseif $enemyarousal gte $enemyarousalmax>>
	<span id="next"><<link [[ORGASM|Hypnotist Test Sex Finish]]>><</link>></span><<nexttext>>
<<else>>
	<span id="next"><<link [[Next|Hypnotist Test Sex]]>><</link>></span><<nexttext>>
<</if>>
<br>
<<link [[Emergency exit|Hypnotist Test Sex Finish]]>><<set $finish to 1>><</link>>
<br><br><br><br>

:: Hypnotist Test Sex Finish
<<effects>>
<<if $enemyarousal gte $enemyarousalmax>>
	<<ejaculation>>
	<<He>> nods and walks away, swaying <<his>> ass hypnotically.
<<elseif $enemyhealth lte 0>>
	<<He>> frowns. "Look, what's the point in testing this out if you're just going to beat me up?"
<<elseif $alarm is 1 and $rescue is 1>>
	"You managed to scream," <<he>> mutters. "We'll need to change that in the future."
<<else>>
	"I suppose we can stop there," <<he>> says.
<</if>>
<br><br>
<<endcombat>>
<<clotheson>>
<<link [[Do it again|Hypnotist Test]]>><</link>><br>
<<link [[Back home|Bedroom]]>><</link>>

:: Hypnotist Test Tentacles

<<if $molestationstart is 1>>
	<<set $molestationstart to 0>>
	<<set $combat to 1>>
	<<set $enemytype to "tentacles">>
	<<controlloss>>
	<<molested>>
	<<tentaclestart 8 15>>
	<<for _t to 0; _t lt $tentacles.max; _t++>>
		<<set $tentacles[_t].traits.pushUnique("hypno")>>
	<</for>>
	A hoard of tentacles accosts you. Each one is capable of hypnotising you, including tentacles that typically don't have the hypno trait.
<</if>>
<<effects>>
<<effectstentacles>>
<<tentacles>>
<<statetentacles>>
<<actionstentacles>>

<<if $tentacles.active lte ($tentacles.max / 2)>>
	<span id="next"><<link [[Next|Hypnotist Test Tentacles Finish]]>><</link>></span><<nexttext>>
<<else>>
	<span id="next"><<link [[Next|Hypnotist Test Tentacles]]>><</link>></span><<nexttext>>
<</if>>

:: Hypnotist Test Tentacles Finish
<<effects>>

The creature loses interest in you, its testing complete, and returns to nothingness.
<br><br>

<<clotheson>>
<<endcombat>>

<<link [[Do it again|Hypnotist Test]]>><</link>><br>
<<link [[Back home|Bedroom]]>><</link>>


:: Pregnancy Belly Test
Increase and decrease belly size here.
If you use anything but the exit link below to exit this scene, your belly size will be stuck, so be careful!
Unset V.bellySizeDebug to fix.
<hr>
<<if $sexstart is 1>>
	<<set $sexstart to 0>>
	<<consensual>><<set $consensual to 1>>
	<<generate1>><<person1>>
	<<maninit>>
	<<set $bellySizeDebug to playerBellySize()>>
<</if>>
<<effects>>
<<effectsman>>
<br><br>
<<if $options.images is 1 and $options.combatImages is 1>>
	<<if $position isnot "stalk">>
		<<timed 100ms>>
			<<combatimg>>
			<br>
		<</timed>>
	<</if>>
<</if>>
<hr>
<label class="no-numberify">
	<span class="lewd">Body:</span><br>
	<div class="small-description">
		<<link [[Roll over|Pregnancy Belly Test]]>><<set $position to (V.position === "doggy" ? "missionary" : "doggy")>><</link>>
		<br>
		Change Speed:
		<<link [[Idle|Pregnancy Belly Test]]>><<set $animDebug to false>><<set $enemyarousal to 0>><</link>> |
		<<link [[Slow|Pregnancy Belly Test]]>><<set $animDebug to true>><<set $enemyarousal to 0>><</link>> |
		<<link [[Med|Pregnancy Belly Test]]>><<set $animDebug to true>><<set $enemyarousal to 1 + ($enemyarousalmax / 5) * 1>><</link>> |
		<<link [[Fast|Pregnancy Belly Test]]>><<set $animDebug to true>><<set $enemyarousal to 1 + ($enemyarousalmax / 5) * 3>><</link>> |
		<<link [[Very Fast|Pregnancy Belly Test]]>><<set $animDebug to true>><<set $enemyarousal to 1 + ($enemyarousalmax / 5) * 4>><</link>> |
	</div>	
	<hr>
	<span class="lewd">Belly:</span><br>
	<div class="small-description">
		<<set $bellySizeDebug to Math.clamp($bellySizeDebug,0,24)>>
		<span class="blue">Current Belly Size: $bellySizeDebug</span>
		<<ind>>
		Increase belly size by:
		<<link [[1|Pregnancy Belly Test]]>><<set $bellySizeDebug++>><</link>> |
		<<link [[5|Pregnancy Belly Test]]>><<set $bellySizeDebug += 5>><</link>> |
		<<link [[10|Pregnancy Belly Test]]>><<set $bellySizeDebug += 10>><</link>> |
		<<ind>>
		Decrease belly size by:
		<<link [[1|Pregnancy Belly Test]]>><<set $bellySizeDebug-->><</link>> |
		<<link [[5|Pregnancy Belly Test]]>><<set $bellySizeDebug -= 5>><</link>> |
		<<link [[10|Pregnancy Belly Test]]>><<set $bellySizeDebug -= 10>><</link>> |
		<<ind>>
		Description:
		<<bellyDescription "pc" true>>
	</div>
	<hr>
	<span class="green">Clothes:</span><br>
	<div class="small-description">
		Strip:
		<<link [[Strip All|Pregnancy Belly Test]]>><<strip>><</link>> |
		<<if $worn.upper.name isnot "naked">><<link [[Upper|Pregnancy Belly Test]]>><<upperstrip>><</link>> |<</if>>
		<<if $worn.under_upper.name isnot "naked">><<link [[Under_Upper|Pregnancy Belly Test]]>><<underupperstrip>><</link>> |<</if>>
		<<if $worn.lower.name isnot "naked">><<link [[Lower|Pregnancy Belly Test]]>><<lowerstrip>><</link>> |<</if>>
		<<if $worn.under_lower.name isnot "naked">><<link [[Under_Lower|Pregnancy Belly Test]]>><<underlowerstrip>><</link>> |<</if>>
		<<if $worn.head.name isnot "naked">><<link [[Head|Pregnancy Belly Test]]>><<headstrip>><</link>> |<</if>>
		<<if $worn.face.name isnot "naked">><<link [[Face|Pregnancy Belly Test]]>><<facestrip>><</link>> |<</if>>
		<<if $worn.hands.name isnot "naked">><<link [[Hands|Pregnancy Belly Test]]>><<handsstrip>><</link>> |<</if>>
		<<if $worn.legs.name isnot "naked">><<link [[Legs|Pregnancy Belly Test]]>><<legsstrip>><</link>> |<</if>>
		<<if $worn.feet.name isnot "naked">><<link [[Feet|Pregnancy Belly Test]]>><<feetstrip>><</link>> |<</if>>
		<br>
		Displace:
		<<if $worn.upper.name isnot "naked">><<link [[Upper|Pregnancy Belly Test]]>><<set $leftaction to "upper">><</link>> |<</if>>
		<<if $worn.under_upper.name isnot "naked">><<link [[Under_Upper|Pregnancy Belly Test]]>><<set $leftaction to "under_upper">><</link>> |<</if>>
		<<if $worn.lower.name isnot "naked">><<link [[Lower|Pregnancy Belly Test]]>><<set $leftaction to "lower">><</link>> |<</if>>
		<<if $worn.under_lower.name isnot "naked">><<link [[Under_Lower|Pregnancy Belly Test]]>><<set $leftaction to "under_lower">><</link>> |<</if>>		
		<br>
		<<link [[Fix All Clothes|Pregnancy Belly Test]]>><<clotheson>><</link>>
	</div>
	<hr>
	<span class="gold">Props:</span><br>
	<div class="small-description">
		<<set _propList to ["haybale", "table", "bench", "milk", "semen", "rails", "neck_shackle", "arm_shackle", "leg_shackle", "breast_pump", "penis_pump", "examtable", "hospitalbed", "ivbag"]>>
		Add:
		<<for _pr1 to 0; _pr1 < _propList.length; _pr1 ++>>
			<<if !$prop.includes(_propList[_pr1])>>
				<<capture _pr1>>
					<<link [[_propList[_pr1]|Pregnancy Belly Test]]>><<prop _propList[_pr1]>><</link>> |
				<</capture>>
			<</if>>
		<</for>>
		<br>
		Remove:
		<<for _pr2 to 0; _pr2 < _propList.length; _pr2 ++>>
			<<if $prop.includes(_propList[_pr2])>>
				<<capture _pr2>>
					<<link [[_propList[_pr2]|Pregnancy Belly Test]]>><<set $prop.delete(_propList[_pr2])>><</link>> |
				<</capture>>
			<</if>>
		<</for>>
	</div>
</label>
<br>
<<link [[Back home|Bedroom]]>><<endcombat>><<unset $bellySizeDebug>><<unset $animDebug>><<clotheson>><</link>>
<br>

<!-- Used in the debug start events -->
:: ForestHuntDebug

<<foresthunt>>
