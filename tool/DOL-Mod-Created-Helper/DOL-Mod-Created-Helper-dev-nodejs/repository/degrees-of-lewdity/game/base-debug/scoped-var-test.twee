:: ScopedVarTest

We've extended normal widgets to include a call scoped namespace.
This means that other widgets can use the same name without fear of
overriding that value.

This namespace uses $$_ as a prefix. Note that using it outside of
a widget always results in an undefined value.

Below is a set of tests to confirm the behaviour of $$, _ and $_ values
<<widget 'G'>>$<</widget>>
<<widget 'L'>>_<</widget>>
<<widget 'GL'>><<G>><<L>><</widget>>
<<widget "testScopedVar">>
	Inside of first widget:
	> <<G>>val = $val
	> <<L>>val = _val
	> <<GL>>val = $_val
	> <<GL>>val2 = $_val2<<set $val = 1>><<set _val = 10>><<set $_val = 100>><<set $_val2 = 1000>>
	Setting values for each value type in first widget:
	> <<G>>val = $val
	> <<L>>val = _val
	> <<GL>>val = $_val
	> <<GL>>val2 = $_val2<<testScopedVar2>>
	After second widget:
	> <<G>>val = $val
	> <<L>>val = _val
	> <<GL>>val = $_val
	> <<GL>>val = $_val2
<</widget>>

<<widget "testScopedVar2">>
	Inside of second widget:
	> <<G>>val = $val
	> <<L>>val = _val
	> <<GL>>val = $_val
	> <<GL>>val3 = $_val3<<set $val = 2>><<set _val = 20>><<set $_val = 200>><<set $_val3 = 2000>>
	After setting values for each value type in second widget:
	> <<G>>val = $val
	> <<L>>val = _val
	> <<GL>>val = $_val
	> <<GL>>val3 = $_val3
<</widget>>

Before widget is invoked:
> <<G>>val = $val
> <<L>>val = _val
> <<GL>>val = $_val
After widget is invoked:<<testScopedVar>>
> <<G>>val = $val
> <<L>>val = _val
> <<GL>>val = $_val
> <<GL>>val2 = $_val2
> <<GL>>val3 = $_val3

<<widget "rangeScopedTest">>
	<<set _obj = { foo: {one: 1, two: 2}, bar: {fee: 'fee', fie: 'fie'}, biz: {foe: 'foe', thum: 'thum'} }>>
	<<for $_key, $_val range _obj>>
		Parent before: <<GL>>key = $_key , <<GL>>val = <<-JSON.stringify($_val)>>
		<br>
		<<rangeScopedTestInner $_key $_val>>
		<br>
		Parent after: <<GL>>key = $_key , <<GL>>val = <<-JSON.stringify($_val)>>
		<br>
	<</for>>
<</widget>>

<<widget "rangeScopedTestInner">>
	> Before loop: <<GL>>key = $_key, <<GL>>val = $_val
	<<for $_key, $_val range _args[1]>>
	> _args[0] = $_key : $_val<</for>>
	> After loop: <<GL>>key = $_key, <<GL>>val = $_val
<</widget>>
<<rangeScopedTest>>
