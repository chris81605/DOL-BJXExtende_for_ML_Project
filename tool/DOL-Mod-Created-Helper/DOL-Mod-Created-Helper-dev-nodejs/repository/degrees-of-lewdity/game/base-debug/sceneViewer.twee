:: Scene Viewer
<h3>Scene Viewer</h3>
<<scenes>>
<<scenesSearch>>
<<scenesViewerCalc>>
<div id="scenesViewer">
	<<scenesViewer>>
</div>
<div id="scenesViewerControls">
	<<scenesViewerControls>>
</div>
<<if $debug is 1>>
	<!--<br>
	<<saveCompareTool>>-->
	<br>
	<<link [[Reset|$passage]]>><<unset $scenes>><<unset _scenes>><</link>>
<</if>>

<<if $lastPassage>>
	<br>
	<<link [[Exit|$lastPassage]]>><<unset $scenes>><<unset $lastPassage>><</link>>
<</if>>

:: Scene Viewer End

End of '<<print $replayScene.name>>' scene.
<br><br>

<<unfreezePlayerStats>>
<<unset $replayScene>>
<<endevent>>

<<link [[Exit scene|Scene Viewer]]>><</link>>

:: Scene Viewer passages
<<switch $sceneViewSwitch>>
	<<case "halloweenwhitney">><<halloweenwhitney>>
	<<case "halloweenkylar">><<halloweenkylar>>
	<<case "AlexFarmWorkStage3">><<farmVisitor>>
	<<case "AlexFarmWorkStage4">><<farmStage4>>
	<<case "AlexFarmWorkStage5">><<farmStage5>>
	<<case "AlexFarmWorkStage6">><<farmStage6>>
	<<case "schoolBully">><<schoolbully>>
	<<default>>
		Error occurred in scene viewer. <<print $replayScene.name>>. Please report.
		<br><br>
		<<set _exitpassage to clone($replayScene.exitpassage)>>
		<<unset $replayScene>>
		<<unfreezePlayerStats>>
		<<link [[Back|_exitpassage]]>>
		<</link>>
<</switch>>
<<unset $sceneViewSwitch>>

:: Scene Viewer Widgets [widget]

<<widget "setupReplayScene">>
	/*In case the object isnt setup correctly*/
	<<set _passages to ["Scene Viewer End"]>>
	<<if Array.isArray(_args[2])>>
		<<set _passages to _args[2]>>
	<</if>>
	<<set _variablesToRestore to []>>
	<<freezePlayerStats>>
	<<set $replayScene to {
		name: _args[0],
		startPassage: (_args[1] ? _args[1] : _passages[0]),
		passages: _passages,
		exitpassage: $passage
	}>>
<</widget>>

/*Scenes when player viewing cant be tracked*/
<<widget "seenPassage">>
	<<if $scenePassages is undefined>>
		<<set $scenePassages to []>>
	<</if>>
	<<run $scenePassages.pushUnique($passage)>>
<</widget>>

/*Scenes when player viewing can be tracked*/
<<widget "seenPassageChecks">>
	<<set $_robin to statusCheck("Robin")>>
	<<if $scenePassages is undefined>>
		<<set $scenePassages to []>>
	<</if>>
	<<if $NPCName[$NPCNameList.indexOf('Avery')].init is 1>>
		<<run $scenePassages.pushUnique("Park Lichen")>>
	<</if>>
	<<if $_robin.init is 1>>
		<<run $scenePassages.pushUnique("Robin Intro")>>
	<</if>>
	<<if $bun_value gte 15000>>
		<<run $scenePassages.pushUnique("Photography Chef")>>
		<<run $scenePassages.pushUnique("Chef Opening")>>
	<</if>>
	<<if $schoolevent gte 1>>
		<<run $scenePassages.pushUnique("Penis School Inspection")>>
	<</if>>
	<<if $schoolevent gte 2>>
		<<run $scenePassages.pushUnique("Pussy School Inspection")>>
	<</if>>
	<<if $schoolevent gte 3>>
		<<run $scenePassages.pushUnique("Breast School Inspection")>>
	<</if>>
	<<if $halloween_whitney_proposed>>
		<<run $scenePassages.pushUnique("halloweenwhitney")>>
	<</if>>
	<<if $halloween_kylar_proposed>>
		<<run $scenePassages.pushUnique("halloweenkylar")>>
	<</if>>
	<!-- Intentional breakless design for this switch.
		Example: If $farm_stage is 4, it will run cases 4, 3 and 2. -->
	<<run
		switch (Math.clamp($farm_stage, 0, 6)) {
			case 6: $scenePassages.pushUnique("AlexFarmWorkStage6");
			case 5: $scenePassages.pushUnique("AlexFarmWorkStage5");
			case 4: $scenePassages.pushUnique("AlexFarmWorkStage4");
			case 3: $scenePassages.pushUnique("AlexFarmWorkStage3");
			case 2: $scenePassages.pushUnique("AlexFarmIntro");
		}
	>>
	<<if $farm and $farm.milking and $farm.milking.alexNightEvent>>
		<<run $scenePassages.pushUnique("AlexFarmSelfMilkingCaught")>>
	<</if>>
	<<if $bullyevent gt 0>>
		<<run $scenePassages.pushUnique("WhitneySchoolBully1")>>
	<</if>>
	<<if $bullyevent gt 1>>
		<<run $scenePassages.pushUnique("WhitneySchoolBully2")>>
	<</if>>
	<<if $bullyevent gt 2>>
		<<run $scenePassages.pushUnique("WhitneySchoolBully3")>>
	<</if>>
	<<if $bullyevent gt 3>>
		<<run $scenePassages.pushUnique("WhitneySchoolBully4")>>
	<</if>>
	<!-- Intentional breakless design for this switch.
		Example: If $_robin.cdquest is 3, it will run cases 3, 2 and 1. -->
	<<run
		switch (Math.clamp($_robin.cdquest, 0, 6)) {
			case 6: $scenePassages.pushUnique("RobinCrossdressing6", "RobinCrossdressing6I");
			case 5: $scenePassages.pushUnique("RobinCrossdressing5");
			case 4: $scenePassages.pushUnique("RobinCrossdressing4");
			case 3: $scenePassages.pushUnique("RobinCrossdressing3");
			case 2: $scenePassages.pushUnique("RobinCrossdressing2");
			case 1: $scenePassages.pushUnique("RobinCrossdressing1");
		}
	>>
	<<if $robinfirstrentfight is 1>>
		<<run $scenePassages.pushUnique("RentFirstRobinFight")>>
	<</if>>
	<<if $kylarSeen.includes("basement")>>
		<<run $scenePassages.pushUnique("KylarBasement")>>
	<</if>>
	<<if $syndromekylar is 1>>
		<<run $scenePassages.pushUnique("KylarAbduction")>>
	<</if>>
	<<if $kylar_sleep_abduction is 1>>
		<<set $scenePassages.pushUnique("KylarManorSleep")>>
	<</if>>
	<!-- Intentional breakless design for this switch.
		Example: If $kylar_manor_secret is 2, it will run cases 2 and 1. -->
	<<run
		switch (Math.clamp($kylar_manor_secret, 0, 3)) {
			case 3: $scenePassages.pushUnique("KylarMonstranceAccost");
			case 2: $scenePassages.pushUnique("KylarMonstranceAsk");
			case 1: $scenePassages.pushUnique("KylarManorSecret");
		}
	>>
	<<if $wraithPrison and $wraithPrison.vision>>
		<<set $scenePassages.pushUnique("Schism")>>
	<</if>>
<</widget>>

<<widget "scenes">>
	/*Be extra careful when adding new scenes, make sure that any variables that shouldn't be changed this way, are restored right after
	The widgets `<<freezePlayerStats>>` and `<<unfreezePlayerStats>>` can help here alongside `variablesToRestore` for more scene specific variables
	The variable $statFreeze to prevent other widgets from running
	Be aware that many objects will be restored for you, including player, worn, carried, wardrobe, sexStats, dateCount and named npc's
	*/
	<<if $scenePassages is undefined>>
		<<set $scenePassages to []>>
	<</if>>
	<<if $scenes is undefined>>
		<<seenPassageChecks>>
		<<set $scenes to {
			/*"placeHolder":{
				name:"",
				startPassage:"",
				passages:["",""],
				manualVariableChanges:"",
				unlocked: $scenePassages.includes("startPassage")
			},*/
			"AveryParkIntroduction":{
				name:"Avery Park Introduction",
				startPassage:"Park Lichen",
				passages: ["Park Lichen","Park Lichen Climb","Park Lichen Help","Park Lichen Explain","Park Lichen Run","Park Lichen Honest","Park Lichen Evasive","Park Lichen Accept","Park Lichen Refuse","Park Lichen Smooch","Park Lichen Still","Park Lichen Move"],
				manualVariableChanges: "<<set $NPCName[$NPCNameList.indexOf('Avery')].init to 0>>",
				unlocked: $scenePassages.includes("Park Lichen")
			},
			"RobinIntro1":{
				name:"Robin Intro 1",
				startPassage:"Orphanage",
				passages:[],
				manualVariableChanges:"<<set $NPCName[$NPCNameList.indexOf('Robin')].init to 0>><<set Time.setTime(7, 0)>><<set $stress to 0>><<set $home_gone to 0>><<if $exposed gt 0>><<givestartclothing>><</if>>",
				unlocked: $scenePassages.includes("Robin Intro")
			},
			"RobinIntro2":{
				name:"Robin Intro 2",
				startPassage:"Shopping Centre",
				passages:[],
				manualVariableChanges:"<<set $NPCName[$NPCNameList.indexOf('Robin')].init to 0>><<set Time.set(0)>><<set Time.setTime(18, 0)>><<set $stress to 0>><<if $exposed gt 0>><<givestartclothing>><</if>>",
				unlocked: $scenePassages.includes("Robin Intro")
			},
			"RobinIntro3":{
				name:"Robin Intro 3",
				startPassage:"Canteen",
				passages:[],
				manualVariableChanges:"<<set $NPCName[$NPCNameList.indexOf('Robin')].init to 0>><<set $schoolstate to 'lunch'>><<set Time.setTime(12, 0)>><<set $stress to 0>><<if $exposed gt 0>><<givestartclothing>><</if>>",
				unlocked: $scenePassages.includes("Robin Intro")
			},
			"ChefOpeningPhotograph":{
				name:"Chef Opening Photograph",
				startPassage:"Photography Chef",
				passages:["Photography Chef","Photography Chef 2","Photography Chef 3","Photography Chef 4","Photography Chef 5","Photography Chef Tease","Photography Chef Wait","Photography Chef Cream","Photography Chef Leave","Photography Chef Milk","Photography Chef 6","Photography Chef Wait","Photography Chef Lewd Cream","Photography Chef Normal Cream","Photography Chef 7"],
				manualVariableChanges:"",
				unlocked: $scenePassages.includes("Photography Chef")
			},
			"ChefOpeningCeremony":{
				name:"Chef Opening Ceremony",
				startPassage:"Chef Opening",
				passages:["Chef Opening","Chef Opening 2","Chef Opening 3","Chef Opening Current","Chef Opening Gown","Chef Opening Tuxedo","Chef Opening 4","Chef Opening 5","Chef Opening Avery Accept","Chef Opening Avery Refuse","Chef Opening 6","Chef Opening Bailey Slap","Chef Opening Bailey Thank","Chef Opening Bailey Silent","Chef Opening 7","Chef Opening Smile","Chef Opening Funny","Chef Opening Refuse Photograph","Chef Opening 8","Chef Opening 9","Chef Opening 10","Chef Opening 11","Chef Opening Truth","Chef Opening Bailey","Chef Opening Sam","Chef Opening Self","Chef Opening Refuse","Chef Opening Local","Chef Opening Foreign","Chef Opening Staff","Chef Opening Enjoy","Chef Opening End","Chef Opening End 2"],
				manualVariableChanges:"",
				unlocked: $scenePassages.includes("Chef Opening")
			},
			"PenisSchoolInspection":{
				name:"Penis School Inspection",
				startPassage:"Science Lesson",
				passages:["Penis Inspection", "Penis Inspection 1", "Penis Inspection Expose", "Penis Inspection Flaunt", "Penis Inspection Run Away", "Penis Inspection End", "Penis Inspection Flaunt No Penis", "Penis Inspection Forced", "Penis Inspection Forced Defiant", "Penis Inspection 2"],
				manualVariableChanges:"<<set Time.setDate(Time.getNextWeekdayDate(2))>><<set Time.setTime(9, 1)>><<set $schoolevent to 0>><<set $schooleventtimer to 0>>",
				unlocked: $scenePassages.includes("Penis School Inspection")
			},
			"PussySchoolInspection":{
				name:"Pussy School Inspection",
				startPassage:"Science Lesson",
				passages:["Pussy Inspection", "Pussy Inspection 1", "Pussy Inspection 2", "Pussy Inspection Run", "Pussy Inspection Flaunt No Pussy", "Pussy Inspection Comply", "Pussy Inspection Flaunt", "Pussy Inspection Forced", "Pussy Inspection Forced Defiant", "Pussy Inspection End"],
				manualVariableChanges:"<<set Time.setDate(Time.getNextWeekdayDate(2))>><<set Time.setTime(9, 1)>><<set $schoolevent to 1>><<set $schooleventtimer to 0>>",
				unlocked: $scenePassages.includes("Pussy School Inspection")
			},
			"BreastSchoolInspection":{
				name:"Breast School Inspection",
				startPassage:"Science Lesson",
				passages:["Breast Inspection","Breast Inspection Comply","Breast Inspection Flaunt","Breast Inspection Flat Flaunt","Breast Inspection Protest","Breast Inspection End"],
				manualVariableChanges:"<<set Time.setTime(9, 1)>><<set $schoolevent to 2>><<set $schooleventtimer to 0>>",
				unlocked: $scenePassages.includes("Breast School Inspection")
			},
			"HalloweenWhitney":{
				name:"Halloween Whitney",
				startPassage:"Scene Viewer passages",
				passages:["Whitney Trick 1","Whitney Trick 2","Whitney Trick Refuse","Whitney Trick 2","Whitney Trick Refuse 2","Whitney Trick 3","Whitney Trick 4","Whitney Trick Stop","Whitney Trick Watch","Whitney Trick 5","Whitney Trick 6","Whitney Trick Exhibitionism","Whitney Trick Drink","Whitney Trick Drink","Whitney Trick Sex","Whitney Trick Sex Refuse","Whitney Trick 7","Whitney Trick Sex Finish"],
				manualVariableChanges:"<<set $sceneViewSwitch to 'halloweenwhitney'>>",
				unlocked: $scenePassages.includes("halloweenwhitney")
			},
			"HalloweenKylar":{
				name:"Halloween Kylar",
				startPassage:"Scene Viewer passages",
				passages:["Kylar Halloween Look","Kylar Halloween Watch","Kylar Halloween","Kylar Halloween Refuse","Kylar Halloween Walk","Kylar Halloween Hesitate","Kylar Halloween Forest Refuse","Kylar Halloween Continue","Kylar Halloween Angry","Kylar Halloween Continue Walk","Kylar Halloween Leave","Kylar Halloween March","Kylar Halloween Kiss","Kylar Halloween Yes","Kylar Halloween No","Kylar Halloween Town","Kylar Halloween Sex","Kylar Halloween Sex Finish","Kylar Halloween Mansion","Kylar Halloween Mansion 2","Kylar Halloween Known Drink","Kylar Halloween Unknown Refuse","Kylar Halloween Known Angry","Kylar Halloween Unknown Drink","Kylar Halloween Known Pretend","Kylar Halloween Known Hand","Kylar Halloween Known Go","Kylar Halloween Known Scare","Kylar Halloween Mansion Sex","Kylar Halloween Mansion Sex Finish","Kylar Halloween Exit","Kylar Halloween Known Chase","Kylar Halloween Known Curtain","Kylar Halloween Known Sheet","Kylar Halloween Known Front","Kylar Halloween Known Dumb","Kylar Halloween Known Clean","Kylar Halloween Known Kiss","Kylar Halloween Known Stand","Kylar Halloween Known Sex","Kylar Halloween Known Sex Finish","Kylar Halloween Rough Exit","Kylar Halloween Unknown Refuse 2","Kylar Halloween Exit 2","Kylar Halloween Skulduggery 2","Kylar Halloween Pick","Kylar Halloween Upstairs","Kylar Halloween Skulduggery","Kylar Halloween Skulduggery Kiss","Kylar Halloween Skulduggery Pull","Kylar Halloween Upstairs Dodge","Kylar Halloween Caught","Kylar Halloween Upstairs Applaud","Kylar Halloween Upstairs Angry","Kylar Halloween Kneel","Kylar Halloween Kneel Refuse","Kylar Halloween Kneel Refuse 2","Kylar Halloween Kneel Run","Kylar Halloween Kneel Help","Kylar Halloween Kneel Spray","Kylar Halloween Forced Kneel","Kylar Halloween Oral","Kylar Halloween Lick","Kylar Halloween Lick Refuse","Kylar Halloween Lick Refuse 2","Kylar Halloween End","Kylar Halloween Oral Finish","Kylar Halloween Bed","Kylar Halloween Bed 2","Kylar Halloween Bed 3","Kylar Halloween Bed 4","Kylar Halloween Bed 5","Kylar Halloween Wait","Kylar Halloween Warn","Kylar Halloween Escape","Kylar Halloween Tricks","Kylar Halloween Whitney","Kylar Halloween Accompany","Kylar Halloween Alone","Kylar Halloween Thank","Kylar Halloween Ask","Kylar Halloween Whitney Kiss","Kylar Halloween Whitney Apologise","Kylar Halloween Whitney Silent"],
				manualVariableChanges:"<<set $sceneViewSwitch to 'halloweenkylar'>>",
				unlocked: $scenePassages.includes("halloweenkylar")
			},
			"AlexFarmIntro":{
				name:"Alex Farm Intro",
				startPassage:"Farm Intro",
				passages:["Farm Intro","Farm Intro 2","Farm Intro 3","Farm Intro 4","Farm Intro 5","Farm Intro 6","Farm Intro 7","Farm Intro 8","Farm Intro 9","Farm Intro 10","Farm Intro Accept","Farm Intro Refuse"],
				manualVariableChanges:"",
				unlocked: $scenePassages.includes("AlexFarmIntro")
			},
			"AlexFarmWorkStage3":{
				name:"Alex Farm Work Stage 3",
				startPassage:"Scene Viewer passages",
				passages:["Farm Visitor"],
				manualVariableChanges:"<<set $sceneViewSwitch to 'AlexFarmWorkStage3'>><<farm_work_update>>",
				unlocked: $scenePassages.includes("AlexFarmWorkStage3")
			},
			"AlexFarmWorkStage4":{
				name:"Alex Farm Work Stage 4",
				startPassage:"Scene Viewer passages",
				passages:["Farm Stage 4"],
				manualVariableChanges:"<<set $sceneViewSwitch to 'AlexFarmWorkStage4'>><<farm_work_update>>",
				unlocked: $scenePassages.includes("AlexFarmWorkStage4")
			},
			"AlexFarmWorkStage5":{
				name:"Alex Farm Work Stage 5",
				startPassage:"Scene Viewer passages",
				passages:["Farm Stage 5","Farm Stage 5 2","Farm Stage 5 3"],
				manualVariableChanges:"<<set $sceneViewSwitch to 'AlexFarmWorkStage5'>><<farm_work_update>>",
				unlocked: $scenePassages.includes("AlexFarmWorkStage5")
			},
			"AlexFarmWorkStage6":{
				name:"Alex Farm Work Stage 6",
				startPassage:"Scene Viewer passages",
				passages:["Farm Stage 6","Farm Stage 6 2","Farm Stage 6 Look","Farm Stage 6 No Look","Farm Stage 6 Pull","Farm Stage 6 3","Farm Stage 6 Pull 2","Farm Stage 6 Pull Return","Farm Stage 6 Pull Refuse","Farm Stage 6 4","Farm Stage 6 5","Farm Stage 6 6","Farm Stage 6 7","Farm Stage 6 8"],
				manualVariableChanges:"<<set $sceneViewSwitch to 'AlexFarmWorkStage6'>>",
				unlocked: $scenePassages.includes("AlexFarmWorkStage6")
			},
			"AlexFarmSelfMilkingCaught":{
				name:"Alex Farm Self Milking Caught",
				startPassage:"Farm Barn Caught",
				passages:[],
				manualVariableChanges:"",
				unlocked: $scenePassages.includes("AlexFarmSelfMilkingCaught")
			},
			"WhitneySchoolBully1":{
				name:"Whitney School Bully 1",
				startPassage:"Scene Viewer passages",
				passages:[],
				manualVariableChanges:"<<set $sceneViewSwitch to 'schoolBully'>><<set $bullyevent to 0>>",
				unlocked: $scenePassages.includes("WhitneySchoolBully1")
			},
			"WhitneySchoolBully2":{
				name:"Whitney School Bully 2",
				startPassage:"Scene Viewer passages",
				passages:["Bully Locker","Bully Fight","Bully Fight Finish"],
				manualVariableChanges:"<<set $sceneViewSwitch to 'schoolBully'>><<set $bullyevent to 1>>",
				unlocked: $scenePassages.includes("WhitneySchoolBully2")
			},
			"WhitneySchoolBully3":{
				name:"Whitney School Bully 3",
				startPassage:"Scene Viewer passages",
				passages:["Bully Fight","Bully Fight Finish","Bully Top","Bully Top Flaunt"],
				manualVariableChanges:"<<set $sceneViewSwitch to 'schoolBully'>><<set $bullyevent to 2>>",
				unlocked: $scenePassages.includes("WhitneySchoolBully3")
			},
			"WhitneySchoolBully4":{
				name:"Whitney School Bully 4",
				startPassage:"Scene Viewer passages",
				passages:["Bully Fight","Bully Fight Finish","Bully Strip","Bully Strip Flaunt","Bully Walk","Bully Walk Flaunt","Bully Refuse"],
				manualVariableChanges:"<<set $sceneViewSwitch to 'schoolBully'>><<set $bullyevent to 3>>",
				unlocked: $scenePassages.includes("WhitneySchoolBully4")
			},
			"RobinCrossdressing1":{
				name:"Robin Caught Crossdressing",
				startPassage:"Robin Caught CD SV Start",
				passages:["Robin Caught CD SV Start", "Robin Caught CD","Robin CD Encourage","Robin CD Soft Discourage","Robin CD Harsh Discourage"],
				manualVariableChanges:"",
				unlocked: $scenePassages.includes("RobinCrossdressing1")
			},
			"RobinCrossdressing2":{
				name:"Robin Crossdressing In Room",
				startPassage:"Robin CD Door SV Start",
				passages:["Robin CD Door SV Start","Robin CD Door Answer", "Robin CD Door Ignore","Robin CD Door Encourage","Robin CD Door Discourage"],
				manualVariableChanges:"<<set $NPCName[$NPCNameList.indexOf(\"Robin\")].crossdress to 2>>",
				unlocked: $scenePassages.includes("RobinCrossdressing2")
			},
			"RobinCrossdressing3":{
				name:"Robin Crossdressing In Orphanage",
				startPassage:"Robin CD Socialise SV Start",
				passages:["Robin CD Socialise SV Start", "Robin CD Socialise", "Robin CD Socialise Defend", "Robin CD Socialise Change"],
				manualVariableChanges:"<<set $NPCName[$NPCNameList.indexOf(\"Robin\")].crossdress to 3>><<set Time.setTime(16)>>",
				unlocked: $scenePassages.includes("RobinCrossdressing3")
			},
			"RobinCrossdressing4":{
				name:"Robin Crossdressing At Drink Stand",
				startPassage:"Robin's Stand CD SV Intro",
				passages:["Robin's Stand CD SV Intro", "Robin's Stand CD Explain Demo", "Robin's Stand CD Explain Full", "Robin's Stand CD Accept", "Robin's Stand CD Refuse", "Robin's Stand CD Intervene", "Robin's Stand CD Listen", "Robin's Stand CD Wait", "Robin's Stand CD Reassure", "Robin's Stand CD Discourage"],
				manualVariableChanges:"<<set $NPCName[$NPCNameList.indexOf(\"Robin\")].crossdress to 4>><<set Time.setDate(Time.getNextWeekdayDate(7))>><<set Time.setTime(9, 0)>>",
				unlocked: $scenePassages.includes("RobinCrossdressing4")
			},
			"RobinCrossdressing5":{
				name:"Robin Crossdressing Before School",
				startPassage:"Robin School CD SV Intro",
				passages:["Robin School CD SV Intro", "Robin School CD Interrupt", "Robin School CD Compliment","Robin School CD Refuse","Robin School CD Accept","Robin School CD Change","Robin School CD Walk"],
				manualVariableChanges:"<<set $NPCName[$NPCNameList.indexOf(\"Robin\")].crossdress to 5>><<set Time.setDate(Time.getNextWeekdayDate(1))>><<set Time.setTime(7, 0)>>",
				unlocked: $scenePassages.includes("RobinCrossdressing5")
			},
			"RobinCrossdressing6":{
				name:"Robin Crossdressing In Canteen",
				startPassage:"Canteen Lunch Robin CD 1",
				passages:["Canteen Lunch Robin CD 1", "Canteen Lunch Robin CD 2"],
				manualVariableChanges:"<<set $NPCName[$NPCNameList.indexOf(\"Robin\")].crossdress to 6>><<set Time.setDate(Time.getNextWeekdayDate(1))>><<set Time.setTime(12, 0)>>",
				unlocked: $scenePassages.includes("RobinCrossdressing6")
			},
			"RobinCrossdressing6I":{
				name:"Robin Crossdressing Infirmary Sex",
				startPassage:"School Infirmary Robin CD Intro",
				passages:["School Infirmary Robin CD Intro", "School Infirmary Robin CD Kiss", "School Infirmary Robin CD No Sex", "School Infirmary Robin CD Receive Oral", "School Infirmary Robin CD Penetrate", "School Infirmary Robin CD Get Penetrated", "School Infirmary Robin CD Give Oral", "School Infirmary Robin CD Aftercare"],
				/* TODO: update this when we figure out how much time the above passage is meant to take */
				manualVariableChanges:"<<set $NPCName[$NPCNameList.indexOf(\"Robin\")].crossdress to 6>><<set Time.setDate(Time.getNextWeekdayDate(1))>><<set Time.setTime(12, 0)>>",
				unlocked: $scenePassages.includes("RobinCrossdressing6I")
			},
			"RentFirstRobinFight":{
				name:"Rent First Robin Fight",
				startPassage:"Rent First Robin SV",
				passages:["Rent Pay","Rent Seduce","Rent Refuse","Rent First Robin Fight","Rent First Robin Fight Finish"],
				manualVariableChanges:"<<set $robinpaid to 1>><<set $robinromance to 1>><<set $bus to \"home\">><<set $robinfirstrentfight to 0>><<set $baileydefeatedchain to 3>><<unset $baileyReunionScene>><<set $renttime to 0>><<set $robinmissing to 0>><<set $home_gone to 0>>",
				unlocked: $scenePassages.includes("RentFirstRobinFight")
			},
			"KylarBasement":{
				name:"Kylar Basement",
				startPassage:"Kylar Basement",
				passages:["Kylar Basement","Kylar Basement 2","Kylar Basement 3","Kylar Basement Rape","Kylar Basement Rape Finish","Kylar Basement 4","Kylar Basement Protest","Kylar Basement Silent","Kylar Basement Police","Kylar Basement Police Silent","Kylar Basement Police Heroics","Kylar Basement Car"],
				manualVariableChanges:"<<npcincr Kylar rage 100>>",
				unlocked: $scenePassages.includes("KylarBasement")
			},
			"KylarAbduction":{
				name:"Kylar Abduction",
				startPassage:"Kylar Abduction Intro",
				passages:["Kylar Abduction Intro","Kylar Abduction Intro Nod","Kylar Abduction Intro Angry","Kylar Abduction Intro Plead","Kylar Abduction Intro Silent","Kylar Abduction Intro Kiss","Kylar Abduction Intro Turn","Kylar Abduction Intro Bite","Kylar Abduction Intro End","Kylar Abduction","Kylar Abduction Weaken","Kylar Abduction Rest","Kylar Abduction Event Response","Kylar Abduction Rape","Kylar Abduction Rape Finish","Kylar Abduction Rage","Kylar Abduction Stupid","Kylar Abduction Grass","Kylar Abduction Formal","Kylar Abduction Goth","Kylar Abduction Swimsuit","Kylar Abduction Normal","Kylar Abduction Kneel","Kylar Abduction Feet","Kylar Abduction Dance","Kylar Abduction Dance Cool","Kylar Abduction Dance Sophisticated","Kylar Abduction Dance Sensual","Kylar Abduction Dance Sexual","Kylar Abduction Dance Berate","Kylar Abduction Dance Compliment","Kylar Abduction Release","Kylar Abduction Comfort","Kylar Abduction Leave","Kylar Abduction Release 2","Kylar Abduction Release 3","Kylar Abduction Release Investigate","Kylar Abduction Release Investigate 2","Kylar Abduction Release Investigate 3","Kylar Abduction Release Investigate 4","Kylar Abduction Release Investigate 5","Kylar Abduction Release 4","Kylar Abduction Free","Kylar Abduction Free Wait","Kylar Abduction Free Rescue","Kylar Abduction Free Rescue 2","Kylar Abduction Free Rescue 3","Kylar Abduction Free Rescue 4","Kylar Abduction Free Rescue 5","Kylar Abduction Free Rescue Reassure","Kylar Abduction Free Rescue Mock","Kylar Abduction Free Rescue Leave","Kylar Abduction Free Rescue 6","Kylar Abduction Free Rescue Inform","Kylar Abduction Free Rescue Quiet","Kylar Abduction Free Rescue Thank","Kylar Abduction Free Rescue Angry","Kylar Abduction Free Rescue Silent","Kylar Abduction Free Refuse","Kylar Abduction Free Guilt","Kylar Abduction Free Silent","Kylar Abduction Laptop","Kylar Abduction Free Pictures","Kylar Abduction Free Video","Kylar Abduction Free Browser","Kylar Abduction Free Bailey","Kylar Abduction Free Peek","Kylar Abduction Free Corridor","Kylar Abduction Free Flicker","Kylar Abduction Free Flicker Room","Kylar Abduction Free Flicker Room 2","Kylar Abduction Free Water","Kylar Abduction Free Water Room","Kylar Abduction Free Scurry","Kylar Abduction Free Scurry Room","Kylar Abduction Free Cabinet","Kylar Abduction Free Hunt","Kylar Abduction Free Hunt Hide","Kylar Abduction Free Hunt Run","Kylar Abduction Free Breeze","Kylar Abduction Free Stairs","Kylar Abduction Free Sneak","Kylar Abduction Free Investigate","Kylar Abduction Free Investigate 2","Kylar Abduction Free Capture","Kylar Abduction Free Leave","Kylar Abduction Free Reassure","Kylar Abduction Free Mock","Kylar Abduction Free Leave 2","Kylar Abduction Hypnosis Pretend","Kylar Abduction Hypnosis","Kylar Abduction Hypnosis Resist","Kylar Abduction Hypnosis Let",
						"Kylar Abduction Event End","Kylar Abduction Neck Resist","Kylar Abduction Neck Headbutt","Kylar Abduction Neck Kiss","Kylar Abduction Knife Agree","Kylar Abduction Knife Disagree","Kylar Abduction Knife Whimper","Kylar Abduction Circle Encourage","Kylar Abduction Circle Discourage","Kylar Abduction Circle Nothing","Kylar Abduction Camera Smile","Kylar Abduction Camera Frown","Kylar Abduction Camera Glare","Kylar Abduction Camera Close","Kylar Abduction Food","Kylar Abduction Food Veg","Kylar Abduction Food Veg Suggest","Kylar Abduction Food Veg Bite","Kylar Abduction Food Meat","Kylar Abduction Food Meat Eat","Kylar Abduction Food Meat Refuse","Kylar Abduction Food Fruit","Kylar Abduction Food Nothing","Kylar Abduction Food Kiss","Kylar Abduction Food Spit","Kylar Abduction Food Turn","Kylar Abduction Song Like","Kylar Abduction Song Hate","Kylar Abduction Song Silent","Kylar Abduction Kids Insult","Kylar Abduction Kids Nice","Kylar Abduction Kids Terrible","Kylar Abduction Kids Silent","Kylar Abduction Parents Encourage","Kylar Abduction Parents Silent","Kylar Abduction Draw Agree","Kylar Abduction Draw Refuse","Kylar Abduction Draw Nice","Kylar Abduction Draw Horrible","Kylar Abduction Draw Silent",
						"Kylar Abduction Stockholm","Kylar Abduction Stockholm 2","Kylar Abduction Stockholm Offer","Kylar Abduction Stockholm Tease","Kylar Abduction Stockholm Silent","Kylar Abduction Stockholm 3","Kylar Abduction Stockholm Dress","Kylar Abduction Stockholm Dress Refuse","Kylar Abduction Stockholm 4","Kylar Abduction Stockholm 5","Kylar Abduction Stockholm 6","Kylar Abduction Stockholm 7","Kylar Abduction Stockholm Tease 2","Kylar Abduction Stockholm Ignore 2","Kylar Abduction Stockholm 8","Kylar Abduction Stockholm Refuse","Kylar Abduction Stockholm Agree","Kylar Abduction Stockholm Leave","Kylar Abduction Stockholm Suggest","Kylar Abduction Stockholm Tell","Kylar Abduction Stockholm Ignore","Kylar Abduction Stockholm Kiss","Kylar Abduction Stockholm End"],
				manualVariableChanges:"<<set $kylar_camera to 2>><<set $syndromekylar to 0>>",
				unlocked: $scenePassages.includes("KylarAbduction")
			},
			"KylarManorSleep":{
				name:"Kylar Manor Sleep",
				startPassage:"Manor Sleep Abduction",
				passages:["Manor Sleep Abduction","Manor Sleep Abduction 2","Manor Sleep Abduction 3","Manor Sleep Abduction 4","Manor Sleep Abduction Reassure","Manor Sleep Abduction Angry","Manor Sleep Abduction Silent","Manor Sleep Abduction 5"],
				manualVariableChanges:"<<set Time.setTime(20, 0)>><<set $outside to 0>><<location 'kylarmanor'>>",
				unlocked: $scenePassages.includes("KylarManorSleep")
			},
			"KylarManorSecret":{
				name:"Kylar Manor Secret",
				startPassage:"Manor Kylar Secret",
				passages:["Manor Kylar Secret","Manor Kylar Secret 2","Manor Kylar Secret 3","Manor Kylar Secret 4","Manor Kylar Secret 5"],
				manualVariableChanges:"<<set $outside to 0>><<location 'kylarmanor'>><<npc Kylar>><<person1>>",
				unlocked: $scenePassages.includes("KylarManorSecret")
			},
			"KylarMonstranceAsk":{
				name:"Kylar Monstrance Ask",
				startPassage:"Temple Kylar Monstrance",
				passages:["Temple Kylar Monstrance","Temple Kylar Monstrance Open","Temple Kylar Monstrance Refuse"],
				manualVariableChanges:"<<set $outside to 0>><<set $location to 'temple'>><<npc Jordan>><<person1>>",
				unlocked: $scenePassages.includes("KylarMonstranceAsk")
			},
			"KylarMonstranceAccost":{
				name:"Kylar Monstrance Accost",
				startPassage:"SV Temple Kylar Monstrance",
				passages:["SV Temple Kylar Monstrance","Street Monstrance Nothing","Street Monstrance Brave","Street Monstrance Scary","Street Monstrance Silent","Street Monstrance 2","Street Monstrance 3","Street Monstrance Angry","Street Monstrance Silent 2"],
				manualVariableChanges:"<<set $outside to 0>><<set $location to 'temple'>>",
				unlocked: $scenePassages.includes("KylarMonstranceAccost")
			},
			"Schism":{
				name:"Schism",
				startPassage:"Schism",
				passages:["Schism", "Schism 2", "Schism 3", "Schism 4", "Schism Lichen Eat", "Schism Lichen Refuse", "Schism Lichen Refuse 2", "Schism Lichen Refuse 3", "Schism 5", "Schism Gold Give", "Schism Gold Refuse", "Schism 6", "Schism Robes Accept", "Schism Robes Refuse", "Schism Robes Refuse Finish", "Schism 7", "Schism 8", "Schism Continue", "Schism 9", "Schism 10", "Schism Awakening", "Schism Awake", "Schism Battle", "Schism Battle 2", "Schism Battle 3", "Schism Struggle", "Schism Drown", "Schism Drowned", "Schism Necklace", "Schism Ghost", "Schism Wraith", "Schism Wraith 2", "Schism Failure", "Schism End"],
				manualVariableChanges:"<<set $outside to 0>><<set $location to 'lake_ruin'>>",
				unlocked: $scenePassages.includes("Schism")
			},
		}>>
	<</if>>
<</widget>>

<<widget "scenesSearch">>
	<span class="red">Avoid updating your games while you're replaying a scene.<<if $debug isnot 0>> "Teleporting" during a replay will break saves, avoid it if you don't know how to fix saves.<</if>></span>
	<br>
	Scenes per page (Click search to update): <<numberslider "_itemsPerPage" "12" 4 40 2>>
	<br><br>
	Search: <<textbox "_sceneSearch" "">>
	<<link "Search">>
		<<set _sceneSearch to _sceneSearch.replace(/[^a-zA-Z\u4e00-\u9fa5 0-9]+/g,"")>>
		<<set _listPage to 1>>
		<<updateSceneViewer>>
	<</link>>
	<br><br>
<</widget>>

<<widget "scenesViewerCalc">>
	<<if _sceneSearch.length is 0>>
		<<set _scenes to clone($scenes)>>
	<<else>>
		<<set _scenes to {}>>
		<<for _label, _value range $scenes>>
			<<set _lowerName to clone(_value.name).toLowerCase()>>
			<<set _lowerPassages to "".concat(_value.startPassage).toLowerCase()>>
			<<if _value.name.toLowerCase().includes(_sceneSearch.toLowerCase()) or "".concat(_value.startPassage).toLowerCase().includes(_sceneSearch.toLowerCase())>>
				<<run _scenes[_label] to clone(_value)>>
			<</if>>
		<</for>>
	<</if>>
	<<set _keys to Object.keys(_scenes)>>
	<<set _keys to _keys.sort()>>
	<<set _scenesAvailable to _keys.length gt 0>>
	<<if _listPage is undefined>>
		<<set _listPage to 1>>
	<</if>>
	<<set _listMaxItems to _itemsPerPage>>
	<<set _listPageMax to Math.ceil(_keys.length / _listMaxItems)>>
	<<set _indexStart to ((_listPage - 1) * _listMaxItems)>>
	<<set _indexEnd to (_indexStart + _listMaxItems gt _keys.length ? _keys.length : _indexStart + _listMaxItems)>>
<</widget>>

<<widget "scenesViewer">>
	<<if _scenesAvailable>>
		<<for _i to _indexStart; _i lt _indexEnd; _i++>>
			<<set _item to _scenes[_keys[_i]]>>
			<<if _item.unlocked is false and $debug is 0>>
				<span class="no-numberify red">
					Locked
				</span>
			<<elseif _item.name is undefined or _item.startPassage is undefined or _item.passages is undefined>>
				<span class="no-numberify red">
					Error in key '<<print _keys[_i]>>'.
				</span>
			<<else>>
				<<capture _item>>
					<span class="no-numberify">
						<<link [[_item.name|_item.startPassage]]>><<setupReplayScene _item.name _item.startPassage _item.passages>><<print _item.manualVariableChanges>><</link>>
					</span>
				<</capture>>
			<</if>>
		<</for>>
	<<else>>
		No Scenes Found.
	<</if>>
<</widget>>

<<widget "scenesViewerControls">>
	<<set _disabled = _listPage > 1 ? "" : "disabled">>
	<div @class="'div-link btn-pagination prev ' + _disabled">
		<<link "Previous">>
			<<if _listPage > 1>>
				<<set _listPage -= 1>>
				<<updateSceneViewer>>
			<</if>>
		<</link>>
		<div class="btn-pagination-arrow">&lt;</div>
	</div>
	<div>
		<<print (_listPage) + " out of " + _listPageMax>>
	</div>
	<<set _disabled = _listPage < _listPageMax ? "" : "disabled">>
	<div @class="'div-link btn-pagination next ' + _disabled">
		<<link "Next">>
			<<if _listPage < _listPageMax>>
				<<set _listPage += 1>>
				<<updateSceneViewer>>
			<</if>>
		<</link>>
		<div class="btn-pagination-arrow">&gt;</div>
	</div>
	<<run linkifyDivs('#scenesViewerControls')>>
<</widget>>

<<widget "updateSceneViewer">>
	<<scenesViewerCalc>>
	<<replace "#scenesViewer">><<scenesViewer>><</replace>>
	<<replace "#scenesViewerControls">><<scenesViewerControls>><</replace>>
<</widget>>

<<widget "saveCompareTool">>
	Stored Variables are lost on page refresh.
	<div id="saveCompareUI">
		<<saveCompareUI>>
	</div>
<</widget>>

<<widget "saveCompareUI">>
	<<link "Store Save1">><<set window.variableData1 to clone(V)>><<replace "#saveCompareUI">><<saveCompareUI>><</replace>><</link>>
	<<print (window.variableData1 isnot undefined ? "(Stored)" : "")>>
	<br>
	<<link "Store Save2">><<set window.variableData2 to clone(V)>><<replace "#saveCompareUI">><<saveCompareUI>><</replace>><</link>>
	<<print (window.variableData2 isnot undefined ? "(Stored)" : "")>>
	<br><br>
	<<if window.variableData1 and window.variableData2>>
		<<link "Compare Saves">><<set _comparedResult to saveDataCompare(window.variableData1,window.variableData2)>><<replace "#saveCompareUI">><<saveCompareUI>><</replace>><</link>>
	<</if>>
	<<if _comparedResult>>
		<<set _skip to ["map","NPCName","NPCList","saveDetails","lastgenerated","description","npcadult","lastOptions","danger","lock","femaleclimax","anusactiondefault","anusactioncarry","enemyhealthmax","enemyhealth","enemyarousal","mouthactiondefault","enemyanger","npcspeechcycle","mouthactioncarry","rng","pass","speechcycle"]>>
		<<if Object.keys(_comparedResult).length gt 0>>
			<div id="comparedResult">
				<<for _label, _value range _comparedResult>>
					<<if _skip.includes(_label)>>
						<<continue>>
					<</if>>
					<div class="item">
						<<if typeof _value[0] === 'object'>>
							<<print _label>>
							<br><br>
							<<print JSON.stringify(_value[0])>>
							<br><br>
							<<print JSON.stringify(_value[1])>>
						<<else>>
							<<print _label>> - <<print _value[0]>> - <<print _value[1]>>
						<</if>>
					</div>
				<</for>>
			</div>
		<<else>>
			Saves Identical
		<</if>>
	<</if>>
<</widget>>

<<widget "freezePlayerStats">>
	<<set $statFreeze to true>>
	<<set $frozenValues to {}>>
	<<set _skipKeys to ["replayScene","frozenKeys","frozenValues","statFreeze","passage","debug"]>>
	<<set $frozenKeys to Object.keys(V)>>
	<<run $frozenKeys.forEach(function(key){
		if(!_skipKeys.includes(key) && key.indexOf("real_") !== 0){
			V.frozenValues[key] = clone(V[key]);
		}
	})>>
<</widget>>

<<widget "unfreezePlayerStats">>
	<<unset $statFreeze>>
	<<if $frozenValues>>
		<<run Object.keys(V.frozenValues).forEach(function(key){
			V[key] = clone(V.frozenValues[key]);
		})>>
	<</if>>
	<<if $frozenKeys>>
		<<set _skipKeys to ["replayScene","frozenKeys","frozenValues","statFreeze","passage","debug"]>>
		<<run Object.keys(V).forEach(function(key){
			if(!_skipKeys.includes(key) && key.indexOf("real_") !== 0){
				if(!V.frozenKeys.includes(key)){
					delete V[key];
				}
			}
		})>>
	<</if>>
	<<unset $frozenValues>>
	<<unset $frozenKeys>>
<</widget>>

<!-- False passages to initiate scene viewer scenes, for cases where starting passages have too many potential roadblocks -->
:: Rent First Robin SV
<br>

You are in the main hall of the orphanage.
<<if $christmas is 1 and Time.monthDay is 25 and Time.dayState isnot "night">>
	The room is alive with festive merriment.
<<else>>
	<<if Time.dayState is "day">>
	A couple of orphans on cleaning duty sweep the floor.
	<<elseif Time.dayState is "dusk">>
	You hear hushed voices.
	<<elseif Time.dayState is "dawn">>
		<<if Time.schoolDay>>
		The orphans are heading off to school.
		<<else>>
		The orphans are leaving to find work.
		<</if>>
	<<elseif Time.dayState is "night">>
	The orphans must be asleep.
	<</if>>
<</if>>
<br><br>

A hand rests on your shoulder from behind. <span class="red">It's Bailey.</span>
<br><br>
<<if $robinfirstrentfight and ($baileypaychain lt 2 or $renttime lte -1)>>
	<<rentduerobin 0>>
<<else>>
	<<rentdue 0>>
<</if>>

:: Robin Caught CD SV Start
<<set $outside to 0>><<set $location to "home">><<effects>>
<<npc Robin>><<person1>>

You go to Robin's room. There's a note on the door. "Please don't enter!"
<br><br>

<<link [[Enter|Robin Caught CD]]>><</link>>
<br>
<<link [[Leave|Orphanage]]>><<set $fromRobinRoom to true>><<endevent>><</link>>
<br>

:: Robin CD Door SV Start
<<set $outside to 0>><<set $location to "home">><<effects>>
<<set _robin to statusCheck("Robin")>>
<<npc Robin>><<person1>>

You play a cooperative game with <<him>>. You're about to win the stage when there's a knock on the door.
<br><br>

Robin, still wearing <<his>>
<<if _robin.pronoun is "f">>
	<<npcClothesText _robin "upper">> and chest binder,
<<else>>
	<<npcClothesText _robin "upper">>,
<</if>>
flushes deeply. "This looks bad doesn't it?"
<br><br>
<<link [[Let Robin respond|Robin CD Door Answer]]>><</link>>
<br>
<<link [[Tell Robin to ignore it|Robin CD Door Ignore]]>><</link>>
<br>

:: Robin CD Socialise SV Start
<<set $outside to 0>><<set $location to "home">><<home_effects>><<effects>>

You are in the main hall of the orphanage. A couple of orphans on cleaning duty sweep the floor.
<br><br>

<<npc Robin>>
<<generatey2>><<person2>>

You see Robin talking with a <<person2>><<person>>. Robin waves you over.
<br><br>

<<link [[Go over|Robin CD Socialise]]>><</link>>
<br>
<<link [[Ignore|Orphanage]]>><<endevent>><</link>>

:: Robin's Stand CD SV Intro
<<set _uniqueoptions to true>>
<<robinroom>>

<<if Time.season is "winter">>
	<<set _stand to "hot chocolate stand">>
	<<set _inLocation to "in the park">>
<<else>>
	<<set _stand to "lemonade stand">>
	<<set _inLocation to "on the beach">>
<</if>>
Robin looks at the clock on the wall and sighs. "I need to get my _stand set up."
<<He>> slowly gets up. "I'll get changed, then I'll be _inLocation if you want to see me."
<br><br>

<<if _robin.lovestage gte 5>>
	<<link [[Ask what's wrong|Robin's Stand CD Explain Full]]>><<npcincr Robin love 3>><</link>><<gglove>>
<<else>>
	<<link [[Ask what's wrong|Robin's Stand CD Explain Demo]]>><</link>>
<</if>>
<br>
<<if Time.season is "winter">>
	<<link [[Offer to help set up (0:30)|Robin Chocolate Set]]>><<pass 30>><<npcincr Robin love 1>><</link>><<glove>>
<<else>>
	<<link [[Offer to help set up (0:30)|Robin's Lemonade Set]]>><<pass 30>><<npcincr Robin love 1>><</link>><<glove>>
<</if>>
<br>
<<link [[Leave|Orphanage]]>><<set $fromRobinRoom to true>><<endevent>><</link>>
<br>

:: Robin School CD SV Intro
<<npc Robin>><<person1>>
<<set _robin to statusCheck("Robin")>>
You enter Robin's room, <<hes>> standing in front of <<his>> mirror holding a
<<print (_robin.pronoun is "m" ? "girl's" : "boy's")>> school uniform in front of <<him>>.
<<He>> seems focused on how <<he>> looks and doesn't notice you at first.
<br><br>

<<if $robinromance is 1>>
	<<link [[Compliment|Robin School CD Compliment]]>><</link>>
<<else>>
	<<link [[Interrupt|Robin School CD Interrupt]]>><</link>>
<</if>>
<br>
<<link [[Leave|Orphanage]]>><</link>>
<br>

:: SV Temple Kylar Monstrance
<<set $outside to 1>><<set $location to "town">><<effects>><<set $bus to "wolf">>
You are on Wolf Street. The nearby forest bleeds into the town here, particularly where the temple sits.
<<if Time.dayState is "day">>
	<<if $weather is "rain">>
		The trees sway in the wind.
	<<elseif $weather is "snow">>
		The trees sway in the wind, dislodging snow from their branches.
	<<else>>
		It's one of the quieter parts of town.
	<</if>>
<<elseif Time.dayState is "dawn">>
	You hear chanting from within.
<<elseif Time.dayState is "dusk">>
	It strikes a forbidding silhouette against the darkening sky.
<<elseif Time.dayState is "night">>
	It's almost pitch-black.
<</if>>
<<streeteffects>>
<br><br>

<<monstrance_accost>>
