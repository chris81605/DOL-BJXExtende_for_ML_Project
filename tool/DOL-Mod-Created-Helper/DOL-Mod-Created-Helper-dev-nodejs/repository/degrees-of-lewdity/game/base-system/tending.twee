:: Widgets Tending [widget]
<<widget "plots_init">>
	/*
	* First argument: location.
	* Second argument: number of plots.
	* Third argument: ground type (earth, water).
	* Fourth argument: plot quality
	* Fifth argument: plot size */
	/* Note: if you plan to add a new plot size, make sure to update all the places where plot size is hardcoded. */
	<<set $_plotsInLocation to []>>
	<<for _i to 0; _i lt _args[1]; _i++>>
		<<set $_plotsInLocation[_i] to clone(setup.tending.plot_base)>>
		<<set $_plotsInLocation[_i].bed to _args[2]>>
		<<set $_plotsInLocation[_i].quality to _args[3]>>
		<<set $_plotsInLocation[_i].size to _args[4]>>
	<</for>>
	<<set $plots[_args[0]] to $_plotsInLocation>>
<</widget>>

<<widget "add_plot">>
	/*Adds a plot to an existing location. Arguments are as in the plots_init widget, but the second argument and beyond are shifted down one.*/
	<<set $_plotsInLocation to $plots[_args[0]]>>
	<<set $_last to $_plotsInLocation.length>>
	<<set $_plotsInLocation.push(clone(setup.tending.plot_base))>>
	<<set $_plotsInLocation[$_last].bed to _args[1]>>
	<<set $_plotsInLocation[$_last].quality to _args[2]>>
	<<set $_plotsInLocation[$_last].size to _args[3]>>
<</widget>>

<<widget "clear_plot">>
	/*Returns a plot to its default state.
	First argument: location.
	Second argument: index of plot to be reset.
	OR
	First argument: the plot to operate on.
	*/
	<<if _args[1] isnot undefined>>
		<<set $_plot to $plots[_args[0]][_args[1]]>>
	<<else>>
		<<set $_plot to _args[0]>>
	<</if>>

	<<if $_plot.baseQuality isnot undefined and !$backgroundTraits.includes("greenthumb")>>
		<<if $_plot.fertiliserDecay gt 0>>
			<<set $_plot.fertiliserDecay-->>
		<</if>>
		<<if $_plot.fertiliserDecay is 0 and $_plot.quality gt $_plot.baseQuality>>
			<<set $_plot.quality-->>
			<<set $tendingvars.plotDecay to 2>>
			<<if $_plot.quality gt $_plot.baseQuality>>
				<<set $_plot.fertiliserDecay to 2>>
				<<if $_plot.size isnot "large">>
					<<set $_plot.fertiliserDecay to 3>>
				<</if>>
				<<set $tendingvars.plotDecay to 1>>
			<</if>>
		<</if>>
	<</if>>

	<<set $_plot.water to 0>>
	<<set $_plot.days to 0>>
	<<set $_plot.plant to "none">>
	<<set $_plot.till to 0>>
	<<set $_plot.stage to 0>>
<</widget>>

<<widget "display_quality">><<silently>>
	<<set $_plot to _args[0]>>
	<<switch $_plot.bed>>
		<<case "water">><<set _bedType to "water">>
		<<case "earth">><<set _bedType to "soil">>
		<<default>><<set _bedType to clone($_plot.bed)>>
	<</switch>>

	<<switch Math.clamp($_plot.quality, 0, 4)>>
		<<case 1>> <<set $_result to `<span class="blue">poor `+_bedType+`</span>`>>
		<<case 2>> <<set $_result to `<span class="lblue">decent `+_bedType+`</span>`>>
		<<case 3>> <<set $_result to `<span class="teal">good `+_bedType+`</span>`>>
		<<case 4>> <<set $_result to `<span class="green">excellent `+_bedType+`</span>`>>
		<<default>> <<set $_result to `<span class="red">ERROR</span>`>>
	<</switch>>
<</silently>><<print $_result>><</widget>>

<<widget "display_plot">>/*Argument is the plot location you want to display.*/
	<<set _location to _args[0]>>
	<<set $_plotsHere to $plots[_location]>>
	<<set _water_needed to 0>>
	There <<print $_plotsHere.length is 1 ? "is" : "are">> <<number $_plotsHere.length>> tillable
	<<switch $_plotsHere[0].size>>
		<<case "small">> <span class="lblue"><<print $_plotsHere.length is 1 ? "bed" : "beds">></span>
		<<case "medium">> <span class="teal"><<print $_plotsHere.length is 1 ? "plot" : "plots">></span>
		<<default>> <span class="green"><<print $_plotsHere.length is 1 ? "field" : "fields">></span>
	<</switch>>
	here.
	<<if $fertiliser.current + $fertiliser.used gt 0>>
		You have <<number $fertiliser.current>> fertiliser.
	<</if>>
	Tilling time is reduced by tending skill.
	<br><br>

	<<set $_i to 0>>

	<<for _plantbed range $_plotsHere>>
		<<capture _plantbed>>
			<span class="gold"><<wordify_i $_i true>> plot (<<display_quality _plantbed>>):</span>

			<<if _plantbed.stage gte 1>>
				<<set $_plantedPlant to setup.plants[_plantbed.plant]>>

				<<if $weather is "rain">>
					<<set _plantbed.water to 1>>
				<</if>>
			<</if>>

			<<if _plantbed.stage gte 5>>
				<span class="green">The <<print $_plantedPlant.plural>> are flowering, and ready for picking.</span>
				<br>
				<<switch _plantbed.size>>
					<<case "small">> <<set $_timeStr to "0:05">><<set _pass to 5>>
					<<case "medium">> <<set $_timeStr to "0:15">><<set _pass to 15>>
					<<default>> <<set $_timeStr to "1:00">><<set _pass to 60>>
				<</switch>>

				<<if $leftarm is "bound" and $rightarm is "bound">>
					<span class="red">Can't pick when your arms are bound.</span>
				<<else>>
					<<if $options.images is 1 and $_plantedPlant.icon>>
						<img class="tending_icon" @src="`img/misc/icon/tending/` + $_plantedPlant.icon">
					<</if>>
					<<link "Pick ($_timeStr)" $passage>><<pass _pass>><<tending_harvest _plantbed>><<clear_plot _plantbed>><</link>>
				<</if>>
				<br>

			<<elseif _plantbed.stage is 4>>
				<span class="teal">The <<print $_plantedPlant.plural>> are budding.</span>
			<<elseif _plantbed.stage is 3>>
				<span class="lblue">The <<print $_plantedPlant.plural>> have grown into seedlings.</span>
			<<elseif _plantbed.stage is 2>>
				<span class="blue">Thin <<print $_plantedPlant.plural>> sprout from the soil.</span>
			<<elseif _plantbed.stage is 1>>
				<span class="blue">You planted <<print $_plantedPlant.name.replace(/_/g," ")>> seeds here.</span>
			<<else>>
				<<if _plantbed.till gte 1>>
					The soil is ready for planting.
					<<tendingPlantSeedsOptions _location _plantbed>>
				<<else>>
					The soil is ready for tilling.
					<br>
					<<tendingTillOptions _plantbed>>
				<</if>>
			<</if>>
			<<if _plantbed.stage gte 1 and _plantbed.stage lt 5>>
				<<if _plantbed.bed is "water">>
					<br>
				<<elseif _plantbed.water is 1>>
					<span class="green">The <<print (_plantbed.bed is "large" ? "field" : "plot")>> is watered.</span>
					<br>
				<<else>>
					<span class="purple">The <<print (_plantbed.bed is "large" ? "field" : "plot")>> is dry.</span>
					<br>
					<<tendingWaterPlot _plantbed>>
					<br>
				<</if>>
			<</if>>
			<br>

		<</capture>>
		<<set $_i++>>
	<</for>>

	<<if _water_needed gte 1>>
		<<set _plotsToWater to $_plotsHere.filter(plot => plot.stage >= 1 && plot.stage < 5 && plot.bed !== "water" && plot.water === 0)>>
		<<set _totalTimeToWater to 0>>
		<<run _plotsToWater.forEach(plot => _totalTimeToWater += setup.tending.wateringTimes[plot.size])>>
		<<set $_time to getTimeString(_totalTimeToWater)>>

		<<if $farm_attack_timer is 0>>
			<<set $_hoursUntilAttack to (24 - Time.hour)>>
		<</if>>
		<<if $location is "alex_farm" and _plotsToWater.length gte $_hoursUntilAttack>>
			<span class="pink">You won't have enough time to water all your fields before Remy's arrival.</span>
		<<else>>
			<<if !($leftarm is "bound" and $rightarm is "bound")>>
				<<gardenicon "water">>
				<<link "Water all dry beds ($_time)" $passage>>
					<<tendingWaterAllDryBeds _plotsToWater>><<tiredness _water_needed>><<physique _water_needed>><<tending _water_needed>>
				<</link>><<gtiredness>><<gtending>>
			<</if>>
		<</if>>
		<br>

	<</if>>

	<<if $debug is 1 and $_plotsHere.filter(plot => plot.stage > 0 && plot.stage < 5).length gte 1>>
		<br>
		<<link "DEBUG: Instagrow all plants here" $passage>><<run tendingInstaGrow(_location)>><</link>>
		<br>
	<</if>>
<</widget>>

<<widget "tendingWaterPlot">>
	<<set _plantbed to _args[0]>>

	<<set _water_needed += 1>>
	<<switch _plantbed.size>>
		<<case "small">><<set _tStatup to 1>><<set _tPass to 5>>
		<<case "medium">><<set _tStatup to 2>><<set _tPass to 15>>
		<<default>><<set _tStatup to 6>><<set _tPass to 60>>
	<</switch>>

	<<set $_time to getTimeString(_tPass)>>
	<<if $leftarm is "bound" and $rightarm is "bound">>
		<span class="red">Can't water when your arms are bound.</span>
	<<else>>
		<<gardenicon "water">>
		<<link "Water ($_time)" $passage>>
			<<tending _tStatup>><<pass _tPass>><<set _plantbed.water to 1>><<set $tendingvars.plot_watered to true>>
			<<tiredness _tStatup>><<physique _tStatup>><<event_trigger>>
		<</link>><<gtiredness>><<gtending>>
	<</if>>
<</widget>>

<<widget "tendingWaterAllDryBeds">>
	<<set $_plotsToWater to _args[0]>>

	<<for $_plot range $_plotsToWater>>
		<<set $_plot.water to 1>>
		<<set _waterTime to setup.tending.wateringTimes[$_plot.size]>>
		<<pass _waterTime>><<event_trigger>>
	<</for>>
	<<set $tendingvars.all_plots_watered to true>>
<</widget>>

<<widget "tendingPlantSeedsOptions">>
	<<set _location to _args[0]>>
	<<set _plantbed to _args[1]>>

	<<if $plants_known.length is 0>>
		Search wild areas for seeds to plant.
	<</if>>
	<<switch _location>>
		<<case "farm">> <<set _irrigation to ($farm.irrigation ? $farm.irrigation : 0)>>
		<<default>> <<set _irrigation to 0>>
	<</switch>>
	<<for _plantType range $plants_known>>
		<br>
		<<set $_plant to setup.plants[_plantType]>>
		<<if !$_plant>>
			<span class="red">Plant type '<<print _plantType>>' not found.</span>
			<br><br>
			Please report this.
		<<elseif $_plant.season.includes(Time.season) or (_location is "garden" and $alex_greenhouse gte 3)>>
			/* comparing soil types; check if target bed is compatible with the seed's soil type */
			<<if $_plant.bed is _plantbed.bed>>
				<<switch _plantbed.size>>
					<<case "small">><<set _passTime to 30>>
					<<case "medium">><<set _passTime to 90>>
					<<default>><<set _passTime to 180>>
				<</switch>>
				<<set $_timeString to getTimeString(_passTime)>>
				<<capture _passTime _plantbed _plantType>>
					<<if $options.images is 1 and $_plant.icon>>
						<img class="tending_icon" @src="`img/misc/icon/tending/` + $_plant.icon">
					<</if>>
					<<link "Plant $_plant.plural ($_timeString)" $passage>><<pass _passTime>><<run plantSeedsInPlot(_plantbed, _plantType)>><</link>>
				<</capture>>
				<<if $statdisable is "f">>
					<span class="orange">(<<print $_plant.days>> days)</span>
				<</if>>
			<<else>>
				<span class="blue"><<print $_plant.plural.toLocaleUpperFirst()>> only grow in <<print $_plant.bed>>.</span>
			<</if>>
		<<else>>
			<<tending_season_notice $_plant>>
		<</if>>

	<</for>>
	<br>
<</widget>>

<<widget "tendingTillOptions">>
	<<set _plantbed to _args[0]>>

	<<if currentSkillValue('tending') gte 1500>>
		<<set _baseTime to 3>>
		<<set _baseTiredness to 1>>
	<<else>>
		<<set $_ti to Math.clamp(Math.floor(currentSkillValue('tending') / 200), 0, 6)>>
		<<set _baseTime to [30,25,20,15,10,5,4][$_ti]>>
		<<set _baseTiredness to [6,5,4,3,2,1,1][$_ti]>>
	<</if>>

	<<if _plantbed.size is "medium">>
		<<set _baseTime *= 3>>
		<<set _baseTiredness *= 2>>
	<<elseif _plantbed.size is "large">>
		<<set _baseTime *= 12>>
		<<set _baseTiredness *= 6>>
	<</if>>

	<<set _timeString to getTimeString(_baseTime)>>

	<<if $farm_attack_timer is 0>>
		<<set $_timeUntilAttack to ((23 - Time.hour) * 60) + (60 - Time.minute)>>
	<</if>>
	<<if $leftarm is "bound" and $rightarm is "bound">>
		<span class="red">Can't till when your arms are bound.</span>
		<br>
	<<else>>
		<<if $location is "alex_farm" and _baseTime gte $_timeUntilAttack>>
			<span class="pink">Not enough time to till the field before Remy's arrival.</span>
		<<else>>
			<<capture _baseTiredness _baseTime _plantbed>>
				<<gardenicon "till">>
				<<link "Till (_timeString)" $passage>>
					<<set $tendingvars.plot_tilled to true>>
					<<tiredness _baseTiredness>><<physique _baseTiredness>>
					<<pass _baseTime>>
					<<if $location is "farm">>
						<<farm_count _baseTime>>
					<</if>>
					<<set _plantbed.till to 1>>
				<</link>><<gtiredness>>
			<</capture>>
		<</if>>
		<br>
		<<if $fertiliser.current gte 1 and _plantbed.quality lt 4 and currentSkillValue('tending') gte 400>>
			<<set _baseTimeFert to Math.floor(_baseTime * 1.5)>>
			<<set _timeString to getTimeString(_baseTimeFert)>>
			<<set _fertTiredness to Math.floor(_baseTiredness * 1.5)>>
			<<capture _baseTimeFert _fertTiredness _plantbed>>
				<<gardenicon "fertiliser">>
				<<link "Till and apply fertiliser (_timeString)" $passage>>
					/* Till */
					<<set $tendingvars.plot_tilled_fertiliser to true>>
					<<tiredness _fertTiredness>><<physique _fertTiredness>>
					<<pass _baseTimeFert>>
					<<if $location is "farm">>
						<<farm_count _baseTimeFert>>
					<</if>>
					<<set _plantbed.till to 1>>

					/* Fertilise */
					<<set $fertiliser.current-->><<set $fertiliser.used++>>
					<<set _plantbed.quality++>>
					<<if !$backgroundTraits.includes("greenthumb")>>
						<<if _plantbed.baseQuality is undefined>>
							<<set _plantbed.baseQuality to clone(_plantbed.quality - 1)>>
						<</if>>
						<<set _plantbed.fertiliserDecay to 2>>
						<<if _plantbed.size isnot "large">>
							<<set _plantbed.fertiliserDecay++>>
						<</if>>
					<</if>>
				<</link>><<gtiredness>>
			<</capture>>
			<br>
		<</if>>
	<</if>>
<</widget>>

<<widget "plot_effects">>
	<<if $tendingvars.plot_watered>>
		You water the plot. <span class="gold">You get a good workout.</span>
		<br>
	<<elseif $tendingvars.all_plots_watered>>
		You water the plots. <span class="gold">You get a good workout.</span>
		<br>
	<</if>>
	<<if $tendingvars.harvest>>
		You harvest <<number $tendingvars.harvest_amount>> <<print $tendingvars.harvest_name>>.
		<<if $tendingvars.plotDecay>>
			The fertiliser effect has decayed<<if $tendingvars.plotDecay is 2>> completely<</if>>.
		<</if>>
		<br>
	<</if>>
	<<if $tendingvars.plot_tilled>>
		You get to work removing weeds and tilling the soil. It's hard going, but when you're done the soil is ready for planting.
		<span class="gold">You get a good workout.</span>
		<br>
	<</if>>
	<<if $tendingvars.plot_tilled_fertiliser>>
		You get to work removing weeds and tilling the soil while mixing in some fertiliser. It's hard going, but when you're done the soil is ready for planting.
		<span class="gold">You get a good workout.</span>
	<</if>>
	<<if $tendingvars.plot_planted>>
		You plant the seeds in the cool earth.
		<br>
	<</if>>
	<<if $weather is "rain">>
		<span class="green">The rain soaks the ground.</span>
		<br>
	<</if>>
	<<run unsetTendingVars()>>
<</widget>>

<<widget "tending_day">>
	<<for _location range Object.keys($plots)>>
		<<switch _location>>
			<<case "farm">> <<set _irrigation to ($farm.irrigation ? $farm.irrigation : 0)>>
			<<default>> <<set _irrigation to 0>>
		<</switch>>
		<<for $_plot range $plots[_location]>>
			/* growth check */
			<<if $_plot.stage gte 1 and ($_plot.water is 1 or $_plot.bed is "water")>>
				<<set $_plot.days += 1>>
				<<if $_plot.days gte setup.plants[$_plot.plant].days * (($_plot.stage+1) / 5)>>
					<<set $_plot.stage += 1>>
				<</if>>
			<</if>>

			/* should this check really happen AFTER the growth check? */
			<<if $weather is "rain">>
				<<set $_plot.water to 1>>
			<<elseif _irrigation gte 1>>
				<<set $_plot.water to 1>>
				<<set _irrigation-->>
			<<else>>
				<<set $_plot.water to 0>>
			<</if>>
		<</for>>
	<</for>>
<</widget>>

<<widget "tending_harvest">>
	/* Argument is the plot you want to harvest */
	<<set $_plot to _args[0]>>
	<<set $_type to $_plot.plant>>
	<<if $plants[$_type] is undefined>>
		<<set $plants[$_type] to {"name": setup.plants[$_type].name, "plural": setup.plants[$_type].plural, "amount": 0}>>
	<<elseif $plants[$_type].name is undefined>>
		<<set $plants[$_type] to {"name": setup.plants[$_type].name, "plural": setup.plants[$_type].plural, "amount": $plants[$_type].amount}>>
	<</if>>
	<<switch $_plot.size>>
		<<case "small">> <<set _tending_amount to random(10, (currentSkillValue('tending') / 20) + 10)>>
		<<case "medium">> <<set _tending_amount to random(10, (currentSkillValue('tending') / 10) + 20)>>
		<<default>> <<set _tending_amount to random(10, (currentSkillValue('tending') / 2) + 50)>>
	<</switch>>
	<<set _tending_amount *= setup.plants[$_type].multiplier>>
	<<switch Math.clamp($_plot.quality, 1, 4)>>
		<<case 4>> <<set _tending_amount *= 1.6>>
		<<case 3>> <<set _tending_amount *= 1.4>>
		<<case 2>> <<set _tending_amount *= 1.2>>
	<</switch>>
	<<if !$backgroundTraits.includes("greenthumb") and $tending is 1000 and $plants_known.length gte 16 and
	($fertiliser.used gte 40 or ($fertiliser.used gte 25 and $farm_stage gte 6))>>
		<<run $backgroundTraits.pushUnique("greenthumb")>>
		<span class="gold">Spending a large amount of time in the dirt has given you a green thumb.</span>
		<br>
	<</if>>
	<<if $backgroundTraits.includes("greenthumb")>>
		<<set _tending_amount *= 1.2>>
	<</if>>
	<<set _tending_amount *= $tending_yield_factor>>

	<<set _tending_amount to Math.trunc(_tending_amount)>>
	<<set $plants[$_type].amount += _tending_amount>>

	<<set $tendingvars.harvest to true>>
	<<set $tendingvars.harvest_amount to _tending_amount>>
	<<set $tendingvars.harvest_name to (_tending_amount is 1 ? setup.plants[$_type].name.replace(/_/g," ") : setup.plants[$_type].plural)>>
<</widget>>

<<widget "tending_pick">>
	/*
	* First argument: plant type.
	* Second argument: minimum number picked.
	* Third argument: maximum number picked.
	*/
	<<set $_type to _args[0]>>
	<<if $plants[$_type] is undefined>>
		<<set $plants[$_type] to {"name": setup.plants[$_type].name, "plural": setup.plants[$_type].plural, "amount": 0}>>
	<<elseif $plants[$_type].name is undefined>>
		<<set $plants[$_type] to {"name": setup.plants[$_type].name, "plural": setup.plants[$_type].plural, "amount": $plants[$_type].amount}>>
	<</if>>

	<<if _args[2] gte 1>>
		<<set _tending_amount to random(_args[1], _args[2])>>
	<<else>>
		<<set _tending_amount to random(1, 5)>>
	<</if>>

	<<if !setup.plants[$_type].special.includes("large") and setup.plants[$_type].bed isnot "bird_nest">>
		<<set _tending_amount *= (1 + (currentSkillValue('tending') / 1000))>>
	<</if>>
	<<if $backgroundTraits.includes("greenthumb")>>
		<<set _tending_amount *= 1.2>>
	<</if>>
	<<set _tending_amount to Math.trunc(_tending_amount)>>
	<<set $plants[$_type].amount += _tending_amount>>
	<<set $wild_plant_stat += _tending_amount>>

	You pick
	<<if $_type is "bird_egg">>
		up
	<</if>>
	<<if _tending_amount is 1>>
		<<if (["a","e","i","o","u","A","E","I","O","U"].some(letter => $_type.startsWith(letter)))>>
			an
		<<else>>
			a
		<</if>>
		<<if $options.images is 1 and setup.plants[$_type].icon>>
			<img class="tending_icon" @src="`img/misc/icon/tending/` + setup.plants[$_type].icon">
		<</if>>
		<<print setup.plants[$_type].name.replace(/_/g," ")>>.
	<<else>>
		<<if $options.images is 1 and setup.plants[$_type].icon>>
			<img class="tending_icon" @src="`img/misc/icon/tending/` + setup.plants[$_type].icon">
		<</if>>
		<<number _tending_amount>> <<print setup.plants[$_type].plural>>.
	<</if>>
<</widget>>

<<widget "tending_give">>
	<<if _args[0]>>
		<<set $_type to _args[0]>>
		<<if $plants[$_type] is undefined>>
			<<set $plants[$_type] to {"name": setup.plants[$_type].name, "plural": setup.plants[$_type].plural, "amount": 0}>>
		<<elseif $plants[$_type].name is undefined>>
			<<set $plants[$_type] to {"name": setup.plants[$_type].name, "plural": setup.plants[$_type].plural, "amount": $plants[$_type].amount}>>
		<</if>>

		<<set $plants[$_type].amount += (_args[1] ? _args[1] : 1)>>
	<</if>>
<</widget>>

<<widget "tending_season_notice">>
	<<set $_plant to _args[0]>>
	<span class="blue">
		<<set $_seasons to formatList($_plant.season)>>
		<<print $_plant.plural.toLocaleUpperFirst()>> can only be planted in $_seasons.
	</span>
<</widget>>
