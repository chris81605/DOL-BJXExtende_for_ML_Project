:: FeatsUI [widget]
<<widget "feats">>
	<<updateFeats>>
	<br>
	As you play through Degrees of Lewdity, you will obtain <span class="gold">feats</span> by completing different tasks. The more feats you earn, the more <span class="gold">VrelCoins</span> you will earn. When you start a new game, your VrelCoins can be used to purchase <span class="gold">feat boosters</span>. These boosters grant you bonuses in your next game.
	<br><br>
	This tab displays all the feats that have been unlocked in your <span class="gold">most recently loaded save</span>, which will carry over to your next playthrough. VrelCoins are earned linearly, over the course of a single playthrough. <span class="red">Save-hopping may cause your VrelCoins and unlocked feats to disappear from this page.</span> 
	<br><br>
	Multiple runs are necessary in order to achieve all feats. If you have multiple saves with different feats earned, you will be able to combine these feats when you start a new game by using the <span class="gold">Import all feats</span> button on the Feat Boosters page. Keep this in mind if you are aiming for 100% completion!
	<br><br>
	Some feats display as earned as soon as you meet the requirements, while others won't trigger until the next in-game hour or at midnight. Happy hunting!
	<br><br>

	<<if $feats.locked>>
		<span class="red">You can't earn feats as you have enabled cheats at some point.</span>
	<<elseif $debug is 1>>
		<span class="red">Feats are disabled during debug mode.</span>
	<<elseif $replayScene isnot undefined>>
		<span class="red">Feats are disabled during replay mode.</span>
	<<elseif $feats.soft or $feats.pregnancyLocked>>
		<span class="red">Some feats are locked in this current game.</span>
	<<else>>
		<span class="green">You can earn feats.</span>
	<</if>>
	<br><br>
	You currently have <<if $feats.allSaves.point is undefined>><span class="gold"><<print $feats.allSaves.points>></span><<else>><span class="red">0</span><</if>> VrelCoins.
	<br><br>
	<<set $feats.filter to "General">>
	Filter by:
	<select id="featTypes" name="featTypes" onchange="V.feats.filter = this.value; Wikifier.wikifyEval('<<replace #featsList>><<featsList>><</replace>>')">
		<option value="General" selected>General</option>
		<option value="Stats">Stats</option>
		<option value="Social">Social</option>
		<option value="Transformation">Transformation</option>
		<option value="Discoveries">Discoveries</option>
		<option value="Special">Special</option>
		<option value="Pregnancy">Pregnancy</option>
		<option value="General" hidden="hidden" selected="selected">General</option>
	</select>
	<br><br>
	<div id="featsList">
		<<featsList>>
	</div>
<</widget>>

<<widget "featsList">>
	<<set _skip to []>>
	<<set _filter to "All">>
	<<set _keys to Object.keys(setup.feats)>>
	<<for _i to 0; _i lt _keys.length; _i++>>
		<<if !setup.feats[_keys[_i]].filter.includes($feats.filter)>>
			<<continue>>
		<</if>>
		<<if Object.keys($feats.currentSave).includes(_keys[_i])>>
			<<set _owned to 2>>
		<<elseif Object.keys($feats.allSaves).includes(_keys[_i])>>
			<<set _owned to 1>>
		<<else>>
			<<set _owned to 0>>
			<<if setup.feats[_keys[_i]].hidden or _skip.includes(setup.feats[_keys[_i]].series)>>
				<<continue>>
			<</if>>
			<<if setup.feats[_keys[_i]].series isnot "">>
				<<set _skip.push(setup.feats[_keys[_i]].series)>>
			<</if>>
		<</if>>
		<div class="feat">
			<div class="featImage">
				<<if _owned gt 0>>
					<<switch setup.feats[_keys[_i]].difficulty>>
						<<case 1>><img @src="'img/ui/CopperCoin'+(_owned is 1 ? 'Dull':'')+'.png'" class="featCoin" @style="(_owned is 1 ? 'filter:brightness(65%) contrast(85%);':'')">
						<<case 2>><img @src="'img/ui/SilverCoin'+(_owned is 1 ? 'Dull':'')+'.png'" class="featCoin" @style="(_owned is 1 ? 'filter:brightness(75%) contrast(85%);':'')">
						<<case 3>><img @src="'img/ui/GoldCoin'+(_owned is 1 ? 'Dull':'')+'.png'" class="featCoin" @style="(_owned is 1 ? 'filter:brightness(65%) contrast(85%);':'')">
						<<case 4>><img @src="'img/ui/PlatinumCoin'+(_owned is 1 ? 'Dull':'')+'.png'" class="featCoin" @style="(_owned is 1 ? 'filter:brightness(65%) contrast(85%);':'')">
						<<case 5>><img @src="'img/ui/JeweledCoin'+(_owned is 1 ? 'Dull':'')+'.png'" class="featCoin" @style="(_owned is 1 ? 'filter:brightness(65%) contrast(85%);':'')">
					<</switch>>
				<<else>>
					<img class="dot">
				<</if>>
			</div>
			<div class="featText">
				<<if ($feats.pregnancyLocked and setup.feats[_keys[_i]].pregnancyLockable) or ($feats.pregnancySillyLocked and setup.feats[_keys[_i]].pregnancySillyLockable) or ($feats.soft and setup.feats[_keys[_i]].softLockable) or $feats.locked or ($gamemode is "soft" or $alluremod lt 1)>>
					<<set _titleColor to " red">>
				<<else>>
					<<set _titleColor to "">>
				<</if>>
				<<if _owned gt 0 or setup.feats[_keys[_i]].hint is undefined>>
					<span @class="'title' + _titleColor"><<print setup.feats[_keys[_i]].title>></span>
					<br>
					<span class="text"><<print setup.feats[_keys[_i]].desc>></span>
				<<else>>
					<span @class="'title' + _titleColor">?????</span>
					<br>
					<span class="text"><<print setup.feats[_keys[_i]].hint>></span>
				<</if>>
				<br>
				<<if _owned is 2>>
					<span class="text">Earned on: <<print new Date($feats.currentSave[_keys[_i]]).toLocaleString(returnTimeFormat())>></span>
				<<elseif _owned is 1>>
					<span class="text">Originally Earned on: <<print new Date($feats.allSaves[_keys[_i]]).toLocaleString(returnTimeFormat())>></span>
				<</if>>
			</div>
		</div>
	<</for>>
<</widget>>

/*Feat Popup*/
<<widget "displayFeat">>
	<<silently>>
		<<if _featsCount is undefined>>
			<<set _featsCount to 0>>
		<<else>>
			<<set _featsCount++>>
		<</if>>
	<</silently>>
	<<capture _featsCount>>
	<div @id="'feat-' + _featsCount" @class="'feat feat' + _featsCount + (_featsCount gte 3 ? ' hiddenFeat' : '') + ' feat-overlay'">
		<div class="featImage">
			<<switch setup.feats[_args[0]].difficulty>>
				<<case 1>><img src="img/ui/CopperCoin.gif" class="featCoin">
				<<case 2>><img src="img/ui/SilverCoin.gif" class="featCoin">
				<<case 3>><img src="img/ui/GoldCoin.gif" class="featCoin">
				<<case 4>><img src="img/ui/PlatinumCoin.gif" class="featCoin">
				<<case 5>><img src="img/ui/JeweledCoin.gif" class="featCoin">
			<</switch>>
		</div>
		<div class="featText">
			<span class="title"><<print setup.feats[_args[0]].title>></span>
			<br>
			<span class="text"><<print setup.feats[_args[0]].desc>></span>
		</div>
		<div @id="'closeFeat-' + _featsCount" class="closeFeat" @onclick="'closeFeats('+ _featsCount +')'"></div>
	</div>
	<</capture>>
<</widget>>

/*Feat Points Menu*/
<<widget "featsPointsMenu">>
	<div id="featsStats" class="settingsToggleIndent">
		<<if $feats.allSaves.points is undefined or $feats.allSaves.points is 0>>
			You have earned a lifetime total of <span class="red">0 VrelCoins</span> and cannot purchase Feat Boosters.
			<br>
			<span class="black small-description">If this is incorrect, please load your last save and restart.</span>
		<<else>>
			You have earned a lifetime total of <span class="green"><<print $feats.allSaves.points>> VrelCoins.</span>
		<</if>>
	</div>
	/*Have to do this due to the `????` names*/
	<<set _listbox to '<<listbox "_upgradeNameID" autoselect>>'>>
	<<for $_i to 0; $_i lt _upgradeNames.length; $_i++>>
		<<if !$featsBoosts.upgradeDetails[_upgradeNames[$_i]].hidden>>
			<<set _listbox += '<<option _visibleUpgradeNames[' + $_i + '] _visibleUpgradeIDs[' + $_i + ']>>'>>
		<</if>>
	<</for>>
	<<set _upgradeName to _upgradeNames[_upgradeNameID or 0]>>
	<<set _listbox += '<</listbox>>'>>
	<span class="gold settingsToggleIndent">Jump to a specific feat boost:</span>
	<<print _listbox>>

	<div class="settingsGridFeats">
		<div class="settingsHeader">
			<span id="featName"><<featName>></span>
			<br>
			<span style="font-size:80%;">
				<<link "Previous">>
					<<set _upgradeNameID-->>
					<<if _upgradeNameID lt 0>>
						<<set _upgradeNameID to _upgradeNames.length - 1>>
					<</if>>
					<<if $featsBoosts.upgradeDetails[_upgradeNames[_upgradeNameID]].hidden>>
						<<for _upgradeNameID; $featsBoosts.upgradeDetails[_upgradeNames[_upgradeNameID]].hidden; _upgradeNameID-->>
						<</for>>
					<</if>>
					<<set _upgradeName to _upgradeNames[_upgradeNameID]>>
					<<updateFeatsPointsMenu>>
					<<updateFeatName>>
				<</link>> |
				<<link "Next">>
					<<set _upgradeNameID++>>
					<<if _upgradeNameID gte _upgradeNames.length>>
						<<set _upgradeNameID to 0>>
					<</if>>
					<<if $featsBoosts.upgradeDetails[_upgradeNames[_upgradeNameID]].hidden>>
						<<for _upgradeNameID; $featsBoosts.upgradeDetails[_upgradeNames[_upgradeNameID]].hidden; _upgradeNameID++>>
							<<if (_upgradeNameID + 1) gte _upgradeNames.length>>
								<<set _upgradeNameID to 0>>
								<<break>>
							<</if>>
						<</for>>
					<</if>>
					<<set _upgradeName to _upgradeNames[_upgradeNameID]>>
					<<updateFeatsPointsMenu>>
					<<updateFeatName>>
				<</link>>
			</span>
		</div>
		/*<<set _upgradeName to _upgradeNames[_upgradeNameID]>>*/
		<div @id="'feats-' + _upgradeName" class="settingsToggleItem">
			<<featsMenu _upgradeName>>
			<<if $featsBoosts.pointsUsed isnot 0>>
				<hr>
				Purchased Feat Boosts:
				<ul>
					<<for $_i to 0; $_i lt _upgradeNames.length; $_i++>>
						<<if $featsBoosts.upgrades[_upgradeNames[$_i]] gt 0>>
							<li>
							<<switch _upgradeNames[$_i]>>
								<<case "randomClothing">>
									<<print ($featsBoosts.clothingGender is "Either" ? "Male and Female" : $featsBoosts.clothingGender)>> <<print $featsBoosts.name[_upgradeNames[$_i]]>>: <span class="gold"><<print $featsBoosts.upgrades[_upgradeNames[$_i]]>></span> coins
								<<default>>
									<<print $featsBoosts.name[_upgradeNames[$_i]]>>: <span class="gold"><<print $featsBoosts.upgrades[_upgradeNames[$_i]]>></span> coins
							<</switch>>
							</li>
						<</if>>
					<</for>>
				</ul>
				You have<span class="green"> <<print $feats.allSaves.points - $featsBoosts.pointsUsed>> VrelCoins</span> left to spend on Feat Boosts.
			<</if>>
		</div>
	</div>
<</widget>>

<<widget "updateFeatName">>
	<<replace #featName>>
		<<featName>>
	<</replace>>
<</widget>>

<<widget "featName">>
	<<set _details to $featsBoosts.upgradeDetails[_upgradeName]>>
	<<set _count to _details.count>>
	<<if _count gte _details.minCount>>
		<<switch _upgradeName>>
			<<case "money">>
				<span class="gold">Starting Money</span>
			<<case "grades">>
				<span class="gold">Starting School Grades</span>
			<<case "purity" "impurity">>
				<span class="gold" style="text-transform: capitalize;">Daily _upgradeName Boost</span>
			<<case "newLife">>
				<span class="gold">A New Life</span>
			<<case "aNewBestFriend">>
				<span class="gold">A New Best Friend</span>
			<<case "randomClothing">>
				<span class="gold">Random Clothing</span>
			<<case "tattoos">>
				<span class="gold">Starting Tattoos</span>
			<<case "defaultMoves">>
				<span class="gold">Extra Default Moves</span>
			<<case "specialClothing">>
				<span class="gold">Special Clothing</span>
			<<case "sexToys">>
				<span class="gold">Sex Toys</span>
			<<default>>
				<span class="gold"  style="text-transform: capitalize;">Starting _upgradeName Grade</span>
		<</switch>>
	<<else>>
		<span class="red">?????</span>
	<</if>>
<</widget>>

<<widget "featsMenu">>
	<<set _name to _args[0]>>
	<<capture _name>>
		<<set _details to $featsBoosts.upgradeDetails[_name]>>
		<<set _count to _details.count>>
		<<if _count gte _details.minCount>>
			<<if $feats.allSaves.points is undefined or $feats.allSaves.points is 0>>
				<span class="red">Earn some VrelCoins in order to purchase this feat boost!</span>
			<<else>>
				<<switch _name>>
					<<case "money">>
						You will start the game with <span class="green"> £<<print $money/100 + $featsBoosts.upgrades.money * 50 * _count / _details.cost>>.00</span>.
					<<case "grades">>
						You will start the game with <<if $featsBoosts.upgrades.grades / _details.cost is 2>><span class="lblue">B</span><<elseif $featsBoosts.upgrades.grades / _details.cost is 1>><span class="blue">C</span><<else>><span class="purple">D</span><</if>> grades.
					<<case "purity">>
						<<if ($featsBoosts.upgrades[_name] / _details.cost) is 0>>
						You will always gain <span class="green">1</span> point of purity per day. Purchased purity boosts will increase your daily purity gain. <i>Actions you take can negate or amplify your purity gains.</i>
						<<else>>
						You will always gain <span class="green"><<print 1+$featsBoosts.upgrades[_name] / _details.cost>></span> points of purity per day. <i>Actions you take can negate or amplify your purity gains.</i>
						<</if>>
					<<case "impurity">>
						<<if ($featsBoosts.upgrades[_name] / _details.cost) is 0>>
						You will always gain <span class="green">1</span> point of purity per day. Purchased impurity boosts will counteract this daily purity gain. <i>Actions you take can negate or amplify your purity losses.</i>
						<<elseif ($featsBoosts.upgrades[_name] / _details.cost) is 1>>
						You will always lose <span class="red">1</span> point of purity per day. This cancels out the daily point of purity you would normally gain at midnight. <i>Actions you take can negate or amplify your purity losses.</i>
						<<elseif ($featsBoosts.upgrades[_name] / _details.cost) is 2>>
						You will always lose <span class="red">1</span> point of purity per day. <i>Actions you take can negate or amplify your purity losses.</i>
						<<else>>
						You will always lose <span class="red"><<print $featsBoosts.upgrades[_name] / _details.cost - 1>></span> points of purity per day. <i>Actions you take can negate or amplify your purity losses.</i>
						<</if>>
					<<case "newLife">>
						You will start the game <<print ($featsBoosts.upgrades.newLife is 0 ? "<span class='red'>without</span>" : "<span class='green'>with</span>")>> a parasite.
					<<case "aNewBestFriend">>
						You will start the game
						<<switch $featsBoosts.upgrades.aNewBestFriend>>
							<<case 0>><span class='red'>without</span> an ear slime.
							<<case 10>><span class='green'>with</span> an ear slime.
							<<case 20>><span class='green'>with two</span> ear slimes.
						<</switch>>
					<<case "randomClothing">>
						You will start the game with <span class="gold"><<print 3 * $featsBoosts.upgrades.randomClothing / _details.cost>></span> random clothing items.
					<<case "tattoos">>
						<<if $featsBoosts.upgrades.tattoos / _details.cost is 0>>
							You will start the game with <span class="red">no</span> tattoos.
						<<elseif $featsBoosts.upgrades.tattoos / _details.cost is 1>>
							You will start the game with <span class="green">1</span> tattoo.
						<<else>>
							You will start the game with <span class="green"><<print $featsBoosts.upgrades.tattoos / _details.cost>></span> tattoos.
						<</if>>
					<<case "defaultMoves">>
							You will start the game with <span class="green"><<print 2 + $featsBoosts.upgrades.defaultMoves / _details.cost>></span> default movesets. These are sets of actions that can be chosen by default in combat, allowing you to speed up gameplay by not having to manually select your preferred actions. Movesets can be set up in the <span class="gold">Attitudes</span> menu.
					<<case "specialClothing">>
						You will start the game with special clothing from the Forest Shop <<print ($featsBoosts.upgrades.specialClothing is 0?"<span class='red'>locked</span>":"<span class='green'>unlocked</span>")>>. This booster won't automatically unlock new clothing items that have been added.
					<<case "sexToys">>
						You will start the game with
						<<if $featsBoosts.upgrades[_name] / _details.cost is 0>>
							<span class="red">no</span> sex toys.
						<<elseif $featsBoosts.upgrades[_name] / _details.cost gte 1>>
							<span class="green"><<print 3 * $featsBoosts.upgrades.sexToys / _details.cost>></span> sex toys.
						<</if>>
					<<default>>
						You will start the game with
						<<if $featsBoosts.upgrades[_name] / _details.cost is 1>>
							_name at level <span class="pink">F+</span>.
						<<elseif $featsBoosts.upgrades[_name] / _details.cost is 2>>
							_name at level <span class="purple">D</span>.
						<<elseif $featsBoosts.upgrades[_name] / _details.cost is 3>>
							_name at level <span class="purple">D+</span>.
						<<elseif $featsBoosts.upgrades[_name] / _details.cost is 4>>
							_name at level <span class="blue">C</span>.
						<<else>>
							<span class="red">no</span> proficiency in _name.
						<</if>>
				<</switch>>
				<<if _name is "randomClothing">>
					<br>
					<span class="gold bold">Clothing Type: </span>
					<label><<print '<<radiobutton "$featsBoosts.clothingGender" "Either" ' + ($featsBoosts.clothingGender is "Either" ? "checked" : "") + '>>'>> Either</label> |
					<label><<print '<<radiobutton "$featsBoosts.clothingGender" "Male" ' + ($featsBoosts.clothingGender is "Male" ? "checked" : "") + '>>'>> Male</label> |
					<label><<print '<<radiobutton "$featsBoosts.clothingGender" "Female" ' + ($featsBoosts.clothingGender is "Female" ? "checked" : "") + '>>'>> Female</label>
					<br>
					<span class="gold bold">Enable Custom Colour (expect crazy results): </span>
						<label><<print '<<radiobutton "$featsBoosts.clothingCustomColors" false ' + ($featsBoosts.clothingCustomColors is false ? "checked" : "") + '>>'>> No</label> |
						<label><<print '<<radiobutton "$featsBoosts.clothingCustomColors" true ' + ($featsBoosts.clothingCustomColors is true ? "checked" : "") + '>>'>> Yes</label>
				<</if>>
				<<if _details.exclusive is "" or $featsBoosts.upgrades[_details.exclusive] is 0>>
					<<featsPointsMenuButtons _name _details.cost _details.limit>>
				<<else>>
					<span class="red">Remove _details.exclusive upgrades to make use of this upgrade.</span>
				<</if>>

				<<if _name is "tattoos">>
					<<set _totalTattoos to $featsBoosts.upgrades.tattoos / _details.cost>>
					<<if _tattooNumber is undefined or _tattooNumber gt _totalTattoos>>
						<<set _tattooNumber to Math.clamp(_totalTattoos, 1, $featsBoosts.upgradeDetails.tattoos.limit / _details.cost)>>
					<</if>>

					<<if _totalTattoos gt 0>>
						<div class="settingsGrid" style="margin:10px 0px">
							<div class="settingsHeader">Tattoo <<print _tattooNumber>>
							<br>
								<<if _tattooNumber gte 1 and _totalTattoos gt 1>>
								<span style="font-size:80%;">
									<<link "Previous Tattoo">>
										<<set _tattooNumber-->>
										<<if _tattooNumber lte 0>>
											<<set _tattooNumber to _totalTattoos>>
										<</if>>
										<<replace #featsPointsMenu>><<featsPointsMenu>><</replace>>
									<</link>> |
									<<link "Next Tattoo">>
										<<set _tattooNumber++>>
										<<if _tattooNumber gt _totalTattoos>>
											<<set _tattooNumber to 1>>
										<</if>>
										<<replace #featsPointsMenu>><<featsPointsMenu>><</replace>>
									<</link>>
								</span>
								<</if>>
							</div>
							<div class="settingsToggleItem">
								<span class="listMargin">
									<span class="gold">Tattoo Type:</span>
									<<set _penOptions to ["Tattoo","Brand"]>>
									<<listbox `"$featsBoosts.tattoos["+_tattooNumber+"].pen"` autoselect>>
										<<optionsfrom _penOptions>>
									<</listbox>>
								</span>
							</div>
							<div class="settingsToggleItem">
								<span class="gold">Tattoo Location:</span>
								<<set _bodyPartOptions to ["Forehead","Left cheek","Right cheek","Left shoulder","Right shoulder","Back","Breasts","Left bottom","Right bottom","Left thigh","Right thigh","Pubic"]>>
								<<for _l to 1; _l lte _totalTattoos; _l++>>
									<<if _tattooNumber is _l>>
										<<continue>>
									<</if>>
									<<run _bodyPartOptions.delete($featsBoosts.tattoos[_l].bodypart)>>
								<</for>>
								<<listbox `"$featsBoosts.tattoos["+_tattooNumber+"].bodypart"` autoselect>>
									<<option "Random">>
									<<optionsfrom _bodyPartOptions>>
								<</listbox>>
							</div>
							<div @id="_tattooNumber + 'tattooFilter'" class="settingsToggleItem">
								<<tattooFilter>>
							</div>
							<div @id="_tattooNumber + 'tattooList'" class="settingsToggleItem">
								<<tattooList>>
							</div>
						</div>
						<<run $(() => {
						const currentList = '#' + _tattooNumber + 'tattooList';
						const currentFilterId = '#' + _tattooNumber + 'tattooFilter';
							$(currentFilterId + ' select').on('input change', e => {
							new Wikifier(null, `<<print "${currentList}">> <<replace "${currentList}">><<tattooList>><</replace>>`);
							}).trigger('change');
						})>>
					<</if>>
				<</if>>
				<<if _name is "sexToys">>
					<div id="sexToys"><<sexToysFeatUI>></div>
				<</if>>
				<<if _name is "aNewBestFriend" and $featsBoosts.upgradeDetails.aNewBestFriend.count gte 2>>
					<div id="aNewBestFriend">
						<label>Earslime Starting type:
							<<listbox "$featsBoosts.earSlimeType" autoselect>>
								<<option "Immature and passive" "immaturePassive">>
								<<option "Immature and aggressive" "immatureAggressive">>
								<<option "Partly grown and agressive" "grownAggressive">>
							<</listbox>>
						</label>
					</div>
				<</if>>
			<</if>>
		<<else>>
			<span class="red"><<print $featsBoosts.missing[_name]>></span>
		<</if>>
	<</capture>>
<</widget>>

<<widget "tattooFilter">>
	<span class="gold">Filter designs by:</span>
	<<set _tattooFilters = {
		"All" : "all",
		"Image" : "object",
		"Text" : "text",
		"Masculine" : "m",
		"Feminine" : "f",
		"Bestiality" : "bestiality",
		"Cattle" : "cattle",
		"Combat" : "combat",
		"Criminal" : "criminal",
		"Exhibitionism" : "exhibitionism",
		"Prostitution" : "prostitution",
		"Rape" : "rape",
		"Sex" : "sex",
		"Violence" : "violence",
		"Pregnancy" : "pregnancy",
		"Impreg" : "impreg",
		}>>
	<<listbox `"$tattooFilter"+_tattooNumber` autoselect>>
		<<optionsfrom _tattooFilters>>
	<</listbox>>
<</widget>>

<<widget "tattooList">>
	<span class="gold">Tattoo Design:</span>
	<<featsTattooOptions>>
	<<listbox `"$featsBoosts.tattoos["+_tattooNumber+"].tattoo"` autoselect>>
		<<option "Random">>
		<<optionsfrom _featsTattooOptions>>
	<</listbox>>
<</widget>>

<<widget "featsTattooOptions">>
	<<if _featsTattooAll is undefined>>
		<<set _featsTattooAll to []>>
		<<for _value range setup.bodywriting>>
			<<if _value.featSkip is true>>
				<<continue>>
			<</if>>
			<<run _featsTattooAll.push(_value.writing)>>
		<</for>>
	<</if>>
	<<set _featsTattooOptions to []>>
	<<switch _tattooNumber>>
		<<case 1>><<set _tattooFilter to $tattooFilter1>>
		<<case 2>><<set _tattooFilter to $tattooFilter2>>
		<<case 3>><<set _tattooFilter to $tattooFilter3>>
		<<case 4>><<set _tattooFilter to $tattooFilter4>>
		<<case 5>><<set _tattooFilter to $tattooFilter5>>
	<</switch>>
	<<for _value range setup.bodywriting>>
		<<if (_tattooFilter is "all" and _value.featSkip)
		or (_tattooFilter is "object" and (_value.featSkip or _value.type isnot _tattooFilter))
		or (_tattooFilter is "text" and (_value.featSkip or _value.type isnot _tattooFilter))
		or (_tattooFilter is "m" and (_value.featSkip or _value.gender isnot _tattooFilter))
		or (_tattooFilter is "f" and (_value.featSkip or _value.gender isnot _tattooFilter))
		or (_tattooFilter isnot "all" and _tattooFilter isnot "object" and _tattooFilter isnot "text" and _tattooFilter isnot "m" and _tattooFilter isnot "f" and (_value.featSkip or _value.special isnot _tattooFilter))>>
			<<continue>>
		<</if>>
		<<run _featsTattooOptions.push(_value.writing)>>
	<</for>>
<</widget>>

<<widget "featsPointsMenuButtons">>
	<<set _type to _args[0]>>
	<<set _multi to _args[1]>> /*_details.cost */
	<<set _max to _args[2]>> /*_details.limit */
	<<set _maxupgrades to _max/_multi - ($featsBoosts.upgrades[_name] / _details.cost)>>
	<<set _totalUpgrades to _max/_multi>>
	<<set _purchasedUpgrades to $featsBoosts.upgrades[_name] / _details.cost>>
	<br><br>
	<span class="gold bold">Upgrades:</span>
	<br>
	<div style="margin-bottom:10px;">
	<<switch _name>>
	<<case "money">>
		Each purchased upgrade will add <span class="green">£<<print $featsBoosts.upgradeDetails.money.limit * 5>></span> to your starting money.
	<<case "grades">>
		Each purchased upgrade will raise your starting school grades by <span class="green">one letter grade.</span>
	<<case "purity">>
		Each purchased upgrade will increase your daily purity by one point per level.
	<<case "impurity">>
		Each purchased upgrade will decrease your daily purity by one point per level.
	<<case "newLife">>
		<<if _totalUpgrades is 2>>
			Purchase the first upgrade to start the game with a hermaphrodite tentacle parasite. Purchase the second upgrade to give it perfect activity; otherwise it will have random activity.
		<<else>>
			Purchase the first upgrade to start the game with a hermaphrodite tentacle parasite with random activity. Acquire a second broodmother feat to give it perfect activity.
		<</if>>
	<<case "aNewBestFriend">>
		Purchase this upgrade to start the game with a ear slime parasite.
	<<case "randomClothing">>
		Each purchased upgrade gives you three random clothing items of the specified gender.
	<<case "tattoos">>
		Each purchased upgrade will allow you to get one starting tattoo or brand of your choice.
 	<<case "defaultMoves">>
		Each purchased upgrade will grant you an additional action set.
	<<case "specialClothing">>
		Purchase this upgrade to unlock previously unlocked special clothes.
	<<case "sexToys">>
		Each purchased upgrade will give you three starting sex toys of your choice.
	<<default>>
		Each purchased upgrade will raise your _name level by <span class="green">one letter grade.</span>
	<</switch>>
	</div>
	<<capture _type _multi _max>>
		<div class="featButtonContainer">
		<<if _multi is undefined>>
			<<set _multi to 1>>
		<</if>>
		<<if _max is undefined>>
			<<set _max to 20>>
		<</if>>
		<<if $featsBoosts.upgrades[_type] gte 1 * _multi>>
			<div class="featButton roundl">
			<<button "<span class='fa-icon fa-left'></span><span class='fa-icon fa-left'></span>">>
				<<print "<<updateFeatsPointsMenu _type " + (-1 * (_purchasedUpgrades * _multi)) +">>">>
			<</button>>
			</div>
		<<else>>
			<div class="featButtonGrey roundl">
			<<button "<span class='fa-icon fa-left'></span><span class='fa-icon fa-left'></span>">>
			<</button>>
			</div>
		<</if>>
		<<if $featsBoosts.upgrades[_type] gte 1 * _multi>>
			<div class="featButton">
			<<button "<span class='fa-icon fa-left'></span>">>
				<<print "<<updateFeatsPointsMenu _type " + (-1 * _multi) +">>">>
			<</button>>
			</div>
		<<else>>
			<div class="featButtonGrey">
			<<button "<span class='fa-icon fa-left'></span>">>
			<</button>>
			</div>
		<</if>>
		<div class="gold featButton buttonDisable">
			<<button "_purchasedUpgrades / _totalUpgrades">>
			<</button>>
		</div>
		<<if $featsBoosts.upgrades[_type] / _multi lt  _totalUpgrades
		and $feats.allSaves.points - $featsBoosts.pointsUsed gte 1 * _multi>>
			<div class="featButton">
			<<button "<span class='fa-icon fa-right'></span>">>
				<<print "<<updateFeatsPointsMenu _type " + (1 * _multi) +">>">>
			<</button>>
			</div>
		<<else>>
			<div class="featButtonGrey">
			<<button "<span class='fa-icon fa-right'></span>">>
			<</button>>
			</div>
		<</if>>
		<<if $featsBoosts.upgrades[_type] / _multi lt _totalUpgrades
		and $feats.allSaves.points - $featsBoosts.pointsUsed gte _maxupgrades * _multi>>
			<div class="featButton roundr">
			<<button "<span class='fa-icon fa-right'></span><span class='fa-icon fa-right'></span>">>
				<<print "<<updateFeatsPointsMenu _type " + (_maxupgrades * _multi) +">>">>
			<</button>>
			</div>
		<<else>>
			<div class="featButtonGrey roundr">
			<<button "<span class='fa-icon fa-right'></span><span class='fa-icon fa-right'></span>">>
			<</button>>
			</div>
		<</if>>
		</div>
		<div class=" black small-description" style="margin-top:10px;">(<span class="gold">_details.cost <<print (_details.cost is 1 ? "VrelCoin" : "VrelCoins")>></span> per upgrade)</div>

		<<if _type is "tending">>
			<div style="margin-top:10px;">
			<span class="green">Green Thumb</span> - More bountiful crops and no decay when using fertiliser. Start with one fertiliser.
			<div class="featButton roundl roundr" style="margin-top:5px;">
			<<if $feats.allSaves.points - $featsBoosts.pointsUsed gte $featsBoosts.upgradeDetails.greenThumb.cost and !$featsBoosts.upgrades.greenThumb>>
				<<button "Start with this trait">><<print "<<updateFeatsPointsMenu greenThumb $featsBoosts.upgradeDetails.greenThumb.cost>>">><</button>>
			<<elseif $featsBoosts.upgrades.greenThumb>>
				<<button "Remove this trait">><<print "<<updateFeatsPointsMenu greenThumb " + (-1 * $featsBoosts.upgradeDetails.greenThumb.cost) + ">>">><</button>>
			<</if>>
			</div>
			</div>
			<div class=" black small-description" style="margin-top:10px;">(<span class="gold"><<print "$featsBoosts.upgradeDetails.greenThumb.cost">> VrelCoins</span> to purchase)</div>
		<</if>>
	<</capture>>
<</widget>>

<<widget "sexToysFeatUI">>
	<<set _totalToys to $featsBoosts.upgrades.sexToys / 10>>
	<<if _toyNumber is undefined or _toyNumber gt _totalToys>>
		<<set _toyNumber to 0>>
	<</if>>
	<<if _toys is undefined>>
		<<set _toys to {}>>
		<<run Object.values(setup.sextoys).forEach(toy => T.toys[toy.namecap] = toy.index)>>
	<</if>>
	<<if _totalToys gt 1>>
		<div class="settingsGrid" style="margin:10px 0px">
			<div class="settingsHeader">Toy <<print _toyNumber+1>>
			<br>
				<<if _toyNumber gte 0 and _totalToys gt 1>>
				<span style="font-size:80%;">
					<<link "Previous Toy">>
						<<set _toyNumber-->>
						<<if _toyNumber lt 0>>
							<<set _toyNumber to _totalToys-1>>
						<</if>>
						<<replace #featsPointsMenu>><<featsPointsMenu>><</replace>>
					<</link>> |
					<<link "Next Toy">>
						<<set _toyNumber++>>
						<<if _toyNumber+1 gt _totalToys>>
							<<set _toyNumber to 0>>
						<</if>>
						<<replace #featsPointsMenu>><<featsPointsMenu>><</replace>>
					<</link>>
				</span>
				<</if>>
			</div>
			<div class="settingsToggleItem">
				<span class="gold">Sex Toy:</span>
				<div id="sexToysFeatUIIndex">
					<<listbox "$featsBoosts.sexToys[_toyNumber].index" autoselect>>
						<<option "Random" -1>>
						<<optionsfrom _toys>>
					<</listbox>>
				</div>
			</div>
			<div id="sexToysFeatUIColour">
				<<sexToysFeatUIColour>>
			</div>
		</div>
		<<run $(() => { $('#sexToysFeatUIIndex select').on('input change', e => {
			new Wikifier(null, "<<replace '#sexToysFeatUIColour'>><<sexToysFeatUIColour>><</replace>>");
		}).trigger('change') })>>
	<</if>>
<</widget>>

<<widget "sexToysFeatUIColour">>
	<<if $featsBoosts.sexToys[_toyNumber].index isnot undefined and $featsBoosts.sexToys[_toyNumber].index isnot -1>>
		<<set _toyColours to {}>>
		<<set _selectedToy to Object.values(setup.sextoys).find(toy => toy.index === V.featsBoosts.sexToys[T.toyNumber].index)>>
		<<if _selectedToy and _selectedToy.colour_options and _selectedToy.colour_options.length>>
			<<run _selectedToy.colour_options.forEach(colour => _toyColours[colour] = colour)>>
		<</if>>
	<<else>>
		<<set _toyColours to {}>>
	<</if>>
	<<if Object.values(_toyColours).length gt 1>>
	<div class="settingsToggleItem">
		<span class="gold">Colour:</span><br>
		<<listbox "$featsBoosts.sexToys[_toyNumber].colour" autoselect>>
			<<option "Random" -1>>
			<<optionsfrom _toyColours>>
		<</listbox>>
	</div>
	<</if>>
<</widget>>

<<widget "updateFeatsPointsMenu">>
	<<if $feats.allSaves.points - $featsBoosts.pointsUsed gte _args[1] or _args[1] lt 0>>
		<<set $featsBoosts.upgrades[_args[0]] += _args[1]>>
		<<set $featsBoosts.pointsUsed += _args[1]>>
	<</if>>
	<<replace #featsPointsMenu>>
		<<featsPointsMenu>>
	<</replace>>
<</widget>>

/* Fake feats, for when you want to gaslight the player. Used for the Wraith, primarily */
<<widget "displayFeatFake">>
	<<if _args[0] and $feats.locked is false and $cheatdisable is "t" and $debug is 0 and $gamemode isnot "soft" and $alluremod gte 1>>
		<<silently>>
			<<if _featsCount is undefined>>
				<<set _featsCount to 0>>
			<<else>>
				<<set _featsCount++>>
			<</if>>
		<</silently>>
		<div @id="'feat-' + _featsCount" class="feat">
			<div class="featImage">
				<<switch setup.feats[_args[0]].difficulty>>
					<<case 1>><img src="img/ui/CopperCoinFake.gif" class="featCoin">
					<<case 2>><img src="img/ui/SilverCoinFake.gif" class="featCoin">
					<<case 3>><img src="img/ui/GoldCoinFake.gif" class="featCoin">
					<<case 3>><img src="img/ui/PlatinumCoinFake.gif" class="featCoin">
					<<case 3>><img src="img/ui/JeweledCoinFake.gif" class="featCoin">
				<</switch>>
			</div>
			<div class="featText">
				<<switch _args[0]>>
					<<case "It Belongs in a Museum">>
						<span class="title">It Belongs in a Museum?</span>
					<<default>>
						<<if setup.feats[_args[0]].title.endsWith("?")>>
							<span class="text"><<print setup.feats[_args[0]].title>></span>
						<<else>>
							<span class="text"><<print setup.feats[_args[0]].title>>?</span>
						<</if>>
						<span class="title"><<print setup.feats[_args[0]].title>>?</span>
				<</switch>>
				<br>
				<<switch _args[0]>>
					<<case "No More Control">>
						<span class="text">You don't know how to get lewder... right?</span>
					<<case "Teachers Nightmare">>
						<span class="text">You are a terror... right?</span>
					<<case "Anti-Social Moth">>
						<span class="text">Who needs friends... right?</span>
					<<default>>
						<<if setup.feats[_args[0]].desc.endsWith(".")>>
							<span class="text"><<print setup.feats[_args[0]].desc>>.. right?</span>
						<<else>>
							<span class="text"><<print setup.feats[_args[0]].desc>>... right?</span>
						<</if>>
				<</switch>>
			</div>
			<div @id="'closeFeat-' + _featsCount" class="closeFeat" @onclick="'closeFeats('+ _featsCount +')'"></div>
		</div>
	<</if>>
<</widget>>
