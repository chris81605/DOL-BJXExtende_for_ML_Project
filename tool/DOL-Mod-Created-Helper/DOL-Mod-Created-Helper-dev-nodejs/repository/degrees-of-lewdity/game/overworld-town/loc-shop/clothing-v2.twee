:: Clothing Shop v2 Widgets [widget]

<<widget "exitclothingshop">>
	<div class="button-back-to-shop div-link">
		<<if $clothes_choice and $shopDefaults.alwaysBackToShopButton is false>>
			<<link "Back">><<unset $clothes_choice>><<updateclotheslist>><<set $retrieveShopCustomColor to {}>><</link>>
		<<else>>
			<<link "Back to shop">><<unset $clothes_choice>><<updateclothingshop>><<set _shopNameFilter to "">><<set $retrieveShopCustomColor to {}>><</link>>
		<</if>>
	</div>
<</widget>>

/*
	args[0] should be "clothing", "forest" or "school"
	args[1] is a slot: "upper", "lower", "under_upper", etc.
	args[2] should be "outfits" or missing. Combination of "over_upper", "upper" or "under_upper" in args[1] with "outfits" provides respective outfits category
*/
<<widget "clothingShopv2">>
	<<exitclothingshop>>
	<<if _args[0]>>
		<<set _shopLocation to _args[0]>>
	<</if>>
	<<if _args[1]>>
		<<set $clothingShopSlot to _args[1]>>
	<</if>>
	<<set _outfits to _args[2] == "outfits" or _args[2] == true>>

	<<if $shopClothingFilter is undefined>>
		<<shopClothingFilterReset>>
	<</if>>
	<<if $shopItemsPerPage is undefined>>
		<<set $shopItemsPerPage = 12>>
	<</if>>

	<<if $shopClothingFilter.active>>
		<span class="green">The filter is currently active!</span>
		<<link "Reset it">>
			<<shopClothingFilterReset>>
			<<updateclotheslist>>
		<</link>>
		<br><br>
	<</if>>
	<!-- Details about the selected item -->
	<div class="clothing-details">
		<<shopDetailsv2>>
	</div>

	<!-- Category tabs at the top of the list -->
	<<set _iconName to clothingSlotToIconName($clothingShopSlot, _outfits)>>
	<<shopCategoryTabs _iconName>>

	<!-- Search bar -->
	<<if !_shopNameFilter>>
		<<set _shopNameFilter to "">>
	<</if>>
	<span class="searchButtons">
		Search: <<textbox "_shopNameFilterTextbox" _shopNameFilter>>
		<<button Clear>>
			<<set _shopNameFilter to "">>
			<<shopCategoryReplace `clothingSlotToIconName($clothingShopSlot, _outfits)`>>
		<</button>>
	</span>
	<<if $daily.corruptionSlimeClothes is undefined and $earSlime.corruption gte 10>>
		<<set _baseCorruption to (($earSlime.corruption / 2) + ($earSlime.growth / 2))>>
		<<set $daily.corruptionSlimeClothes to random(_baseCorruption * 5, _baseCorruption * 25) - currentSkillValue('willpower')>>
	<</if>>
	<<set _unavailableItems to !!$daily.corruptionSlimeClothes or ($earSlime.forcedCommando and $earSlime.forcedCommando gt 0) or ($earSlime.forcedDressing and $earSlime.forcedDressing.days) or playerBellySize() gte 12>>
	<<if _unavailableItems>>
		<label><<checkbox "$shopClothingFilter.availableOnly" false true autocheck>> Hide unavailable items</label>
	<<else>>
		<<set $shopClothingFilter.available to false>>
	<</if>>
	<<run $(() => {
		var shopTimer = null;
		$('#textbox--shopnamefiltertextbox').on('input change', e => {
			T.shopNameFilter = shopSearchReplacer(e.target.value);
			clearTimeout(shopTimer);
			shopTimer = setTimeout(updateShop, 300);
		});
		$('#checkbox-shopclothingfilteravailableonly').on('change', e => {
			updateShop();
		});
		var updateShop = () => {
			new Wikifier (null, "<<shopCategoryReplace `clothingSlotToIconName($clothingShopSlot, _outfits)`>>");
			$('#textbox--shopnamefiltertextbox').focus();
		}
	})>>

	<!-- List of clothes -->
	<<set _items = setup.clothes[$clothingShopSlot].filter(x => x.shop.includes(_shopLocation) and x.outfitSecondary is undefined
		and ($clothingShopSlot === 'all'
			or
			(_outfits and x.outfitPrimary isnot undefined and Object.keys(x.outfitPrimary).some(secSlot => secSlot.includes("lower")))
			or
			(!_outfits and (x.outfitPrimary is undefined or Object.keys(x.outfitPrimary).every(secSlot => !secSlot.includes("lower")))))
		and (_shopNameFilter is '' or x.name.includes(_shopNameFilter.toLowerCase()))
		and (!V.shopClothingFilter.availableOnly or !(
			(setup.clothingLayer.torso.includes(V.clothingShopSlot) and x.reveal < Math.clamp(V.daily.corruptionSlimeClothes, 0, 500) and !x.type.includesAny("school", "event")) or
			(V.earSlime.forcedDressing and V.earSlime.forcedDressing.days gt 0 and x.gender isnot V.earSlime.forcedDressing.type and x.gender isnot "n" and !x.type.includesAny("event")) or
			(playerBellySize() >= 12 and x.type.includes("constricting"))
		))
	)>>
	<<set _items = applyClothingShopFilters(_items)>>

	<<set _maxPage = Math.ceil(filterShopGroup(_items).length / $shopItemsPerPage)>>
	<!-- Makes sure $shopPage is never showing a blank page -->
	<<if $shopPage gte _maxPage>>
		<<set $shopPage to 0>>
	<</if>>

	<div id="shop-list-pages" class="shop-list-pages">
		<!-- Generate current page immediately -->
		<<generateshoppage $shopPage>>

		<!-- Generate other pages in background after a delay, so that shop can be displayed sooner -->
		<!-- Having all pages loaded allows for very fast shop catalogue navigation -->
		<!-- Generate via <<repeat>> one by one to not cause a lag spike -->
		<<timed 0.2s>>
			<<set _ppre = $shopPage - 1>>
			<<repeat 0.1s>>
			 	<<if document.getElementById("shop-list-pages") eq null or _ppre lt 0>>
            		<<stop>>
        		<</if>>
				<!-- Prepend pages before the current page -->
				<<prepend '#shop-list-pages'>>
					<<generateshoppage _ppre>>
				<</prepend>>
				<<set _ppre-->>
			<</repeat>>
			<!-- Append pages after the current page -->
			<<set _papp = $shopPage + 1>>
			<<repeat 0.1s>>
				<<if document.getElementById("shop-list-pages") eq null or _papp gte _maxPage>>
            		<<stop>>
        		<</if>>
				<<append '#shop-list-pages'>>
					<<generateshoppage _papp>>
				<</append>>
				<<set _papp++>>
			<</repeat>>
		<</timed>>
	</div>

	<!-- Pages -->
	<div id="shop-pagination" class="shop-pagination">
		<<set _disabled = $shopPage > 0 ? "" : "disabled">>
		<div @class="'div-link btn-pagination prev ' + _disabled">
			<<link "Previous">>
				<<if $shopPage > 0>>
					<<set $shopPage -= 1>>
					<<clothingshopChangePage>>
				<</if>>
			<</link>>
			<div class="btn-pagination-arrow">&lt;</div>
		</div>
		<div class="shop-pages no-numberify">
			<<for _i = 0; _i < _maxPage; _i++>>
				<<capture _i>>
					<<set _active = _i == $shopPage ? "active" : "">>
					<div @class="'div-link page ' + _active">
						<<link "">>
							<<set $shopPage = _i>>
							<<clothingshopChangePage>>
						<</link>>
					</div>
				<</capture>>
			<</for>>
		</div>
		<div class="shop-pages-number hidden">
			<<print ($shopPage + 1) + " out of " + _maxPage>>
		</div>
		<<set _disabled = $shopPage < _maxPage - 1 ? "" : "disabled">>
		<div @class="'div-link btn-pagination next ' + _disabled">
			<<link "Next">>
				<<if $shopPage < _maxPage - 1>>
					<<set $shopPage += 1>>
					<<clothingshopChangePage>>
				<</if>>
			<</link>>
			<div class="btn-pagination-arrow">&gt;</div>
		</div>
	</div>

	<!-- Attach screen resize listener to replace circles in paginator with numbers when not enough space (22px per one circle is min) -->
	<<run $(window).on('resize', () => {
		let pagination = $('#shop-pagination');
		let pages = $(pagination).find('.shop-pages');
		let buttons = $(pagination).find('.btn-pagination');
		let isEnoughSpace = (pagination.width() - buttons.outerWidth() * 2 - 32) / pages.children().length >= 22;

		pages.toggleClass('hidden', !isEnoughSpace);
		pagination.find('.shop-pages-number').toggleClass('hidden', isEnoughSpace);
	})>>

	<!-- Filters -->
	<div class="filters-button no-numberify div-link">
		<<if $options.images is 1>>
			<span class="button-icon"><img src="img/misc/icon/filter.png"></span>
		<<else>>
			Filters
		<</if>>
		<<link "">>
			<<replace '#filters'>><<loadFiltersMenu>><</replace>>
			<<run linkifyDivs('#filters')>>
			<<toggleclass '#filters' 'hidden'>>
		<</link>>
	</div>
	<div id="filters" class="no-click-overlay no-numberify hidden" onclick="$(this).addClass('hidden')">
		<!-- Don't load filters menu right away to not slow down shop loading -->
	</div>

	<!-- Options -->
	<div class="clothingshop-options-button no-numberify div-link">
		<<if $options.images is 1>>
			<span class="button-icon"><img src="img/misc/icon/options.png"></span>
		<<else>>
			Opt.
		<</if>>
		<<link "">>
			<<replace '#shop-options'>><<loadShopOptions>><</replace>>
			<<run linkifyDivs('#shop-options')>>
			<<toggleclass '#shop-options' 'hidden'>>
		<</link>>
	</div>
	<div id="shop-options" class="no-click-overlay no-numberify hidden" onclick="$(this).addClass('hidden')">
		<!-- Don't load options menu right away to not slow down shop loading -->
	</div>

	<!-- Help / Legend button -->
	<<if !$shopDefaults.noHelp>>
		<div class="shop-legend-button no-numberify div-link">
			<<if $options.images is 1>>
				<span class="button-icon"><img src="img/misc/icon/help.png"></span>
			<<else>>
				Help
			<</if>>
			<<link "">>
				<<toggleclass '#shop-legend' 'hidden'>>
				<<toggleclass '.shop-legend-button' 'active'>>
			<</link>>
		</div>
		<<clothingShopLegend>>
	<</if>>

	<!-- Finishing JS logic -->
	<<run linkifyDivs('#clothingShop-div')>>
	<<numberify '#clothingShop-div'>>
	<<run $(() => {
		_maxW = Math.max($('.btn-pagination.next').width(), $('.btn-pagination.prev').width());
		$('.btn-pagination.prev').width(_maxW);
		$('.btn-pagination.next').width(_maxW);
	})>>
<</widget>>

<<widget "clothingshopChangePage">>
	<!-- Make selected page visible -->
	<<run $('#shop-list-pages > div.clothing-shop-page').addClass('hidden no-numberify')>>
	<<run $('#shop-list-pages > div.clothing-shop-page:nth-of-type(' + ($shopPage + 1) + ')').removeClass('hidden no-numberify')>>

	<!-- Highlight selected page indicator -->
	<<run $('#shop-pagination > .shop-pages > div.page').removeClass('active')>>
	<<run $('#shop-pagination > .shop-pages > div.page:nth-of-type(' + ($shopPage + 1) + ')').addClass('active')>>

	<!-- Activate/deactivate Prev/Next buttons -->
	<<run $('#shop-pagination > .btn-pagination.prev').toggleClass('disabled', $shopPage <= 0)>>
	<<run $('#shop-pagination > .btn-pagination.next').toggleClass('disabled', $shopPage >= _maxPage - 1)>>

	<!-- Re-generate keyboard shortcuts -->
	/*<<run Links.generateLinkNumbers($('#clothingShop-div'))>>*/

	<!-- Change page number text on small screens -->
	<<replace '#shop-pagination > .shop-pages-number'>><<print ($shopPage + 1) + " out of " + _maxPage>><</replace>>
<</widget>>

<<widget "generateshoppage">>
	<<set _page = _args[0]>>
	<<set _itemGroups to []>>
	<<set _itemsOnPage = filterShopGroup(_items)>>
	<<set _itemsOnPage = _itemsOnPage.slice(_page * $shopItemsPerPage, (_page + 1) * $shopItemsPerPage)>>
	<<set _hidden = _page == $shopPage ? "" : " hidden">>
	<<set _compact = $shopDefaults.compactMode ? "compact" : "">>

	<<set _colCustomPrimary = getCustomColourStyle('primary')>>
	<<set _colCustomSecondary = getCustomColourStyle('secondary')>>

	<div @class="'clothing-shop-page page-' + _page + _hidden">
		<<for _itemTemp range _itemsOnPage>>
			<<set _item = clone(_itemTemp)>>
			<<set $_realSlot to ($clothingShopSlot is "all" ? _item.realSlot : $clothingShopSlot)>>
			<<set _itemData = setup.clothes[$_realSlot][clothesIndex($_realSlot,_item)]>>
			<<set _locked = $specialClothes[_item.name.replace(/[- ]/g,"")] is "locked">>
			<<set _unlocked = $specialClothes[_item.name.replace(/[- ]/g,"")] is "unlocked">>
			<div class="clothing-item div-link">
				<!-- Clothing icon -->
				<div @class="'clothing-icon ' + _compact">
					<<if $options.images is 1 and _itemData.shopGroup and _items.reduce((prev, curr) => {
						if (!curr.shopGroup) return prev;
						if (curr.shopGroup === _itemData.shopGroup) return prev + 1;
						return prev;
					},0) gt 1>><div class='fa-icon fa-plus clothing-icon-plus'></div>
					<</if>>
					<<if _locked and $options.images is 1>>
						<img src="img/misc/icon/lock.png" class="clothing-locked">
					<<else>>
						<<if _item.colour_options.length gt 0>>
							<<if $shopDefaults.colourItems is "random">>
								<<set _item.colour to _item.colour_options.random()>>
							<<elseif $shopDefaults.colourItems is "default" and _item.colour_options.includes($shopDefaults.color)>>
								<<set _item.colour to $shopDefaults.color>>
								<<if $shopDefaults.color is "custom">>
									<<set _item.colourCustom = _colCustomPrimary>>
								<</if>>
							<</if>>
						<</if>>
						<<if _item.accessory_colour_options.length gt 0>>
							<<if $shopDefaults.colourItems is "random">>
								<<set _item.accessory_colour to _item.accessory_colour_options.random()>>
							<<elseif $shopDefaults.colourItems is "default" and _item.accessory_colour_options.includes($shopDefaults.secColor)>>
								<<set _item.accessory_colour to $shopDefaults.secColor>>
								<<if $shopDefaults.secColor is "custom">>
									<<set _item.accessory_colourCustom to _colCustomSecondary>>
								<</if>>
							<<else>> /* clothing not available with selected acc colour */
								<<set _item.accessory_colour to 0>>
							<</if>>
						<</if>>
						<<clothingicon _item $_realSlot>>
						<!-- Gender icon -->
						<<if _item.gender isnot "n">>
							<span class="clothing-gender">
								<<if $shopDefaults.compactMode>>
									<<if _item.gender is "m">>
										<div class="male"></div>
									<<elseif _item.gender is "f">>
										<div class="female"></div>
									<</if>>
								<<else>>
									<<if $options.images is 1>>
										<<if _item.gender is "m">>
											<img src="img/misc/icon/male.png" class="male">
										<<elseif _item.gender is "f">>
											<img src="img/misc/icon/female.png" class="female">
										<</if>>
									<<else>>
										<<if _item.gender is "m">>
											<span class="male blue bold">♂</span>
										<<elseif _item.gender is "f">>
											<span class="female pink bold">♀</span>
										<</if>>
									<</if>>
								<</if>>
							</span>
						<</if>>
					<</if>>
				</div>

				<div @class="'clothing-body ' + _compact">
					<<if !$shopDefaults.compactMode>>
						<div class="pricetag-placeholder"></div>
					<</if>>
					<span class="clothing-name">
						<<if _locked>>
							<span class="lblue">_itemData.name_cap</span><span class="black">&nbsp;| Locked</span>
						<<else>>
							<<set _csslot = $_realSlot>>
							<<capture _item _itemData _shopLocation _csslot _outfits>>
								<<link _itemData.name_cap>>
									<<set $clothes_choice = clothesIndex(_csslot,_item)>>
									<<set $clothes_choice_reveal = _item.reveal>>
									<<set $clothes_choice_integrity = _itemData.integrity_max>>
									<<if ["over_upper", "upper", "under_upper"].includes(_csslot) and _itemData.outfitPrimary>><<set _outfits to true>><</if>>
									<<unset $colouraction>>
									<<unset $accessorycolouraction>>
									<<run window.scrollTo(0, 0)>>
									<<updateclotheslist _shopLocation _csslot _outfits>>
								<</link>>
							<</capture>>
							<<set $_count to getOwnedClothingCount(_item.index, $_realSlot)>>
							<<if $_count isnot 0>>
								<span class="white">
									&nbsp;|
									<<if !_compact>>
										Owned:
									<</if>>
									$_count
								</span>
							<</if>>
							<<if _unlocked>>
								<span class="gold">&nbsp;| Unlocked</span>
							<</if>>
						<</if>>
					</span>

					<<if _locked>>
						<div class="locked-hint">
							<<specialClothesHint>>
							<<print _specialClothesHint[_item.name.replace(/[- ]/g,"")]>>
						</div>
					<<else>>
						<!-- Price tag -->
						<span class="clothing-price"><<printmoney `getClothingCost(_item, $_realSlot)` true>></span>
						<!-- Integrity, Reveal and Warmth indicators -->
						<<if !$shopDefaults.compactMode>>
							<div class="clothing-integrity">
								<<if $options.images is 1>>
									<img class="clothing-stats-icon" src="img/misc/icon/integrity.png">
								<<else>>
									<span class="clothing-stats-text">I.</span>
								<</if>>
								<<set _intInf = getIntegrityInfo(_item.integrity_max)>>
								<<for _i = 0; _i lt 7; _i++>>
									<span @class="'stats-ball ' + (_i < _intInf[0] ? 'bg-' + _intInf[1] : '')">&nbsp;</span>
								<</for>>
							</div>
							<div class="clothing-reveal">
								<<if $options.images is 1>>
									<img class="clothing-stats-icon" src="img/misc/icon/reveal.png">
								<<else>>
									<span class="clothing-stats-text">R.</span>
								<</if>>
								<<set _revInf = getRevealInfo(_item.reveal)>>
								<<for _i = 0; _i lt 7; _i++>>
									<span @class="'stats-ball ' + (_i < _revInf[0] ? 'bg-' + _revInf[1] : '')">&nbsp;</span>
								<</for>>
							</div>
							<div class="clothing-warmth">
								<<if $options.images is 1>>
									<img class="clothing-stats-icon" src="img/misc/icon/warmth.png">
								<<else>>
									<span class="clothing-stats-text">W.</span>
								<</if>>
								<<set _warInf = getWarmthInfo(getTrueWarmth(_item))>>
								<<for _i = 0; _i lt 5; _i++>>
									<span @class="'stats-ball ' + (_i < _warInf[0] ? _warInf[1] : '')">&nbsp;</span>
								<</for>>
							</div>
						<</if>>
						<<if !$shopDefaults.noTraits>>
							<!-- Trait icons -->
							<div class="clothing-traits">
								<<for _i, _trait range _item.type>>
									<<clothingtrait _trait>>
								<</for>>
							</div>
						<</if>>
					<</if>>
					<<if $shopDefaults.compactMode>>
						<div class="pricetag-placeholder"></div>
					<</if>>
				</div>
			</div>
		<</for>>

		<!-- Empty slots for padding when there's not enough clothes to show -->
		<<for _i = 0; _i < $shopItemsPerPage - _itemsOnPage.length; _i++>>
			<div @class="'clothing-item-spacer ' + _compact"></div>
		<</for>>

		<!-- Make div-links generated here clickable. -->
		<!-- Make sure to linkify ONLY this page, otherwise other, already linkified, divs will have two event handlers attached to them and will execute twice per click -->
		<<run linkifyDivs('#shop-list-pages > .clothing-shop-page.page-' + _page)>>
	</div>
<</widget>>

<<widget "updateclotheslist">>
	<<set _shop = _args[0] or _shopLocation>>
	<<set _slot = _args[1] or $clothingShopSlot>>
	<<set _outf = _args[2] or _outfits>>
	<<replace "#clothes-list">><<clothingShopv2 _shop _slot _outf>><</replace>>
<</widget>>

<<widget "clothingtrait">>
	<<if $options.images is 1 and (_args[1] or _args[0] isnot "normal") and _shopLocation isnot "mirrorhair">>
		<<silently>><<shopTraitDescription _args[0]>><</silently>>
		<mouse class="tooltip-tiny black"><img @src="'img/misc/icon/clothes/traits/' + _args[0] + '.png'" class="clothing-trait">
		<<if _args[1] is undefined>><span><<print _clothesTrait>></span><</if>>
		</mouse>
	<<elseif _shopLocation is "mirrorhair">>
		<<silently>><<shopTraitDescription _args[0]>><</silently>>
		<<if _args[1] is undefined>><span><<print _hairTrait>></span><</if>>
	<</if>>
<</widget>>

<<widget "shopDetailsv2">>
	<<unset _mannequinGenderOverride>>
	<<if $clothes_choice and setup.clothes[$clothingShopSlot][$clothes_choice] is undefined>>
		<<unset $clothes_choice>>

	<<elseif $clothes_choice>>
		<<set _temp_choice to clone(setup.clothes[$clothingShopSlot][$clothes_choice])>>
		<<set _realSlot to ($clothingShopSlot is "all" ? _item.realSlot : $clothingShopSlot)>>
		<<set _realIndex to _temp_choice.index>>

		<!-- Unlocked text -->
		<<if $specialClothes[_temp_choice.name.replace(/[- ]/g,"")] is "unlocked">>
			<<specialClothesHint>>
			<div class="unlocked-hint">
				<span class="gold">Unlocked | </span><span class="grey"><<print _specialClothesHint[_temp_choice.name.replace(/ /g,"")]>></span>
			</div>
			<br>
		<</if>>

		<<if _temp_choice.plural is 1>>
			<<integrity $clothes_choice_integrity "cap">>
		<<else>>
			A <<integrity $clothes_choice_integrity>>
		<</if>>
		and <<reveal $clothes_choice_reveal>> <<print _temp_choice.name>>.
		<<if _temp_choice.gender is "m">>
			<span class="lblue">For boys.</span>
		<<elseif _temp_choice.gender is "f">>
			<span class="pink">For girls.</span>
		<</if>>
		<<print _temp_choice.description>> Costs <<printmoney `getClothingCost(_temp_choice,$clothingShopSlot)`>>.
		<br>
		<<set _truewarmth = getTrueWarmth(_temp_choice)>>
		<<warmth _truewarmth>>
		<br><br>
		<<shoptraits>>
		<<set _slimeSlots to setup.clothingLayer.torso>>
		<<if $earSlime.forcedCommando and $earSlime.forcedCommando gt 0 and ($clothingShopSlot is "under_lower" or (_temp_choice.outfitPrimary and _temp_choice.outfitPrimary.under_lower)) and !_temp_choice.type.includesAny("swim", "dance", "naked")>>
			<span class="red">The slime in your ear refuses to allow you to try on or buy the  _temp_choice.name as it is forcing you to go commando.</span>
			<br>
		<<elseif _slimeSlots.includes($clothingShopSlot) and $daily.corruptionSlimeClothes and _temp_choice.reveal lt Math.clamp($daily.corruptionSlimeClothes, 0, 500) and !_temp_choice.type.includesAny("school","event")>>
			<span class="red">The slime in your ear refuses to allow you to try on or buy the _temp_choice.name.</span>
			<br>
		<<elseif $earSlime.forcedDressing and $earSlime.forcedDressing.days and _item.gender isnot $earSlime.forcedDressing.type and _item.gender isnot "n" and !_item.type.includesAny("event")>>
			<span class="red">The slime in your ear refuses to allow you to try on or buy the _temp_choice.name as it is only permitting more <<print $earSlime.forcedDressing.type is "f" ? "feminine" : "masculine">> clothing.</span>
		<<else>>
			<<if $earSlime.forcedCommando and $earSlime.forcedCommando gt 0 and !_temp_choice.type.includesAny("naked") and ($clothingShopSlot is "under_lower" or (_temp_choice.outfitPrimary and _temp_choice.outfitPrimary.under_lower))>>
				<span class="red">The slime in your ear refuses to allow you to try on or wear the _temp_choice.name while not at an appropriate location.</span>
				<br>
				<<set _wearingBlocked to true>>
			<<elseif _slimeSlots.includes($clothingShopSlot) and $daily.corruptionSlimeClothes and _temp_choice.reveal lt Math.clamp($daily.corruptionSlimeClothes, 0, 500) and (_temp_choice.type.includesAny("school") and !Time.schoolDay) and !_temp_choice.type.includesAny("event")>>
				<span class="red">The slime in your ear refuses to allow you to try on or wear the _temp_choice.name when you don't have school today.</span>
				<br>
				<<set _wearingBlocked to true>>
			<<else>>
				<<set _wearingBlocked to false>>
			<</if>>
			<div class="clothing-colours-div">
				<<set _hiddenMannequin = $options.images is 1 ? "" : "hidden">>
				<!-- Item preview -->
				<div id="mannequin" @class="'mannequin ' + _hiddenMannequin + ($options.sidebarRenderer is 'both' ? ' both-renderers' : '')">
					<<mannequin>>
				</div>
				<!-- Item colour selection -->
				<<set _translate = $options.images is 1 ? "translate-colours-container" : "">>
				<div @class="'colours-container ' + _translate">
					<div @class="'mannequin-placeholder ' + _hiddenMannequin"></div>
					<<if _temp_choice.colour_options.length gt 1>>
						<<run _temp_choice.colour_options.pushUnique("random")>>
						There's a range of colours to choose from:
						<br>
						<<printShopColourOptions>>
					<</if>>
					<<if _temp_choice.accessory_colour_options.length isnot 0>>
						<<run _temp_choice.accessory_colour_options.pushUnique("random")>>
						<br>
						Secondary colour:
						<br>
						<<printShopColourOptions "secondary">>
					<</if>>
				</div>
			</div>
			<<run attachCustomColourHooks($clothingShopSlot)>>

			<!-- Check if current clothing can be unequiped -->
			<<unset _cursedPrevent>>
			<<set _preventSlots to []>>
			<<if $worn[_realSlot].cursed is 1>>
				<<set _cursedPrevent to true>>
				<<run _preventSlots.push(_realSlot)>>
			<</if>>
			<<set _wardrobeSlots to [_realSlot]>>
			<<if _temp_choice.outfitPrimary isnot undefined>>
				<<for _slot, _name range _temp_choice.outfitPrimary>>
					<<run _wardrobeSlots.push(_slot)>>
					<<if $worn[_slot].cursed is 1>>
						<<set _cursedPrevent to true>>
						<<run _preventSlots.push(_slot)>>
					<</if>>
				<</for>>
			<</if>>

			<!-- Check if selected clothes can't be worn by pregnant players -->
			<<unset _preggyPrevent>>
			<<if playerBellySize() gte 12 and _temp_choice.type.includes("constricting")>>
				<<set _preggyPrevent to true>>
			<</if>>

			<span>Warmth:</span>
			<<warmthscale>>
			<div id="warmth-description">
				<<warmth_description>>
			</div>
			<br>

			<<if !$options.images and _temp_choice.shopGroup>>
				<<link "Previous Style">>
					<<set _groupIndex to _itemGroups[_temp_choice.shopGroup].indexOf($clothes_choice)>>
					<<set _groupIndexMax to _itemGroups[_temp_choice.shopGroup].length - 1>>
					<<set $clothes_choice to _groupIndex gt 0 ? _itemGroups[_temp_choice.shopGroup][_groupIndex - 1] : _itemGroups[_temp_choice.shopGroup][_groupIndexMax]>>
					<<replace ".clothing-details">><<shopDetailsv2>><</replace>>
					<<run linkifyDivs('.clothing-details')>>
				<</link>> |
				<<link "Next Style">>
					<<set _groupIndex to _itemGroups[_temp_choice.shopGroup].indexOf($clothes_choice)>>
					<<set $clothes_choice to _itemGroups[_temp_choice.shopGroup][_groupIndex + 1] ? _itemGroups[_temp_choice.shopGroup][_groupIndex + 1] : _itemGroups[_temp_choice.shopGroup][0]>>
					<<replace ".clothing-details">><<shopDetailsv2>><</replace>>
					<<run linkifyDivs('.clothing-details')>>
				<</link>>
				<br>
			<</if>>

			<<if $multipleWardrobes is "all">>
				<span>Send items to:</span>
				<div id="sendItemsTo">
					<<sendItemsTo>>
				</div>
			<<else>>
				<<set $wardrobes.shopReturn to "wardrobe">>
			<</if>>
			<<shopBuyItemStatus _wardrobeSlots>>
			<<if _spaceLeft < 1>>
				<span class="red">Your wardrobe is full.</span>
				<br>
			<<elseif Time.dayState is "night">>
				<<if $clothingShop.stolenClothes lte 20>>
					<<if $worn[_realSlot].cursed is 1>>
						<<printcursed>>
					<<elseif _preggyPrevent>>
						<<printpreggy _temp_choice>>
					<<elseif !_wearingBlocked>>
						<<link "Steal and wear">>
							<<shopbuyv2 _realSlot "steal" "wear" _realIndex>><<crimeUp `getClothingCost(_temp_choice,$clothingShopSlot) / 100` "thievery">>
							<<set $clothingShop.stolenClothes++>>
							<<set $clothingShop.totalStolenClothes++>>
							<<if $shopDefaults.disableReturn is false>>
								<<unset $clothes_choice>>
							<</if>>
							<<updateclotheslist>>
							<<updatesidebarimg>>
							<<updatesidebarmoney>>
							<<updatesidebardescription>>
							<<updateallure>>
							<<if $shopDefaults.disableReturn>>
								<<updatewarmthscale>>
								<<updatewarmthdescription>>
							<</if>>
							<<run updateMoment()>>
						<</link>><<crime "thievery">>
						<br>
					<</if>>
					<<link "Steal and take home">>
						<<shopbuyv2 _realSlot "steal" "send" _realIndex>><<crimeUp `getClothingCost(_temp_choice,$clothingShopSlot) / 100` "thievery">>
						<<set $clothingShop.stolenClothes++>>
						<<set $clothingShop.totalStolenClothes++>>
						<<if $shopDefaults.disableReturn is false>>
							<<unset $clothes_choice>>
						<</if>>
						<<updateclotheslist>>
						<<updatesidebarimg>>
						<<run updateMoment()>>
					<</link>><<crime "thievery">>
					<br>
				<<else>>
					<span class="red">You can't carry any more clothes with you.</span> You should take them to your wardrobe.
					<br>
				<</if>>
			<<elseif $money >= getClothingCost(_temp_choice,$clothingShopSlot)>>
				<<if _cursedPrevent>>
					<<printcursed>>
				<<elseif _preggyPrevent>>
					<<printpreggy _temp_choice>>
				<</if>>

				<div class="buy-buttons">
					<<set _cantWear = (_cursedPrevent == true || _preggyPrevent == true || _wearingBlocked ? "disabled" : "div-link")>>
					<div class="buy-button">
						<div @class="'buy-button-inner ' + _cantWear">
							<<if _cursedPrevent or _preggyPrevent or _wearingBlocked>>
								Buy and wear
							<<else>>
								<<link "Buy and wear">>
									<<clothingReset _realSlot>>
									<<shopbuyv2 _realSlot "buy" "wear" _realIndex>>
									<<set $money -= getClothingCost(_temp_choice,$clothingShopSlot)>>
									<<if $shopDefaults.disableReturn is "false">>
										<<unset $clothes_choice>>
									<</if>>
									<<updateclotheslist>>
									<<exposedcheck>>
									<<updatesidebarimg>>
									<<updatesidebarmoney>>
									<<updatesidebardescription>>
									<<updateallure>>
									<<if $shopDefaults.disableReturn>>
										<<updatewarmthscale>>
										<<updatewarmthdescription>>
									<</if>>
									<<run updateMoment()>>
								<</link>>
								(<<printmoney `getClothingCost(_temp_choice,$clothingShopSlot)`>>)
							<</if>>
						</div>
					</div>
					<<if $buyMultiple is undefined>>
						<<set $buyMultiple = 1>>
					<</if>>
					<div id="buy-send-home">
						<<printbuysendhome>>
					</div>
				</div>
			<<else>>
				<span class="pink">You cannot afford this item.</span>
				<br>
			<</if>>

			<<if _spaceLeft < 1>>
			<<elseif _cursedPrevent != true and _preggyPrevent != true and !_wearingBlocked and $tryOn.tryingOn>>
				<div class="try-buttons">
					<div class="try-button div-link">
						<<link "Try On">>
							<<shopbuyv2 _realSlot "try" null _realIndex>>
							<<updateclotheslist>>
							<<exposedcheck>>
							<<updatesidebarimg>>
							<<updatesidebardescription>>
							<<updateallure>>
							<<updatewarmthscale>>
							<<updatewarmthdescription>>
							<<run updateMoment()>>
						<</link>>
					</div>
					<<if $tryOn.tryingOn[$clothingShopSlot] isnot null>>
						<div class="try-button div-link">
							<<link "Return">>
								<<shopbuyv2 _realSlot "return" null _realIndex>>
								<<updateclotheslist>>
								<<exposedcheck>>
								<<updatesidebarimg>>
								<<updatesidebardescription>>
								<<updateallure>>
								<<updatewarmthscale>>
								<<updatewarmthdescription>>
								<<run updateMoment()>>
							<</link>>
						</div>
					<</if>>
					<<if $worn[$clothingShopSlot].name is _temp_choice.name and isConnectedToHood($clothingShopSlot)>>
						<!-- If selected item is a hood or selected item has a secondary hood piece -->
						<div class="try-button div-link"><<toggleHoodLink "shop">></div>
						<br>
					<</if>>
					<<if _temp_choice.variable is $worn[$clothingShopSlot].variable and _temp_choice.altposition>>
						<div class="try-button div-link toggleAltLink"><<toggleAltLink $clothingShopSlot "shop">></div>
						<br>
					<</if>>
					<<if ["upper","lower"].includes($clothingShopSlot) and $worn.lower.name isnot "naked" and $worn.upper.outfitPrimary is undefined and !setup.clothes.upper[clothesIndex("upper",$worn.upper)].notuck>>
						<div class="try-button div-link"><<toggleUpperTuck>></div>
						<br>
					<</if>>
					<<if ["face"].includes($clothingShopSlot) and $worn[$clothingShopSlot].name is _temp_choice.name>>
						<div class="try-button div-link"><<toggleFaceLayer $clothingShopSlot "shop">></div>
						<br>
					<</if>>
				</div>
			<</if>>
		<</if>>
	<</if>>
<</widget>>

<<widget "printbuysendhome">>
	<<set _clothingCost = getClothingCost(_temp_choice, $clothingShopSlot)>>
	<<set _canAfford = ($money >= _clothingCost * $buyMultiple and _spaceLeft >= $buyMultiple) ? "" : "disabled">>
	<div class="buy-button">
		<div @class="'buy-button-inner buy-multiple div-link ' + _canAfford">
			<<link `'Buy and send home × ' + $buyMultiple`>>
				<<if $money >= _clothingCost * $buyMultiple and _spaceLeft >= $buyMultiple>>
					<<clothingReset _realSlot>>
					<<shopbuyv2 _realSlot "buy" "send" _realIndex $buyMultiple>>
					<<set $money -= _clothingCost * $buyMultiple>>
					<<if $shopDefaults.disableReturn is false>>
						<<unset $clothes_choice>>
					<</if>>
					<<updateclotheslist>>
					<<updatesidebarimg>>
					<<updatesidebarmoney>>
					<<run updateMoment()>>
				<</if>>
			<</link>>
			<span>(<span class="gold"><<printmoney `_clothingCost * $buyMultiple`>></span>)</span>
		</div>

		<div id="buy-multiple-slider" class="buy-multiple-slider">
			<<numberslider "$buyMultiple" $buyMultiple 1 10 1>>
		</div>
		<!-- Update text of "Buy and send home" button -->
		<!-- <<run $(() => { $('#buy-multiple-slider input').on('change', () => { new Wikifier (null, "<<updateclotheslist>>") }); })>> -->
		<<run $(() => {
			$('#buy-multiple-slider input').on('input change', () => {
				let cost = getClothingCost(_temp_choice, $clothingShopSlot);
				let el = $('#buy-send-home > .buy-button > .buy-button-inner > a');
				let text = el.text().split(' ');
				text.pop();
				text.push($buyMultiple);
				el.text(text.join(' '));

				$('#buy-send-home > .buy-button > .buy-button-inner > span > span').text('£' + cost * $buyMultiple / 100);
				$('#buy-send-home > .buy-button > .buy-button-inner').toggleClass('disabled', $money < cost * $buyMultiple || _spaceLeft < $buyMultiple);
			});
		})>>
	</div>
<</widget>>

<<widget "updatebuysendhome">>
	<<replace "#buy-send-home">><<printbuysendhome>><</replace>>
	<<run linkifyDivs('#buy-send-home')>>
	<<numberify '#buy-send-home'>>
<</widget>>

<<widget "printShopColourOptions">>
	<<set _colourType = _args[0] == "secondary" ? "accessory_colour_options" : "colour_options">>

	<!-- Reset colour to default if invalid -->
	<<if _args[0] == "secondary" and !$accessorycolouraction>>
		<<if setup.clothes[$clothingShopSlot][$clothes_choice][_colourType].includes($shopDefaults.secColor)>>
			<<set $accessorycolouraction = $shopDefaults.secColor>>
		<<else>>
			<<set $accessorycolouraction = setup.clothes[$clothingShopSlot][$clothes_choice][_colourType][0]>>
		<</if>>
	<<elseif !$colouraction>>
		<<if setup.clothes[$clothingShopSlot][$clothes_choice][_colourType].includes($shopDefaults.color)>>
			<<set $colouraction = $shopDefaults.color>>
		<<else>>
			<<set $colouraction = setup.clothes[$clothingShopSlot][$clothes_choice][_colourType][0]>>
		<</if>>
	<</if>>
	<<set _acc = _args[0] == "secondary" ? "secondary" : "primary">>

	<!-- Generate button for each colour -->
	<<set _highContrast = $shopDefaults.highContrast ? "colour-name-span-highcontrast" : "colour-name-span">>
	<div @class="'colour-options-div no-numberify ' + _acc">
		<<for _buttonName range _temp_choice[_colourType]>>
			<<set _active = (_acc == "primary" ? $colouraction : $accessorycolouraction) == _buttonName ? "active" : "">>
			<div @class="'colour-button div-link ' + _active">
				<div @class="'bg-' + _buttonName.replace(/ /g, '-')">
					<<if $options.images is 1>>
						<<if _buttonName == "custom">>
							<img src="img/misc/icon/custom.png">
						<</if>>
						<<if _buttonName == "random">>
							<img src="img/misc/icon/random.png">
						<</if>>
					<</if>>
					<span @class="'capitalize ' + _highContrast">_buttonName</span>
					<<capture _buttonName _args[0] _acc $clothingShopSlot>>
						<<link "">>
							<<if _buttonName == "random">>
								<<set $customColors.color[_acc] to random(0, 360)>> /* 0,360 are min/max hue values, representing colours */
								<<run updateHueSlider($customColors.color[_acc], _acc)>>
								<<set _colour = "custom">>
							<<else>>
								<<set _colour = _buttonName>>
							<</if>>
							<<if _args[0] == "secondary">>
								<<set $accessorycolouraction = _colour>>
							<<else>>
								<<set $colouraction = _colour>>
							<</if>>
							<<if _colour == "custom">>
								<<removeclass `".custom-colour." + _acc` "hidden">>
							<<else>>
								<<addclass `".custom-colour." + _acc` "hidden">>
							<</if>>
							<!-- Move .active class to the button that was pressed -->
							<<run $('.colour-options-div.' + _acc + ' > .colour-button').removeClass('active').find('.bg-' + _colour).parent().addClass('active')>>
							<<updatemannequin>>
						<</link>>
					<</capture>>
				</div>
			</div>
		<</for>>
		<!-- Update colour filters of custom colour button -->
		<<run $(() => { updateCustomColour('primary'); updateCustomColour('secondary'); })>>

		<!-- Set colouractions to default if they're undefined, set by clicking on respective buttons -->
		<<if _acc == "primary" and $colouraction is undefined>>
			<<run $(() => { $('.colour-options-div.primary > .colour-button > .bg-' + $shopDefaults.color + ' > a').click(); })>>
		<</if>>
		<<if _acc == "secondary" and $accessorycolouraction is undefined>>
			<<run $(() => { $('.colour-options-div.secondary > .colour-button > .bg-' + $shopDefaults.secColor + ' > a').click(); })>>
		<</if>>
	</div>

	<!-- Custom colour sliders -->
	<<if _args[0] == "secondary">>
		<<set _hidden = $accessorycolouraction == "custom" ? "" : " hidden">>
	<<else>>
		<<set _hidden = $colouraction == "custom" ? "" : " hidden">>
	<</if>>
	<<capture _acc $clothingShopSlot>>
		<div @class="'pt-1-em pc-c fw-wrap custom-colour ' + _acc + _hidden">
			<div @class="'custom-colour-sliders ' + _acc">
				/*<<set _varHue = "$customColors.color." + _acc>>
				<<set _varBri = "$customColors.brightness." + _acc>>
				<<set _varSat = "$customColors.saturation." + _acc>>*/
				<<set _varCon = "$customColors.contrast." + _acc>>
/* 				<div class="colour-slider"><span class="colour-slider-caption">Hue</span><<numberslider _varHue $customColors.color[_acc] 0 360 1>></div>
				<div class="colour-slider"><span class="colour-slider-caption">Brightness</span><<numberslider _varBri $customColors.brightness[_acc] 0 4 0.01>></div>
				<div class="colour-slider"><span class="colour-slider-caption">Saturation</span><<numberslider _varSat $customColors.saturation[_acc] 0 4 0.01>></div>
				<div class="colour-slider"><span class="colour-slider-caption">Contrast</span><<numberslider _varCon $customColors.contrast[_acc] 0 4 0.01>></div>*/
				<<setShopCustomColors _acc>>
				<<set $retrieveShopCustomColor[_acc] to true>>
				<<shopclothingcustomcolourwheel _acc>>
				<div class="colour-slider text-align-center elem-fill-available"><span class="colour-slider-caption">Contrast</span><<numberslider _varCon $customColors.contrast[_acc] 0 4 0.01>></div>
			</div>
			<div class="custom-colour-presets no-numberify preset-colour-options">
				<div class="presets-dropdown">
					<<if _preset_choice is undefined>><<set _preset_choice = {}>><</if>>
					<<listbox "_preset_choice[_acc]" autoselect>>
							<!-- Just... don't try to understand the next line. In short, it adds [L] to legacy preset names in dropdown -->
						<<optionsfrom {...{'---': '---'}, ...Object.keys($customColors.presets).reduce((acc, val) => ({...acc, [($customColors.presets[val].ver >= 2 ? '' : '[L] ') + val]: val }), {})}>>
					<</listbox>>
					<<set _delDisabled = Object.keys($customColors.presets).includes(_preset_choice[_acc]) ? "" : "disabled">>
					<div @class="'delete-preset div-link ' + _delDisabled">
						<<if $options.images is 1>><img src="img/misc/icon/delete.png"><<else>>Del<</if>>
						<<link "">>
							<<if _preset_choice[_acc] and $customColors.presets[_preset_choice[_acc]] and confirm('Delete preset "' + _preset_choice[_acc] + '"?')>>
								<<run delete $customColors.presets[_preset_choice[_acc]]>>
								<<updateclotheslist>>
								<<run updateMoment()>>
							<</if>>
						<</link>>
					</div>
				</div>
				<div class="save-preset div-link">
					<<if $options.images is 1>><img src="img/misc/icon/save.png"><<else>>Save<</if>>
					<<link "">>
						<<run saveCustomColourPreset(_acc)>>
						<<updateclotheslist>>
						<<run updateMoment()>>
					<</link>>
				</div>
				/* import/export custom colour buttons */
				<div class="import-export-buttons">
					<div class="colour-button div-link ">
						<div>
							<img src="img/ui/import-preset-colour.png">
							<span class="capitalize colour-name-span">import</span>
							<<link "">>
								<<run importCustomColour(_acc)>>
								<<run updateMoment()>>
							<</link>>
						</div>
					</div>
					<div class="colour-button div-link active">
						<div class="bg-custom-export">
						 	<img src="img/ui/export-preset-colour.png">
							<span class="capitalize colour-name-span">export</span>
							<<link "">>
								<<run exportCustomColour(_acc)>>
							<</link>>
						</div>
					</div>
				</div>
				<div id="export-custom-colour-box"></div>
			</div>
		</div>
	<</capture>>
<</widget>>

<<widget "setShopCustomColors">>
	<<if $retrieveShopCustomColor[_acc] is true>>
		<<set $retrieveShopCustomColor[_acc] to false>>
	<<else>>
		<<set $customColors.color[_acc] to 61>>
		<<set $customColors.contrast[_acc] to 1.46>>
		<<set $customColors.brightness[_acc] to 3.08>>
		<<set $customColors.value[_acc] to 100>>
		<<set $customColors.saturation[_acc] to 0.6016>>
		<<set $customColors.sepia[_acc] to 0>>
	<</if>>
<</widget>>

<<widget "printcursed">>
	<span class="blue">You can't wear this item without first removing your
	<<set _preventClothes = _preventSlots.map(x => $worn[x].name)>>
	<<print formatList(_preventClothes)>>.</span>
	<br>
<</widget>>

<<widget "printpreggy">>
	<<if _args[0]>>
		<<set _blockedItem to _args[0]>>
		<<set _blockedItemWord to (_blockedItem.word isnot "n" ? _blockedItem.word : "")>>
		<<if _blockedItem.type.includes("chest_bind")>>
			<span class="red">Your pregnant body is too sensitive to wear _blockedItemWord _blockedItem.name.</span>
		<<else>>
			<span class="red">Your <<bellyDescription "pc">> is too large to wear _blockedItemWord _blockedItem.name.</span>
		<</if>>
	<<else>>
		<span class="red">ERROR: No argument provided for widget printpreggy</span>
	<</if>>
	<br>
<</widget>>

<<widget "shopbuyv2">>
	<<set _slot to _args[0]>>
	<<set _action to _args[1]>>
	<<set _subaction to _args[2]>>
	<<set _choice_index to _args[3]>>
	<<set _amount to _args[4]>>
	<<set $clothes_choice_previous to $clothes_choice>>

	<<if _choice_index isnot undefined>>
		<<set $colouraction2 = $colouraction>>
		<<set $accessorycolouraction2 = $accessorycolouraction>>
	<</if>>

	<<if _action isnot "reset">>
		<<if _slot is "upper" or _slot is "lower">>
			<<ShowUnderEquip "normal">>
		<</if>>
		<<if _slot is "over_upper" or _slot is "over_lower" or _slot is "over_head">>
			<<ShowUnderEquip "over">>
		<</if>>
	<</if>>

	<<if _action is "buy" or _action is "steal">>
		You _action the <<print setup.clothes[_slot][_choice_index].name>>.
		<br><br>
		<<if $shopName is "school" and _action is "buy">>
			<<set $schoolShopAction.push("buy")>>
		<</if>>
	<<elseif _action is "try">>
		<<tryOnWear _slot _choice_index>>
		<<if $shopName is "school">>
			<<set $schoolShopAction.push("try")>>
		<</if>>
	<<elseif _action is "return">>
		<<clothingReset _slot>>
		<<if $shopName is "school">>
			<<set $schoolShopAction.push("return")>>
		<</if>>
	<<elseif _action is "reset">>
		<<unset $colouraction>>
		<<unset $colouraction2>>
		<<unset $accessorycolouraction>>
		<<unset $accessorycolouraction2>>
		<<set $shopDefaults.colorSet to null>>
		<<set $shopDefaults.secColorSet to null>>
	<</if>>

	<<if _subaction is "wear">>
		<<generalWear _slot _choice_index $colouraction2 $accessorycolouraction2>>
		<<updateOwned _slot>>
		<<if $shopName is "school">>
			<<set $schoolShopAction.push("wear")>>
		<</if>>
	<<elseif _subaction is "send">>
		<<set _loop to _amount or 1>>
		<<for _s = 0; _s lt _loop; _s++>>
			<<generalSend $wardrobes.shopReturn _slot _choice_index $colouraction2 $accessorycolouraction2>>
		<</for>>
	<</if>>
<</widget>>

<<widget "mannequin">>
	<<if $options.images is 1>>
		<<set _slot = _args[0] or _realSlot>>
		<<set _index = _args[1] or _realIndex>>
		<<set _item = setup.clothes[_slot][_index]>>

		<<if _item.colour_options.length > 0>>
			<<set _col = _args[2] or $colouraction or (_item.colour_options.includes($shopDefaults.color) ? $shopDefaults.color : _item.colour_options[0])>>
		<<else>>
			<<set _col = "">>
		<</if>>
		<<if _item.accessory_colour_options.length > 0>>
			<<set _acc_col = _args[3] or $accessorycolouraction or (_item.accessory_colour_options.includes($shopDefaults.secColor) ? $shopDefaults.secColor : _item.accessory_colour_options[0])>>
		<<else>>
			<<set _acc_col = "">>
		<</if>>

		<<if _item>>
			<!-- Set gender of the mannequin -->
			<<if _mannequinGenderOverride>>
				<<set _mannequinGender to _mannequinGenderOverride>>
			<<else>>
				<<if $shopDefaults.mannequinGenderFromClothes and _item.gender != "n">>
					<<set _mannequinGender to _item.gender>>
				<<else>>
					<<if $shopDefaults.mannequinGender is "same">>
						<<set _mannequinGender to $player.gender>>
					<<elseif $shopDefaults.mannequinGender is "opposite">>
						<<set _mannequinGender to ($player.gender is "f" ? "m" : "f")>>
					<<else>>
						<<set _mannequinGender to $shopDefaults.mannequinGender.first()>>
					<</if>>
				<</if>>
			<</if>>
			<<set $mannequinHasPenis to (_mannequinGender isnot "f")>>

			<<if _item.type.includes("chest_bind")>>
				<<set _breastImg to 0>>
			<<else>>
				<<set _breastImg to ($mannequinBreastsSize is undefined ? 3 : (_mannequinGender is "m" ? 0 : $mannequinBreastsSize))>>
			<</if>>
			<<set _clothed = (((_slot != "under_upper" and $options.neverNudeMenus) or (_slot == "under_upper" and !_item.type.includes("naked"))) and _breastImg >= 2) ? "_clothed" : "">>

			<div class="mannequin-inner">
				<<if $options.sidebarRenderer isnot "img">>
					<<selectmodel "main" "shop">>
						<<set _modeloptions.mannequin to true>>
						<<set _modeloptions.show_face to false>>
						<<set _modeloptions.show_hair to false>>
						<<set _modeloptions.breasts to _breastImg ? (_clothed ? "cleavage" : "default") : "">>
						<<set _modeloptions.breast_size to _breastImg>>
						<<set _modeloptions.crotch_visible to true>>
						<<if $mannequinHasPenis>>
							<<set _modeloptions.penis to "default">>
						<</if>>
						<<if $options.neverNudeMenus>>
							<<if _slot != "under_upper" and (_mannequinGender == "f" or _mannequinGender == "h")>>
								<<set _modeloptions.worn_under_upper to 12>>
								<<set _modeloptions.worn_under_upper_colour to "pale white">>
							<</if>>
							<<if _slot != "under_lower" and (_item.set == _slot or _slot != 'under_upper')>>
								<<if $mannequinHasPenis>>
									<<set _modeloptions.worn_under_lower to 0>>
									<<set _modeloptions.worn_under_lower_colour to "pale white">>
								<</if>>
							<</if>>
						<</if>>
						<!-- Draw primary and all secondary items -->
						<<set _items_list = [{slot: _slot, item: _item}]>>
						<<if _item.outfitPrimary>>
							<<set _items_list = _items_list.concat(Object.keys(_item.outfitPrimary).map(s => { return {slot: s, item: setup.clothes[s].find(x => x.name == _item.outfitPrimary[s])} }))>>
						<</if>>
						<<for _clothing range _items_list>>
							<<set _item = _clothing.item>>
							<<set _slot = _clothing.slot>>
							<<set _modeloptions['worn_' + _slot] to clothesIndex(_slot,_item)>>
							<<if _col>>
								<<set _modeloptions['worn_' + _slot + '_colour'] to _col>>
								<<if _col is "custom">>
									<<set _modeloptions.filters["worn_" + _slot + "_custom"] =
											getCustomClothesColourCanvasFilter($customColors.color.primary,
												$customColors.saturation.primary,
												$customColors.brightness.primary,
												$customColors.contrast.primary);>>
								<</if>>
							<</if>>
							<<if _acc_col>>
								<<set _modeloptions['worn_' + _slot + '_acc_colour'] to _acc_col>>
								<<if _acc_col is "custom">>
									<<set _modeloptions.filters["worn_" + _slot + "_acc_custom"] =
											getCustomClothesColourCanvasFilter($customColors.color.secondary,
												$customColors.saturation.secondary,
												$customColors.brightness.secondary,
												$customColors.contrast.secondary);>>
								<</if>>
							<</if>>
						<</for>>
						<<if $options.sidebarRenderer is "both">>
							<<set _item = _items_list[0].item>>
							<<set _slot = _items_list[0].slot>>
						<</if>>
						<<if _slot is "handheld">>
							<<set _modeloptions.arm_right to "hold">>
						<</if>>

					<<rendermodel "canvas-mannequin">>
				<</if>>

				<<if $options.sidebarRenderer isnot "canvas">>
				<div class="mannequin-body">
					<img src="img/body/mannequin/leftarmidle.png">
					<img src="img/body/mannequin/basenoarms.png">
					<img src="img/body/mannequin/rightarmidle.png">
					<img src="img/body/mannequin/basehead.png">
					<img @src="'img/body/mannequin/breasts/' + _breastImg + _clothed + '.png'">
					<<if $mannequinHasPenis>>
						<img src="img/body/mannequin/penis.png">
					<</if>>

					<<if $options.neverNudeMenus>>
						<div class="neverNudeMenus">
							<<if _slot != "under_upper" and (_mannequinGender == "f" or _mannequinGender == "h")>>
								<div class="layer-under_upper clothes-pale-white">
									<img src="img/clothes/under_upper/plainbra/full.png">
									<img @src="'img/clothes/under_upper/plainbra/' + _breastImg + '.png'">
								</div>
							<</if>>
							<<if _slot != "under_lower" and (_item.set == _slot or _slot != 'under_upper')>>
								<div class="layer-under_lower clothes-pale-white">
									<img src="img/clothes/under_lower/plainpanties/full.png">
									<<if $mannequinHasPenis>>
										<img src="img/clothes/under_lower/plainpanties/penis.png">
									<</if>>
								</div>
							<</if>>
						</div>
					<</if>>
				</div>
				<</if>> <!-- renderer switch -->

				<!-- Mannequin gender toggle button -->
				<div class="mannequin-buttons no-numberify">
					<div class="div-link mannequin-gender-button">
						<<if $options.images is 1>>
							<<set _genderIcon = (_mannequinGender == "m" ? "male" : (_mannequinGender == "f" ? "female" : "unisex"))>>
							<img @src="'img/misc/icon/' + _genderIcon + '.png'">
						<<else>>
							<span class="capitalize">_manequinGender[0]</span>
						<</if>>
						<<link "">><<toggleMannequinGender>><</link>>
					</div>
				</div>
				<<if _temp_choice.shopGroup and Array.isArray(_items) and _items.reduce((prev, curr) => {
						if (!curr.shopGroup) return prev;
						if (curr.shopGroup === _temp_choice.shopGroup) return prev + 1;
						return prev;
					},0) gt 1>>
					<div class="mannequin-buttons-right no-numberify">
						<<set _groupIndex to _itemGroups[_temp_choice.shopGroup].indexOf($clothes_choice)>>
						<<link "<span class='fa-icon fa-left-arrow'></span>">>
							<<set _groupIndex to _itemGroups[_temp_choice.shopGroup].indexOf($clothes_choice)>>
							<<set _groupIndexMax to _itemGroups[_temp_choice.shopGroup].length - 1>>
							<<set $clothes_choice to _groupIndex gt 0 ? _itemGroups[_temp_choice.shopGroup][_groupIndex - 1] : _itemGroups[_temp_choice.shopGroup][_groupIndexMax]>>
							<<replace ".clothing-details">><<shopDetailsv2>><</replace>>
							<<run linkifyDivs('.clothing-details')>>
							/* The below widget ends up breaking the shop list when clicking fast enough */
							/*<<updateclotheslist>>*/
						<</link>>
						_groupIndex
						<<link "<span class='fa-icon fa-right-arrow'></span>">>
							<<set _groupIndex to _itemGroups[_temp_choice.shopGroup].indexOf($clothes_choice)>>
							<<set $clothes_choice to _itemGroups[_temp_choice.shopGroup][_groupIndex + 1] ? _itemGroups[_temp_choice.shopGroup][_groupIndex + 1] : _itemGroups[_temp_choice.shopGroup][0]>>
							<<replace ".clothing-details">><<shopDetailsv2>><</replace>>
							<<run linkifyDivs('.clothing-details')>>
							/* The below widget ends up breaking the shop list when clicking fast enough */
							/*<<updateclotheslist>>*/
						<</link>>
					</div>
				<</if>>

				<<if $options.sidebarRenderer isnot "canvas">>
				<div class="mannequin-clothes">
					<<unset _styleP>>
					<<unset _styleS>>
					<!-- Draw primary and all secondary items -->
					<<set _items_list = [{slot: _slot, item: _item}]>>
					<<if _item.outfitPrimary>>
						<<set _items_list = _items_list.concat(Object.keys(_item.outfitPrimary).map(s => { return {slot: s, item: setup.clothes[s].find(x => x.name == _item.outfitPrimary[s])} }))>>
					<</if>>
					<<for _clothing range _items_list>>
						<<set _item = _clothing.item>>
						<<set _slot = _clothing.slot>>

						<<if _col is "custom">>
							<<set _styleP = getCustomColourStyle('primary')>>
						<</if>>
						<div @class="'clothes-' + _col.replace(/ /g, '-')" @style="_styleP">
							<<if _item.mainImage isnot 0>>
								<img @src="'img/clothes/' + _slot + '/' + _item.variable + '/full.png'">
							<</if>>

							<<if setup.clothes[_slot][clothesIndex(_slot,_item)].sleeve_img or _item.leftImage>>
								<img @src="'img/clothes/' + _slot + '/' + _item.variable + '/left.png'">
							<</if>>
							<<if setup.clothes[_slot][clothesIndex(_slot,_item)].sleeve_img or _item.rightImage>>
								<img @src="'img/clothes/' + _slot + '/' + _item.variable + '/right.png'">
							<</if>>

							<<if setup.clothes[_slot][clothesIndex(_slot,_item)].breast_img>>
								<img @src="'img/clothes/' + _slot + '/' + _item.variable + '/' + _breastImg + '.png'">
							<</if>>

							<<if _item.penis_img and $mannequinHasPenis>>
								<img @src="'img/clothes/' + _slot + '/' + _item.variable + '/penis.png'">
							<</if>>
						</div>

						<<if _acc_col is "custom">>
							<<set _styleS = getCustomColourStyle('secondary')>>
						<</if>>
						<div @class="'clothes-' + _acc_col.replace(/ /g, '-')" @style="_styleS">
							<<if _item.accessory and _slot != "hands">>
								<img @src="'img/clothes/' + _slot + '/' + _item.variable + (_item.accessory_integrity_img ? '/acc_full.png' : '/acc.png')">
							<</if>>
							<<if _item.breast_acc_img>>
								<img @src="'img/clothes/' + _slot + '/' + _item.variable + '/' + _breastImg + '_acc.png'">
							<</if>>
							<<if _item.leftImage and _item.accessory>>
								<img @src="'img/clothes/' + _slot + '/' + _item.variable + '/left_acc.png'">
							<</if>>
							<<if _item.rightImage and _item.accessory>>
								<img @src="'img/clothes/' + _slot + '/' + _item.variable + '/right_acc.png'">
							<</if>>
						</div>
						<<if _item.back_img is 1>>
							<<set _back_col = _item.back_img_colour is 'secondary' ? _acc_col.replace(/ /g, '-') : _col.replace(/ /g, '-')>>
							<div @class="'clothes-' + _back_col" @style="'z-index: -1; position: absolute; ' + _styleS">
								<img @src="'img/clothes/' + _slot + '/' + _item.variable + '/' + 'back.png'">
							</div>
						<</if>>
					<</for>>
				</div>
				<</if>> <!-- renderer switch -->
			</div>
			<div class="div-link mannequin-gender-textbutton no-numberify">
				Toggle gender
				<<link "">><<toggleMannequinGender>><</link>>
			</div>
		<</if>>
	<</if>>
<</widget>>

<<widget "toggleMannequinGender">>
	<<if _mannequinGender is "f">>
		<<set _mannequinGenderOverride to "m">>
	<<else>>
		<<if $player.penisExist and $player.vaginaExist and _mannequinGender is "m">> /* if player is herm, toggle mannequin through herm gender */
			<<set _mannequinGenderOverride to "h">>
		<<else>>
			<<set _mannequinGenderOverride to "f">>
		<</if>>
	<</if>>
	<<updatemannequin>>
<</widget>>

<<widget "updatemannequin">>
	<<replace "#mannequin">><<mannequin _args[0] _args[1]>><</replace>>
	<<run linkifyDivs('#mannequin')>>
<</widget>>

<<widget "updatesidebardescription">>
	<<replace '#sidebar-look-description'>><<sidebarlookdescription>><</replace>>
<</widget>>

<<widget "updatesidebarmoney">>
	<<if $options.images>>
		<<replace #stats>><<statsCaption>><</replace>>
	<<else>>
		<<replace #money-noimg>><<statsMoneyNoImg>><</replace>>
	<</if>>
<</widget>>

<<widget "loadFiltersMenu">>
	<div class="filters-div" onclick="event.stopPropagation()">
		<div id="filter-buttons" class="filter-buttons-div">
			<div class="filter-button button-apply div-link">
				<<link "Apply and Close">>
					<<set $shopClothingFilter.active = true>>
					<<set $shopPage to 0>>
					<<addclass '#filters' 'hidden'>>
					<<updateclotheslist>>
					<<run updateMoment()>>
				<</link>>
			</div>
			<div class="filter-button button-reset div-link">
				<<link "Reset All and Close">>
					<<shopClothingFilterReset>>
					<<updateclotheslist>>
					<<run updateMoment()>>
				<</link>>
			</div>
			<div class="filter-button button-toggle-traits div-link">
				<<link "Select / Deselect All Traits">>
					<<run toggleAllTraitsFilter()>>
				<</link>>
			</div>
		</div>
		<div class="filters">
			<div id="filter-gender" class="filter-block">
				<<if typeof $shopClothingFilter.gender isnot "object">>
					<<set $shopClothingFilter.gender = { female: true, neutral: true, male: true }>>
				<</if>>

				<span class="bold gold">Gender</span>
				<label><<checkbox "$shopClothingFilter.gender.female" false true autocheck>> Female</label>
				<label><<checkbox "$shopClothingFilter.gender.neutral" false true autocheck>> Unisex</label>
				<label><<checkbox "$shopClothingFilter.gender.male" false true autocheck>> Male</label>
			</div>

			<div id="filter-reveal" class="filter-block">
				<<filterreveal>>
			</div>

			<div id="filter-warmth" class="filter-block">
				<<if $shopClothingFilter.warmth is undefined>>
					<<set $shopClothingFilter.warmth = { from: 0, to: 200 }>>
				<</if>>

				<span class="bold gold">Warmth</span>
				<div class="filter-warmth-fromto">
					<label>from <<numberbox "$shopClothingFilter.warmth.from" $shopClothingFilter.warmth.from>></label>
					<label>to <<numberbox "$shopClothingFilter.warmth.to" $shopClothingFilter.warmth.to>></label>
				</div>
			</div>

			<div id="filter-sort" class="filter-block">
				<<if $shopClothingFilter.sorting is undefined>>
					<<set $shopClothingFilter.sorting = { prop: "price", order: 'asc', enabled: false }>>
				<</if>>

				<span class="bold gold">Sorting</span>
				<div class="filter-sorting">
					<label>
						by
						<<listbox "$shopClothingFilter.sorting.prop" autoselect>>
							<<option "Price" "price">>
							<<option "Protection" "protection">>
							<<option "Reveal" "reveal">>
							<<option "Warmth" "warmth">>
						<</listbox>>
					</label>
					<label>
						order
						<<listbox "$shopClothingFilter.sorting.order" autoselect>>
							<<option "Ascending" "asc">>
							<<option "Descending" "desc">>
						<</listbox>>
					</label>
					<label>
						<<checkbox "$shopClothingFilter.sorting.enabled" false true autocheck>>
						Enable
					</label>
				</div>
			</div>

			<div id="filter-outfit" class="filter-block">
				<<if $shopClothingFilter.outfit is undefined>>
					<<set $shopClothingFilter.outfit = { index: "none" }>>
				<</if>>
				<<if $shopClothingFilter.outfit.index isnot "none" and $shopClothingFilter.outfit.index gte $outfit.length >>
					<!-- shouldn't be possible since this ideally gets reset whenever we leave the shop, but I'll futureproof here - better safe than sorry  -->
					<<set $shopClothingFilter.outfit.index = "none">>
				<</if>>

				<span class="bold gold">Filter outfit</span>
				<div class="filter-outfit">
					<label>
					Outfit:
					<<listbox "$shopClothingFilter.outfit.index" autoselect>>
						<<optionsfrom getFilterOutfitOptions()>>
					<</listbox>>
					</label>
				</div>
			</div>

			<div id="filter-traits" class="filter-block">
				<span class="bold gold">Traits</span>
				<div class="traits-list">
					<<set _traitsInThisShop = [...new Set(Object.keys(setup.clothes).flatMap(x => setup.clothes[x]).filter(x => x.shop.includes(_shopLocation)).flatMap(x => x.type))]>>
					<<for _trait range _traitsInThisShop.sort()>>
						<<silently>><<shopTraitDescription _trait>><</silently>>
						<div class="filters-trait-row">
							<label>
								<<set _checked = $shopClothingFilter.traits.includes(_trait) ? 'checked="checked"' : ''>>
								<<clothingtrait _trait 'display_normal'>>
								<<print '<input type="checkbox" @id="_trait" @value="_trait" ' + _checked + ' onclick="window.shopClothingFilterToggleTrait(this.value)">'>>
								<<if $noTraitDescription>>
									<<print _clothesTrait>>
								<<else>>
									<mouse class = "tooltip-small">
										<<print _clothesTrait>>
										<span class="black"><<print _clothesDesc>></span>
									</mouse>
								<</if>>
							</label>
						</div>
					<</for>>
				</div>
			</div>
		</div>
	</div>
<</widget>>

<<widget "filterreveal">>
	<<if $shopClothingFilter.reveal.from is undefined>>
		<<set $shopClothingFilter.reveal.from = 0>>
	<</if>>
	<<if $shopClothingFilter.reveal.to is undefined>>
		<<set $shopClothingFilter.reveal.to = 9999>>
	<</if>>
	<span class="bold gold">Reveal</span>
	<div class="filter-reveal-fromto">
		<label>from <<listbox "$shopClothingFilter.reveal.from" autoselect>><<optionsfrom getFilterRevealOptions('from')>><</listbox>></label>
		<label>to <<listbox "$shopClothingFilter.reveal.to" autoselect>><<optionsfrom getFilterRevealOptions('to')>><</listbox>></label>
	</div>

	<<run $(() => { $('#filter-reveal select').on('change', (e) => { new Wikifier(null, "<<replace '#filter-reveal'>><<filterreveal>><</replace>>"); }) })>>
<</widget>>

<<widget "loadShopOptions">>
	<div class="options-div" onclick="event.stopPropagation()">
		<div id="options-buttons" class="options-buttons-div">
			<div class="options-button button-apply div-link">
				<<link "Save and Close">>
					<<addclass '#shop-options' 'hidden'>>
					<<updateclotheslist>>
					<<run updateMoment()>>
				<</link>>
			</div>
		</div>
		<div class="options-body">
			<<set _colorOptions to ["black", "blue", "brown", "green", "pink", "purple", "red", "tangerine", "teal", "white", "yellow", "custom", "random"]>>

			<br>
			Default primary colour:
			<br>
			<<for _col range _colorOptions>>
				<label>
					<<radiobutton "$shopDefaults.color" _col autocheck>>
					<span @class="_col">_col</span>
				</label>
				|
			<</for>>
			<br><br>
			Default secondary colour:
			<br>
			<<for _col range _colorOptions>>
				<label>
					<<radiobutton "$shopDefaults.secColor" _col autocheck>>
					<span @class="_col">_col</span>
				</label>
				|
			<</for>>
			<br><hr>

			<label>
				<<checkbox "$shopDefaults.disableReturn" false true autocheck>>
				Don't return to catalogue after buying an item.
			</label>
			<br><hr>

			<label>
				<<checkbox "$shopDefaults.alwaysBackToShopButton" false true autocheck>>
				Always show "Back to shop" button.
			</label>
			<br><hr>

			<<if $shopDefaults.colourItems is undefined>>
				<<set $shopDefaults.colourItems = "random">>
			<</if>>
			<label>
				Colour items in catalogue:
				<<listbox "$shopDefaults.colourItems" autoselect>>
					<<option "Disable" "disable">>
					<<option "Use random colours" "random">>
					<<option "Use default colour" "default">>
				<</listbox>>
			</label>
			<br><hr>

			<label>
				Amount of items on each page of catalogue:
				<<listbox "$shopItemsPerPage" autoselect>>
					<<optionsfrom [4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32]>>
				<</listbox>>
			</label>
			<br><hr>

			<div class="high-contrast-example">
				<label>
					<<checkbox "$shopDefaults.highContrast" false true autocheck>>
					Use high contrast text on colour buttons.
				</label>
				&nbsp;&nbsp;Example:&nbsp;&nbsp;
				<div class="colour-button"><div class="bg-pink"><span class="capitalize colour-name-span">pink</span></div></div>
				&nbsp;<span style="margin-right:0.25em">vs</span>&nbsp;
				<div class="colour-button"><div class="bg-pink"><span class="capitalize colour-name-span-highcontrast">pink</span></div></div>
			</div>
			<hr>

			<label>
				<<checkbox "$shopDefaults.mannequinGenderFromClothes" false true autocheck>>
				Set mannequin's gender to that of a clothing item (fallback to setting below for unisex).
			</label>
			<br>
			<label>
				Gender of the mannequin:
				<<listbox "$shopDefaults.mannequinGender" autoselect>>
					<<option "Same as player" "same">>
					<<option "Opposite of player" "opposite">>
					<<option "Always male" "male">>
					<<option "Always female" "female">>
				<</listbox>>
			</label>
			<br>
			<label>
				Mannequin chest size:
				<<listbox "$mannequinBreastsSize" autoselect>>
					<<optionsfrom {"Flat": 0 , "Tiny": 1, "Small": 2, "Full": 3, "Large": 4, "Huge": 5}>>
				<</listbox>>
			</label>
			<br><hr>

			<label>
				<<checkbox "$shopDefaults.compactMode" false true autocheck>>
				Display less information to make catalogue more compact.
			</label>
			<br>
			<label>
				<<checkbox "$shopDefaults.noTraits" false true autocheck>>
				Hide clothing trait icons.
			</label>
			<br>
			<label>
				<<checkbox "$shopDefaults.noHelp" false true autocheck>>
				Don't show help / legend button in catalogue.
			</label>
		</div>
	</div>
<</widget>>

<<widget "clothingShopLegend">>
	<div id="shop-legend" class="shop-legend hidden">
		<div class="legend-caption bold gold">Legend</div>
		<br>

		<<if $options.images is 1>>
			<div>
				<img src="img/misc/icon/integrity.png">
				Integrity rating. How hard it is to tear clothing into scraps.
			</div>
			<div>
				<img src="img/misc/icon/reveal.png">
				Reveal rating. How alluring clothing makes you.
			</div>
			<div>
				<img src="img/misc/icon/warmth.png">
				Warmth rating. How good clothing protects you from cold.
			</div>
			<br>

			<div class="legend-2em">
				<img src="img/misc/icon/options.png">
				Clothing shop options.
			</div>
			<div class="legend-2em">
				<img src="img/misc/icon/filter.png">
				Clothing shop filters.
			</div>
			<br>
		<<else>>
			I - Integrity rating. How hard it is to tear clothing into scraps.
			<br>
			R - Reveal rating. How alluring clothing makes you.
			<br>
			W - Warmth rating. How good clothing protects you from cold.
		<</if>>

		<div class="legend-warmth">
			<div class="legend-warmth-div">
				<<warmthscale $warmth+25>>
			</div>
			Warmth indicator.
			<br>
			Displays comfortable temperature range, depends on weather.
			<br>
			<div class="legend-colour-sample" style="background-color: dodgerblue"></div> - you will be too cold at this temperature
			<br>
			<div class="legend-colour-sample" style="background-color: lightskyblue"></div> - you will be a bit chilly at this temperature
			<br>
			<div class="legend-colour-sample" style="background-color: lemonchiffon"></div> - perfect temperature
			<br>
			<div class="legend-colour-sample" style="background-color: orange"></div> - you will be a bit too warm at this temperature
			<br>
			<div class="legend-colour-sample" style="background-color: orangered"></div> - you will be way too hot at this temperature
			<br>
			<div class="legend-icon"><img src="img/misc/icon/warmth_indicator.png"></div> - your warmth with your current clothes on
			<br>
			<div class="legend-icon"><img src="img/misc/icon/small_uarrow.png"></div> - warmth you'd have would you put other clothing on instead
		</div>
	</div>
<</widget>>

<<widget "warmthscale">>
	<div class="warmth-scale-container">
		<<warmthscale-internal _args[0]>>
	</div>
<</widget>>

<<widget "updatewarmthscale">>
	<<temperature>>
	<<replace '.warmth-scale-container'>><<warmthscale-internal>><</replace>>
<</widget>>

<<widget "updatewarmthdescription">>
	<<replace '#warmth-description'>><<warmth_description>><</replace>>
<</widget>>

<<widget "warmthscale-internal">>
	<<if _args[0]>>
		<<set _newWarmth = _args[0]>>
	<<elseif $clothes_choice>>
		<<set _newWarmth = getWarmthWithOtherClothing(_realSlot, _realIndex)>>
	<</if>>
	<<set _warmthData = getWarmthScaleData(_newWarmth)>>

	<div class="warmth-scale-div">
		<div class="cold" @style="'width: ' + _warmthData.cold"></div>
		<div @class="'chill ' + _warmthData.nocold" @style="'width: ' + _warmthData.chill"></div>
		<div @class="'ok ' + _warmthData.nowarm" @style="'width: ' + _warmthData.ok"></div>
		<div @class="'warm ' + _warmthData.nohot" @style="'width: ' + _warmthData.warm"></div>
		<div class="hot" @style="'width: ' + _warmthData.hot"></div>

		<<if $clothes_choice or _args[0]>>
			<div @class="'diff ' + _warmthData.diffUpDown" @style="'left: ' + _warmthData.diffStart + '; width: ' + _warmthData.diffWidth"></div>
		<</if>>
	</div>

	<img src="img/misc/icon/warmth_indicator.png" class="warmth-indicator" @style="'left: ' + _warmthData.player">
	<<if $clothes_choice or _args[0]>>
		<img src="img/misc/icon/small_uarrow.png" class="warmth-indicator" @style="'left: ' + _warmthData.playerNew">
	<</if>>
<</widget>>

<<widget "sendItemsTo">>
	<div class="returnOptions no-numberify">
		<<for _label, _value range $wardrobes>>
			<<if _value.unlocked and _value.shopSend>>
				<<if $wardrobes.shopReturn is _label>>
					<div class="try-button div-link">
						<span class="gold"><<print _value.name>></span>
					</div>
				<<else>>
					<div class="try-button div-link">
						<<capture _label>>
							<<link _value.name>>
								<<set $wardrobes.shopReturn to _label>>
								<<updateclotheslist>>
								<<updatesidebardescription>>
								<<updatewarmthscale>>
								<<updatewarmthdescription>>
								<<run updateMoment()>>
							<</link>>
						<</capture>>
					</div>
				<</if>>
			<</if>>
		<</for>>
	</div>
<</widget>>

<<widget "sendItemsToDropdown">>
	<<if $multipleWardrobes is "all">>
		<label>Send to:
		<<set _options to {}>>
		<<for _label, _value range $wardrobes>>
			<<if _value.unlocked and !$wardrobes[_label].isolated>>
				<<set _options[_value.name] to _label>>
			<</if>>
		<</for>>
		<<listbox '$wardrobes.shopReturn' autoselect>>
			<<optionsfrom _options>>
		<</listbox>>
		</label>
		<br>
	<<else>>
		<<set $wardrobes.shopReturn to "wardrobe">>
	<</if>>
<</widget>>

/*If the player just goes to the shop and puts up their hood, make sure whatever they had on their head doesn't just disappear*/
<<widget "shopHoodCheck">>
	<<if $tryOn.tryingOn.head is null and $tryOn.ownedStored.head.name isnot "naked" and $tryOn.ownedStored.head.name isnot $worn.head.name and $worn.head.hood is 1>>
		<<wardrobeSend "head" $tryOn.ownedStored.head>>
	<</if>>
<</widget>>

<<widget "shopCommandoCheck">>
	<<if $earSlime.forcedCommando isnot undefined or ($worn.under_lower.type.includes("naked") and setup.clothes.under_lower.find(item => {
		if (!item.shop.includes($shopName) or $money lt getClothingCost(item, "under_lower")) return false;
		if (playerBellySize() >= 12 and item.type.includes("constricting")) return false;
		if (V.earSlime.forcedDressing and V.earSlime.forcedDressing.days gt 0 and item.gender isnot V.earSlime.forcedDressing.type and item.gender isnot "n" and !item.type.includesAny("event")) return false;
		return true;
	}))>>
		<<set $worn.under_lower.exposedType to "notBought">>
	<</if>>
<</widget>>
