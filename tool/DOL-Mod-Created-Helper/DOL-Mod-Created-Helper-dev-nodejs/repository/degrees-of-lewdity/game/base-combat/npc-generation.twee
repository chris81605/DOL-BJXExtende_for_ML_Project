:: Widgets NPC Generation [widget]
<<widget "generateNPC">>
	<!-- Args are NPC#(1-6), Status, Pronoun, Gender, Level -->
	<!-- Example: <<generateNPC 1 a m m 18>> would generate NPC 1 as adult male/male "burly" -->
	<!-- Example: <<generateNPC 2 a f f 18>> would generate NPC 2 as adult female/female "vulgar" bodyguard type-->
	<!-- Example: <<generateNPC 1 a f h 20>> would generate NPC 1 as adult female/herm "demon" monster type-->
	<!-- Latter two examples can only be called via this widget; they are not autogenerated -->


	<<set _n to _args[0]-1>>
	<!-- Checks if endevent was properly used after the last event -->
	<<checkEventNPC _n>>
	<<set _status to _args[1]>> /* "t" for teen, "a" for adult, or "r" for random */
	<<set _pronoun to _args[2]>>
	<<set _gender to _args[3]>>
	<<set _lvl to _args[4]>>

	<<if _pronoun is "m" or _pronoun is "f">>
		<<set $NPCList[_n].pronoun to _pronoun>>
	<<else>>
		<<rng>>
		<<if _generate_victim is 1>>
			<<unset _generate_victim>>
			<<set $NPCList[_n].pronoun to ($rng lte $malevictimchance ? "m" : "f")>>
		<<elseif !isNaN(_generate_partner) and $NPCList[_generate_partner].fullDescription>>
			<!-- This determines if the couple is homo or not. The generated NPC's partner is, by default, the NPC directly before them in NPCList. The partner can be selected manually with an argument. -->
			<<set $NPCList[_n].pronoun to maleChance($NPCList[_generate_partner].pronoun) gte random(1, 100) ? "m" : "f">>
			<<unset _generate_partner>>
		<<else>>
			<<set $NPCList[_n].pronoun to ($rng lte maleChance() ? "m" : "f")>>
		<</if>>
	<</if>>

	<!-- This doesn't need to be set here, but that's how it's been done in the past, so we'll set it just in case. -->
	<!-- NPC gender gets properly set according to player settings in the npcattribute widget. -->
	<<set $NPCList[_n].gender to $NPCList[_n].pronoun>>

	<<set $NPCList[_n].lefthand to 0>>
	<<set $NPCList[_n].righthand to 0>>
	<<set $NPCList[_n].mouth to 0>>
	<<set $NPCList[_n].location to {}>>
	<<set $NPCList[_n].location.head to 0>>
	<<set $NPCList[_n].location.genitals to 0>>
	<<set $NPCList[_n].bold to 0>>
	<<set $NPCList[_n].name to ($NPCList[_n].pronoun is "f" ? $NPC_names_f.random() : $NPC_names_m.random())>>

	<<generatePronouns $NPCList[_n]>>

	<!-- TODO: remove either .teen or .adult; all adults are not teens, and all teens are not adults. -->
	<!-- Having two separate variables means having twice as much code to accomplish the same thing, and STILL possibly introducing bugs if you do it wrong. -->
	<<if _status is "t" or (_status is "r" and random(0,1))>>
		<<set $NPCList[_n].teen to 1>>
		<<set $NPCList[_n].adult to 0>>
	<<else>>
		<<set $NPCList[_n].adult to 1>>
		<<set $NPCList[_n].teen to 0>>
	<</if>>

	<<set $NPCList[_n].pregnancyAvoidance to random(0,100)>>

	<<if $enemyno lt 6>><<set $enemyno += 1>><</if>>

	<<npcattribute _n _gender _lvl>>

	<<set $NPCList[_n].index to _n>>
	<<run EventSystem.push($passage, _n, $timeStamp)>>
<</widget>>

<<widget "generateRole">>
	<!-- Argument 1: The slot the new NPC should fill in $NPCList. Slot one would be "0" -->
	<!-- Argument 2: The description of the NPC. To generate a default description, use 0
	To make a description that changes based on NPC gender, split the male/female descriptions with "/"-->
	<!-- Argument 3: The role of the NPC. To generate with no role, use 0. Do not set role to "normal"
	To make a role that changes based on NPC gender, split the male/female roles with "/"-->
	<!-- Argument 4: The status of the NPC. Defaults to adult; use "t" for student -->
	<!-- Example: <<generateRole 0 "curious" "scientist">> would generate the first NPC as adult "curious scientist" -->
	<!-- Example: <<generateRole 1 "arrogant" 0 t>> would generate the second NPC as "arrogant boy" or "arrogant girl"-->
	<!-- Example: <<generateRole 2 "starstruck" "fanboy/fangirl">> would generate the third NPC as adult "starstruck fanboy" or "starstruck fangirl" -->
	<<set _slot to _args[0]>>
	<<set _desc to _args[1] ? _args[1] : 0>>
	<<set _role to _args[2] ? _args[2] : 0>>
	<<set _status to _args[3] is "t" ? "t" : "a">>

	<<generateNPC `_slot + 1` _status>>

	<<if _desc>>
		<<if _desc.includes("/")>>
			<<set [_descM, _descF] to _desc.split("/")>>
			<<set $NPCList[_slot].description to $NPCList[_slot].pronoun is "m" ? _descM : _descF>>
		<<else>>
			<<set $NPCList[_slot].description to _desc>>
		<</if>>
	<</if>>
	<<if _role>>
		<<if _role.includes("/")>>
			<<set [_roleM, _roleF] to _role.split("/")>>
			<<set $NPCList[_slot].role to $NPCList[_slot].pronoun is "m" ? _roleM : _roleF>>
		<<else>>
			<<set $NPCList[_slot].role to _role>>
		<</if>>
		<<if _role.includes("guard")>>
			<<npcClothesType $NPCList[_slot] "security">>
		<<elseif _role.includes("inmate")>>
			<<npcClothesType $NPCList[_slot] "prison">>
		<<elseif _role.includes("pirate")>>
			<<npcClothesType $NPCList[_slot] "docker2">>
		<<elseif _role.includes("islander")>>
			<<npcClothesType $NPCList[_slot] "brothelHarness">>
		<</if>>
	<</if>>

	<<set $NPCList[_slot].fullDescription to $NPCList[_slot].description + " ">>
	<<if $NPCList[_slot].role isnot "normal">>
		<<set $NPCList[_slot].fullDescription += $NPCList[_slot].role>>
	<<elseif $NPCList[_slot].pronoun is "m">>
		<<set $NPCList[_slot].fullDescription += ($NPCList[_slot].teen is 1 ? "boy" : "man")>>
	<<elseif $NPCList[_slot].pronoun is "f">>
		<<set $NPCList[_slot].fullDescription += ($NPCList[_slot].teen is 1 ? "girl" : "woman")>>
	<</if>>
<</widget>>

<<widget "undressNPC">>
	<<set $_npc to $NPCList[_args[0]-1]>>
	<<if $_npc.penis is "clothed">>
		<<set $_npc.penis to 0>>
	<</if>>
	<<if $_npc.vagina is "clothed">>
		<<set $_npc.vagina to 0>>
	<</if>>
<</widget>>

<<widget "generate1">>
	<<generateNPC 1>>
<</widget>>

<<widget "generate2">>
	<<generateNPC 2>>
<</widget>>

<<widget "generate3">>
	<<generateNPC 3>>
<</widget>>

<<widget "generate4">>
	<<generateNPC 4>>
<</widget>>

<<widget "generate5">>
	<<generateNPC 5>>
<</widget>>

<<widget "generate6">>
	<<generateNPC 6>>
<</widget>>

<<widget "generatey1">>
	<<generateNPC 1 t>>
<</widget>>

<<widget "generatey2">>
	<<generateNPC 2 t>>
<</widget>>

<<widget "generatey3">>
	<<generateNPC 3 t>>
<</widget>>

<<widget "generatey4">>
	<<generateNPC 4 t>>
<</widget>>

<<widget "generatey5">>
	<<generateNPC 5 t>>
<</widget>>

<<widget "generatey6">>
	<<generateNPC 6 t>>
<</widget>>

<<widget "generatec1">>
	<<generateNPC 1 t>>
<</widget>>

<<widget "generatec2">>
	<<generateNPC 2 t>>
<</widget>>

<<widget "generatec3">>
	<<generateNPC 3 t>>
<</widget>>

<<widget "generatec4">>
	<<generateNPC 4 t>>
<</widget>>

<<widget "generatec5">>
	<<generateNPC 5 t>>
<</widget>>

<<widget "generatec6">>
	<<generateNPC 6 t>>
<</widget>>

<<widget "generatev1">>
	<<set _generate_victim to 1>>
	<<generateNPC 1>>
<</widget>>

<<widget "generatev2">>
	<<set _generate_victim to 1>>
	<<generateNPC 2>>
<</widget>>

<<widget "generatev3">>
	<<set _generate_victim to 1>>
	<<generateNPC 3>>
<</widget>>

<<widget "generatev4">>
	<<set _generate_victim to 1>>
	<<generateNPC 4>>
<</widget>>

<<widget "generatev5">>
	<<set _generate_victim to 1>>
	<<generateNPC 5>>
<</widget>>

<<widget "generatev6">>
	<<set _generate_victim to 1>>
	<<generateNPC 6>>
<</widget>>

<<widget "generateyv1">>
	<<set _generate_victim to 1>>
	<<generateNPC 1 t>>
<</widget>>

<<widget "generateyv2">>
	<<set _generate_victim to 1>>
	<<generateNPC 2 t>>
<</widget>>

<<widget "generateyv3">>
	<<set _generate_victim to 1>>
	<<generateNPC 3 t>>
<</widget>>

<<widget "generateyv4">>
	<<set _generate_victim to 1>>
	<<generateNPC 4 t>>
<</widget>>

<<widget "generateyv5">>
	<<set _generate_victim to 1>>
	<<generateNPC 5 t>>
<</widget>>

<<widget "generateyv6">>
	<<set _generate_victim to 1>>
	<<generateNPC 6 t>>
<</widget>>

<<widget "generatep2">>
	<<set _generate_partner to _args[0] isnot undefined ? _args[0] : 0>>
	<<generateNPC 2>>
<</widget>>

<<widget "generatep3">>
	<<set _generate_partner to _args[0] isnot undefined ? _args[0] : 1>>
	<<generateNPC 3>>
<</widget>>

<<widget "generatep4">>
	<<set _generate_partner to _args[0] isnot undefined ? _args[0] : 2>>
	<<generateNPC 4>>
<</widget>>

<<widget "generatep5">>
	<<set _generate_partner to _args[0] isnot undefined ? _args[0] : 3>>
	<<generateNPC 5>>
<</widget>>

<<widget "generatep6">>
	<<set _generate_partner to _args[0] isnot undefined ? _args[0] : 4>>
	<<generateNPC 6>>
<</widget>>

<<widget "generateyp2">>
	<<set _generate_partner to _args[0] isnot undefined ? _args[0] : 0>>
	<<generateNPC 2 t>>
<</widget>>

<<widget "generateyp3">>
	<<set _generate_partner to _args[0] isnot undefined ? _args[0] : 1>>
	<<generateNPC 3 t>>
<</widget>>

<<widget "generateyp4">>
	<<set _generate_partner to _args[0] isnot undefined ? _args[0] : 2>>
	<<generateNPC 4 t>>
<</widget>>

<<widget "generateyp5">>
	<<set _generate_partner to _args[0] isnot undefined ? _args[0] : 3>>
	<<generateNPC 5 t>>
<</widget>>

<<widget "generateyp6">>
	<<set _generate_partner to _args[0] isnot undefined ? _args[0] : 4>>
	<<generateNPC 6 t>>
<</widget>>

<<widget "generatel">>
	<<if $enemyno gte 0 and $enemyno lte 5>>
		<<if $location is "beach">>
			<<generateNPC `$enemyno + 1` t>> <!-- Generate next slot teenager -->
		<<else>>
			<<generateNPC `$enemyno + 1`>> <!-- Generate next slot adult -->
		<</if>>
	<</if>>
<</widget>>

<<widget "generates1">>
	<<set _npcClothesPreset to "school">>
	<<generatey1>>
<</widget>>

<<widget "generates2">>
	<<set _npcClothesPreset to "school">>
	<<generatey2>>
<</widget>>

<<widget "generates3">>
	<<set _npcClothesPreset to "school">>
	<<generatey3>>
<</widget>>

<<widget "generates4">>
	<<set _npcClothesPreset to "school">>
	<<generatey4>>
<</widget>>

<<widget "generates5">>
	<<set _npcClothesPreset to "school">>
	<<generatey5>>
<</widget>>

<<widget "generates6">>
	<<set _npcClothesPreset to "school">>
	<<generatey6>>
<</widget>>

<<widget "generatesm1">>
	<<set _npcClothesPreset to "school">>
	<<generateym1>>
<</widget>>

<<widget "generatesm2">>
	<<set _npcClothesPreset to "school">>
	<<generateym2>>
<</widget>>

<<widget "generatesm3">>
	<<set _npcClothesPreset to "school">>
	<<generateym3>>
<</widget>>

<<widget "generatesm4">>
	<<set _npcClothesPreset to "school">>
	<<generateym4>>
<</widget>>

<<widget "generatesm5">>
	<<set _npcClothesPreset to "school">>
	<<generateym5>>
<</widget>>

<<widget "generatesm6">>
	<<set _npcClothesPreset to "school">>
	<<generateym6>>
<</widget>>

<<widget "generatesf1">>
	<<set _npcClothesPreset to "school">>
	<<generateyf1>>
<</widget>>

<<widget "generatesf2">>
	<<set _npcClothesPreset to "school">>
	<<generateyf2>>
<</widget>>

<<widget "generatesf3">>
	<<set _npcClothesPreset to "school">>
	<<generateyf3>>
<</widget>>

<<widget "generatesf4">>
	<<set _npcClothesPreset to "school">>
	<<generateyf4>>
<</widget>>

<<widget "generatesf5">>
	<<set _npcClothesPreset to "school">>
	<<generateyf5>>
<</widget>>

<<widget "generatesf6">>
	<<set _npcClothesPreset to "school">>
	<<generateyf6>>
<</widget>>

<<widget "generatem1">>
	<<generateNPC 1 a m>>
<</widget>>

<<widget "generatem2">>
	<<generateNPC 2 a m>>
<</widget>>

<<widget "generatem3">>
	<<generateNPC 3 a m>>
<</widget>>

<<widget "generatem4">>
	<<generateNPC 4 a m>>
<</widget>>

<<widget "generatem5">>
	<<generateNPC 5 a m>>
<</widget>>

<<widget "generatem6">>
	<<generateNPC 6 a m>>
<</widget>>

<<widget "generatef1">>
	<<generateNPC 1 a f>>
<</widget>>

<<widget "generatef2">>
	<<generateNPC 2 a f>>
<</widget>>

<<widget "generatef3">>
	<<generateNPC 3 a f>>
<</widget>>

<<widget "generatef4">>
	<<generateNPC 4 a f>>
<</widget>>

<<widget "generatef5">>
	<<generateNPC 5 a f>>
<</widget>>

<<widget "generatef6">>
	<<generateNPC 6 a f>>
<</widget>>

<<widget "generateym1">>
	<<generateNPC 1 t m>>
<</widget>>

<<widget "generateym2">>
	<<generateNPC 2 t m>>
<</widget>>

<<widget "generateym3">>
	<<generateNPC 3 t m>>
<</widget>>

<<widget "generateym4">>
	<<generateNPC 4 t m>>
<</widget>>

<<widget "generateym5">>
	<<generateNPC 5 t m>>
<</widget>>

<<widget "generateym6">>
	<<generateNPC 6 t m>>
<</widget>>

<<widget "generateyf1">>
	<<generateNPC 1 t f>>
<</widget>>

<<widget "generateyf2">>
	<<generateNPC 2 t f>>
<</widget>>

<<widget "generateyf3">>
	<<generateNPC 3 t f>>
<</widget>>

<<widget "generateyf4">>
	<<generateNPC 4 t f>>
<</widget>>

<<widget "generateyf5">>
	<<generateNPC 5 t f>>
<</widget>>

<<widget "generateyf6">>
	<<generateNPC 6 t f>>
<</widget>>

<<widget "generatecm1">>
	<<generateNPC 1 t m>>
<</widget>>

<<widget "generatecm2">>
	<<generateNPC 2 t m>>
<</widget>>

<<widget "generatecm3">>
	<<generateNPC 3 t m>>
<</widget>>

<<widget "generatecm4">>
	<<generateNPC 4 t m>>
<</widget>>

<<widget "generatecm5">>
	<<generateNPC 5 t m>>
<</widget>>

<<widget "generatecm6">>
	<<generateNPC 6 t m>>
<</widget>>

<<widget "generatecf1">>
	<<generateNPC 1 t f>>
<</widget>>

<<widget "generatecf2">>
	<<generateNPC 2 t f>>
<</widget>>

<<widget "generatecf3">>
	<<generateNPC 3 t f>>
<</widget>>

<<widget "generatecf4">>
	<<generateNPC 4 t f>>
<</widget>>

<<widget "generatecf5">>
	<<generateNPC 5 t f>>
<</widget>>

<<widget "generatecf6">>
	<<generateNPC 6 t f>>
<</widget>>

<<widget "generatePlant1">>
	<<set _npcPlant to 1>><<set _strapIgnore to 1>><<set _condomIgnore to 1>>
	<<generateNPC 1 t>>
<</widget>>

<<widget "generatePlant2">>
	<<set _npcPlant to 1>><<set _strapIgnore to 1>><<set _condomIgnore to 1>>
	<<generateNPC 2 t>>
<</widget>>

<<widget "generatePlant3">>
	<<set _npcPlant to 1>><<set _strapIgnore to 1>><<set _condomIgnore to 1>>
	<<generateNPC 3 t>>
<</widget>>

<<widget "generatePlant4">>
	<<set _npcPlant to 1>><<set _strapIgnore to 1>><<set _condomIgnore to 1>>
	<<generateNPC 4 t>>
<</widget>>

<<widget "generatePlant5">>
	<<set _npcPlant to 1>><<set _strapIgnore to 1>><<set _condomIgnore to 1>>
	<<generateNPC 5 t>>
<</widget>>

<<widget "generatePlant6">>
	<<set _npcPlant to 1>><<set _strapIgnore to 1>><<set _condomIgnore to 1>>
	<<generateNPC 6 t>>
<</widget>>

<<widget "generateTemple">>
	<<set _npcChastity to 1>>
	<<set _npcClothesPreset to "temple">>
	<<generateNPC _args[0]>>
<</widget>>

<<widget "generateyTemple">>
	<<set _npcChastity to 1>>
	<<set _npcClothesPreset to "temple">>
	<<generateNPC _args[0] t>>
<</widget>>

<<widget "generateInitiate">>
	<<set _npcChastity to 1>>
	<<set _npcClothesPreset to "temple">>
	<<set _slot to (_args[0] - 1)>>
	<<generateRole _slot 0 "initiate">>
<</widget>>

<<widget "generateConfessor">>
	<<set _npcClothesPreset to "templeBlack">>
	<<generateNPC _args[0]>>
<</widget>>

<<widget "generateCultist">>
	<<set _npcClothesPreset to "templeBlack">>
	<<set _slot to (_args[0] - 1)>>
	<<generateRole _slot 0 "cultist">>
<</widget>>

<<widget "generatePolice">>
	<<set _npcClothesPreset to "police">>
	<<generateNPC _args[0]>>
<</widget>>

<<widget "generateSecurity">>
	<<set _npcClothesPreset to "security">>
	<<generateNPC _args[0]>>
<</widget>>

<<widget "generateSailor">>
	<<set _npcClothesPreset to "sailor">>
	<<generateNPC _args[0]>>
<</widget>>

<<widget "generateDoctor">>
	<<set _npcClothesPreset to "hospital">>
	<<generateNPC _args[0]>>
<</widget>>

<<widget "generatePlant">>
	<<set _npcPlant to 1>><<set _strapIgnore to 1>><<set _condomIgnore to 1>>
	<<generateNPC _args[0] "t">>
<</widget>>

<<widget "generateSweaterWearer">>
	<<set _npcClothesPreset to "sweater">>
	<<generateNPC _args[0]>>
<</widget>>

<<widget "generateDemon">>
	<<generateNPC _args[0] a f h 20>>
	<<undressNPC _args[0]>>
<</widget>>

<<widget "npcattribute">>
	<!-- V2.4 Widget set NPC attributes. $arg[0] calls NPC number (0 - 5) to be generated. NG-->
	<!-- $NPCList.pronoun sets appearance, including breasts. NPCList.gender sets genitals, including pp -->
	<!-- Future work this should call addns args to set pronoun, gender, and size of NPC(0-18) where larger number is more robust. This would eliminate much of the NPC calls from above and push to code. -->
	<!-- Added thug Vulgar/Brutish as NPC19, can only be called with $arg[2] -->
	<!-- Added strap-on functionality v2.8 -->
	<!-- Added sex toy functionality 0.3.8.0 -->

	<!-- check if this npc has seen the player while the player was pantiless; doesn't matter if they knew it or not. -->
	<<nounderwearcheck>>

	<<set _n to _args[0]>>
	<<set _gender to _args[1]>>
	<<set _lvl to _args[2]>>

	<!-- This sets genitals. -->
	<<set $NPCList[_n].vagina to "none">>
	<<set $NPCList[_n].penis to "none">>

	<<if ["m", "f", "h"].includes(_gender)>>
		<<set $NPCList[_n].gender to _gender>>
		<<if _gender is "m">>
			<<set $NPCList[_n].penis to "clothed">>
		<<elseif _gender is "f">>
			<<set $NPCList[_n].vagina to "clothed">>
		<<elseif _gender is "h">>
			<<set $NPCList[_n].vagina to "clothed">>
			<<set $NPCList[_n].penis to "clothed">>
		<</if>>
	<<else>>
		<<rng>>
		<<if $NPCList[_n].pronoun is "m">>
			<<if $rng lte $cbchance and $debugEnableHerms is 1>>
				<<set $NPCList[_n].penis to "clothed">>
				<<set $NPCList[_n].vagina to "clothed">>
				<<set $NPCList[_n].gender to "h">>
			<<elseif $rng lte $cbchance>>
				<<set $NPCList[_n].vagina to "clothed">>
				<<set $NPCList[_n].gender to "f">>
			<<else>>
				<<set $NPCList[_n].penis to "clothed">>
				<<set $NPCList[_n].gender to "m">>
			<</if>>
		<<elseif $NPCList[_n].pronoun is "f">>
			<<if $rng lte $dgchance and $debugEnableHerms is 1>>
				<<set $NPCList[_n].vagina to "clothed">>
				<<set $NPCList[_n].penis to "clothed">>
				<<set $NPCList[_n].gender to "h">>
			<<elseif $rng lte $dgchance>>
				<<set $NPCList[_n].penis to "clothed">>
				<<set $NPCList[_n].gender to "m">>
			<<else>>
				<<set $NPCList[_n].vagina to "clothed">>
				<<set $NPCList[_n].gender to "f">>
			<</if>>
		<</if>>
	<</if>>

	<<set $NPCList[_n].chastity to {penis:"", vagina:"", anus:""}>>
	<<if _npcChastity is 1>>
		<<unset _npcChastity>>
		<<if random(-100, 120) gte $world_corruption_soft>>
			<<if $NPCList[_n].penis isnot "none">>
				<<set $NPCList[_n].chastity.penis to (random(1, 3) is 1 ? "chastity belt" : "chastity cage")>>
			<</if>>
			<<if $NPCList[_n].vagina isnot "none">>
				<!-- if npc has both, give them the same chastity type on both. -->
				<<set $NPCList[_n].chastity.vagina to ($NPCList[_n].chastity.penis isnot "" ? $NPCList[_n].chastity.penis : "chastity belt")>>
			<</if>>
			<<set $_beltPresent to ($NPCList[_n].chastity.penis is "chastity belt" or $NPCList[_n].chastity.vagina is "chastity belt")>>
			<<if $analdisable is "f" and random(-100, 150) gte $world_corruption_soft and $_beltPresent>>
				<<set $NPCList[_n].chastity.anus to "anal shield">>
			<</if>>
		<</if>>
	<</if>>

	<<generateNPCClothes $NPCList[_n]>>

	/* Sex toy init rework */
	/* Sex toys become more popular over time after the adult shop opens */
	<<if !_strapIgnore and $enemytype isnot "beast" and ($NPCList[_n].teen isnot 1 or random(1,20) is 1) and ($position isnot "wall" or $walltype isnot "front")>>
		<<if $adultshopdegree gte random(0, 100) or random(0,100) lt 5>>
			<<if $toywhipdisable is "f" and $toydildodisable is "f" and $player.gender_appearance isnot "f">>
				<<set _sexToy to randomSexToy()>>
			<<elseif $toywhipdisable is "f" and $toydildodisable is "f">>
				<<set _sexToy to randomSexToy("dildos and whips")>>
			<<elseif $toywhipdisable is "f" and $toydildodisable is "t">>
				<<set _sexToy to randomSexToy("whip")>>
			<<elseif $toywhipdisable is "t" and $toydildodisable is "f">>
				<<set _sexToy to randomSexToy("dildo")>>
			<</if>>
			<<if _sexToy isnot undefined>>
				<<set $NPCList[_n].heldSexToy to _sexToy>>
			<</if>>
		<</if>>
	<</if>>

	<<if $NPCList[_n].penis isnot "none">>
		<<set $NPCList[_n].penis to ($NPCList[_n].clothes.lower.name is "naked" ? 0 : "clothed")>>
	<</if>>
	<<if $NPCList[_n].vagina isnot "none">>
		<<set $NPCList[_n].vagina to ($NPCList[_n].clothes.lower.name is "naked" ? 0 : "clothed")>>
	<</if>>
	<<set $NPCList[_n].chest to ($NPCList[_n].clothes.upper.name is "naked" ? 0 : "clothed")>>

	<<if random(1, 100) lte $blackchance>>
		<<set $NPCList[_n].skincolour to "black">>
	<<else>>
		<<set $NPCList[_n].skincolour to "white">>
	<</if>>

	<<rng>>
	<<if $rng gte 81>>
		<<if $NPCList[_n].vagina isnot "none" and $NPCList[_n].penis isnot "none">>
			<<set $NPCList[_n].insecurity to ["penis","vagina"].random()>>
		<<elseif $NPCList[_n].penis isnot "none">>
			<<set $NPCList[_n].insecurity to "penis">>
		<<elseif $NPCList[_n].vagina isnot "none">>
			<<set $NPCList[_n].insecurity to "vagina">>
		<<else>>
			<<set $NPCList[_n].insecurity to "perfectly smooth crotch">> /* default case, shouldn't happen. */
		<</if>>
	<<elseif $rng gte 61>>
		<<set $NPCList[_n].insecurity to "ethics">>
	<<elseif $rng gte 41>>
		<<set $NPCList[_n].insecurity to "weak">>
	<<elseif $rng gte 21>>
		<<set $NPCList[_n].insecurity to "skill">>
	<<else>>
		<<set $NPCList[_n].insecurity to "looks">>
	<</if>>

	<<if $NPCList[_n].teen is 1>>
		<<if $NPCList[_n].pronoun is "f">> <!-- female appearing student -->
			<<set $_hpMax to [125,175,150,150,150,175,150,200,200,200,125,200,250,125,250,200,250,250,200,300,400]>>
			<<set $_desc to ["slight","lithe","lean","thin","slender","lissome","slim","taut","graceful","trim","mousy","cute","fit","petite","toned","shapely","robust","plump","wide-eyed","vulgar","minor demon"]>>
			<<set $_breastMin to [0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,5,5,8,3,10,12]>>
			<<set $_breastMax to [4,4,4,4,4,4,7,7,7,7,8,8,8,8,8,11,11,12,10,12,12]>>
		<<else>> <!-- male appearing student -->
			<<set $_hpMax to [125,175,150,150,150,175,150,200,200,200,125,200,250,125,250,200,250,250,200,300,400]>>
			<<set $_desc to ["slight","lithe","lean","thin","slender","lissome","slim","taut","graceful","trim","mousy","cute","fit","petite","toned","shapely","robust","plump","wide-eyed","brutish","minor demon"]>>
		<</if>>
	<<else>>
		<<if $NPCList[_n].pronoun is "f">> <!-- female appearing adult -->
			<<set $_hpMax to [125,175,150,150,150,175,150,200,125,200,275,200,250,250,200,200,250,200,200,350,600]>>
			<<set $_desc to ["slight","lithe","lean","thin","slender","lissome","slim","taut","petite","trim","muscular","curvy","toned","plump","plush","shapely","robust","voluptuous","lush","vulgar","demon"]>>
			<<set $_breastMin to [0,0,0,0,2,2,2,2,2,5,5,5,5,5,5,5,8,8,9,10,12]>>
			<<set $_breastMax to [4,4,4,4,4,4,7,7,8,9,9,9,9,12,10,11,10,11,11,12,12]>>
		<<else>> <!-- male appearing adult -->
			<<set $_hpMax to [125,125,150,150,150,150,175,175,200,200,200,200,250,250,250,250,275,275,275,400,600]>>
			<<set $_desc to ["petite","slight","slim","thin","slender","lanky","lissome","lithe","trim","lean","taut","plump","toned","bulky","broad","robust","rugged","muscular","burly","brutish","demon"]>>
		<</if>>
	<</if>>

	<!-- Setting pp size limits separately. Changes should track with physical descriptions above, in order. -->
	<!-- Brutes and demons always have the largest penis size. -->
	<!-- $_penisMin is "smallest possible penis size", $_penisMax is "largest possible penis size" -->
	<<if $NPCList[_n].penis isnot "none">>
		<<if $NPCList[_n].teen is 1>>
			<<set $_penisMin to [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8]>>
			<<set $_penisMax to [8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8]>>
		<<else>>
			<<set $_penisMin to [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8]>>
			<<set $_penisMax to [8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8]>>
		<</if>>
	<</if>>

	<<set _brdes to ["nipple","budding","tiny","small","pert","modest","full","large","ample","massive","huge","gigantic","enormous"]>>

	<!-- Select NPC 1-18 Description/Strength pair. Breast size range bound to Description. NPC19 is Brute NPC20 is Demon-->
	<<if _lvl gte 0 and _lvl lte 20>>
		<<set _i to _lvl>>
	<<else>>
		<!-- Making NPCs unique, but only when their description is not specifically requested (and most of the time, it isn't) -->
		<!-- generate a range of numbers from 0 to N -->
		<<set $_range to [...Array(18).keys()]>>
		<!-- figure out which indices are already in use by looking them up in $_desc-->
		<<set $_takenDescriptionIndices to $NPCList.map(npc => $_desc.indexOf(npc.description))>>
		<!-- remove the already taken indices from the pool -->
		<<set $_range.delete($_takenDescriptionIndices)>>
		<!-- choose the index for this NPC using the filtered pool -->
		<<set _i to $_range.pluck()>>
	<</if>>

	<<set $NPCList[_n].healthmax to $_hpMax[_i]>>
	<<set $NPCList[_n].health to $NPCList[_n].healthmax>>
	<<set $NPCList[_n].description to $_desc[_i]>>

	<<if $NPCList[_n].penis isnot "none">><!-- set pp size based on the upper and lower bounds for the selected description -->
		<<if $penis_mod gte $_penisMin[_i]>><<set $_penisMin[_i] to $penis_mod>><</if>>
		<<if $penis_mod gte $_penisMax[_i]>><<set $_penisMax[_i] to $penis_mod>><</if>>
		<<if $penis_mod lt 0>> <!-- Why is this only when $penis_mod is negative? -->
			<<set $_penisMin[_i] to Math.clamp($_penisMin[_i]+$penis_mod, 0, 8)>>
			<<set $_penisMax[_i] to Math.clamp($_penisMax[_i]+$penis_mod, 0, 8)>>
		<</if>>
	<</if>>

	<<if $NPCList[_n].pronoun is "f">><!-- set breast size based on the upper and lower bounds for the selected description-->
		<<if $breast_mod gte $_breastMin[_i]>><<set $_breastMin[_i] to $breast_mod>><</if>>
		<<if $breast_mod gte $_breastMax[_i]>><<set $_breastMax[_i] to $breast_mod>><</if>>
		<<if $breast_mod lt 0>> <!-- Why is this only when $breast_mod is negative? -->
			<<set $_breastMin[_i] to Math.clamp($_breastMin[_i]+$breast_mod, 0, 12)>>
			<<set $_breastMax[_i] to Math.clamp($_breastMax[_i]+$breast_mod, 0, 12)>>
		<</if>>
	<</if>>

	<<if $NPCList[_n].pronoun is "f">><<set _rngbr to random($_breastMin[_i], $_breastMax[_i])>><</if>>
	<<if $NPCList[_n].penis isnot "none">><<set _rngpp to random($_penisMin[_i], $_penisMax[_i])>><</if>>

	<<set $NPCList[_n].fullDescription to $NPCList[_n].description + " ">>
	<<if $NPCList[_n].pronoun is "m">>
		<<set $NPCList[_n].fullDescription += ($NPCList[_n].teen is 1 ? "boy" : "man")>>
	<<elseif $NPCList[_n].pronoun is "f">>
		<<set $NPCList[_n].fullDescription += ($NPCList[_n].teen is 1 ? "girl" : "woman")>>
	<</if>>

	<<set $NPCList[_n].role to "normal">>

	/*Sets up multiple orgasms, code needs work*/
	/*<<set $NPCList[_n].maxOrgasms to 1>>
	<<set $NPCList[_n].orgasms to 0>>
	<<if $NPCList[_n].fullDescription is "Robin">>
		<<set $NPCList[_n].maxOrgasms to 2>>
		<<set $setupMidOrgasm to true>>
	<</if>>
	*/

	<<if $NPCList[_n].pronoun is "m">>
		<<set $NPCList[_n].breastsize to 0>>
		<<set $NPCList[_n].breastsdesc to "nipples">>
		<<set $NPCList[_n].breastdesc to "nipple">>
	<<else>>
		<<if $NPCList[_n].adult is 1>> <!-- set adult breast size -->
			<<set $NPCList[_n].breastsize to _rngbr>>
			<<switch _rngbr>>
			<<case 0>>
				<<set $NPCList[_n].breastsdesc to "nipples">>
				<<set $NPCList[_n].breastdesc to "nipple">>
			<<default>>
				<<set $NPCList[_n].breastsdesc to _brdes[_rngbr]+" breasts">>
				<<set $NPCList[_n].breastdesc to _brdes[_rngbr]+" breast">>
			<</switch>>
		<<else>> <!-- set student breast size -->
			<<set $NPCList[_n].breastsize to _rngbr>>
			<<switch _rngbr>>
			<<case 0>>
				<<set $NPCList[_n].breastsdesc to "nipples">>
				<<set $NPCList[_n].breastdesc to "nipple">>
			<<default>>
				<<set $NPCList[_n].breastsdesc to _brdes[_rngbr]+" breasts">>
				<<set $NPCList[_n].breastdesc to _brdes[_rngbr]+" breast">>
			<</switch>>
		<</if>>
	<</if>>

	<<if $NPCList[_n].penis isnot "none">>
		<<if $NPCList[_n].adult is 1 or _npcPlant is 1>> <!-- set adult/plantperson pp size -->
			<<switch _rngpp>>
			<<case 0>>
				<<set $NPCList[_n].penisdesc to "tiny penis">>
				<<set $NPCList[_n].penissize to 1>>
			<<case 5 6 7>>
				<<set $NPCList[_n].penisdesc to either("thick cock","hefty cock","big cock","large cock","veiny cock","meaty cock")>>
				<<set $NPCList[_n].penissize to 3>>
			<<case 8>>
				<<set $NPCList[_n].penisdesc to either("massive cock","huge cock","humongous cock","immense cock","gigantic cock","enormous cock")>>
				<<set $NPCList[_n].penissize to 4>>
			<<default>>
				<<set $NPCList[_n].penisdesc to "penis">>
				<<set $NPCList[_n].penissize to 2>>
			<</switch>>
		<<else>> <!-- set student pp size -->
			<<switch _rngpp>>
			<<case 0>>
				<<set $NPCList[_n].penisdesc to "tiny penis">>
				<<set $NPCList[_n].penissize to 1>>
			<<case 7 8>>
				<<set $NPCList[_n].penisdesc to either("thick cock","hefty cock","big cock","large cock","veiny cock","meaty cock")>>
				<<set $NPCList[_n].penissize to 3>>
			<<default>>
				<<set $NPCList[_n].penisdesc to "penis">>
				<<set $NPCList[_n].penissize to 2>>
			<</switch>>
		<</if>>
	<</if>>

	<<rng>>
	<<if $NPCList[_n].pronoun is "f">>
		<<if $rng lte ($NPCList[_n].adult is 1 ? 40 : 20)>>
			<<set $NPCList[_n].lactation to 1>>
		<<else>>
			<<set $NPCList[_n].lactation to 0>>
		<</if>>
	<</if>>

	<<generateNPCvirginity $NPCList[_n]>>

	<!-- Sets females with strap-ons as adjustment-->
	<<if $NPCList[_n].gender is "f" and !_strapIgnore and !npcHasStrapon(_n)>>
		<<if random(0, 99) lt $straponchance>>
			<<npcstrapon _n>>
		<</if>>
	<</if>>

	/*Location is relative to the PC*/
	<<set $NPCList[_n].location to {
		head: 0,
		genitals: 0,
	}>>



	<<set $NPCList[_n].trust to 0>>

	<<set _rng to random(1, 6)>>
	<<if _rng gte 6>>
		<<set $NPCList[_n].size to "large">>
	<<elseif _rng gte 3>>
		<<set $NPCList[_n].size to "normal">>
	<<elseif _rng gte 1>>
		<<set $NPCList[_n].size to "small">>
	<<else>>
		<<set $NPCList[_n].size to "tiny">>
	<</if>>

	<<generate_npc_traits>>
	<<generate_npc_skills>>

	<<if _npcPlant is 1>>
		<<set $NPCList[_n].type to "plant">>
		<<set $NPCList[_n].fullDescription to $NPCList[_n].description + " plant">>
		<<if $NPCList[_n].pronoun is "m">>
			<<set $NPCList[_n].fullDescription += "boy">>
		<<elseif $NPCList[_n].pronoun is "f">>
			<<set $NPCList[_n].fullDescription += "girl">>
		<</if>>
		<<unset _npcPlant>>
		<<npcClothesType $NPCList[_n] "naked">>
	<<else>>
		<<set $NPCList[_n].type to "human">>
	<</if>>

	<<if $condomLvl gte 2 and !_condomIgnore>>
		<<if $NPCList[_n].pregnancyAvoidance gte (100 - $condomChance)>>
			<<set $NPCList[_n].condom to {
				willUse: random(0,100),
				state: (random(0,100) gt 98 ? "defective" : "normal"),
				type: "plain",
				colour: setup.colours.condom[random(0, (setup.colours.condom.length -1))].csstext,
				worn: false
			}>>
		<<elseif $NPCList[_n].pregnancyAvoidance lte 2>>
			<<set $NPCList[_n].condom to {
				willUse: random(0,100),
				state: "sabotaged",
				type: "plain",
				colour: setup.colours.condom[random(0, (setup.colours.condom.length -1))].csstext,
				worn: false
			}>>
		<</if>>
	<</if>>
	<<if $NPCList[_n].pregnancy is undefined>>
		<<set $NPCList[_n].pregnancy to 0>>
	<</if>>
<</widget>>

<<widget "npcstrapon">>
	<!-- NG Converts NPCs to strap-on -->
	<<switch _args[0]>>
	<<case 0 1 2 3 4 5>>
		<<set _xx to _args[0]>>
	<<default>>
		<span class="red">NPCSTRAPON Error: No NPC Identifier</span>
		<br><br>
	<</switch>>

	<<if !$NPCList[_xx].strapon>>
		<!-- set .penis to clothed if vagina was clothed, or nude if vagina was nude -->
		<<if $NPCList[_xx].vagina isnot "none">>
			<<set $NPCList[_xx].penis to $NPCList[_xx].vagina>>
			<<set $NPCList[_xx].vagina to "none">>
			<<set $NPCList[_xx].gender to "m">>
		<</if>>

		<!-- NPC strap-on descriptors added: 0.3.6.2 -->
		/* Other names: anal beads, barbed, ribbed, corkscrew, butt plug, unicorn horn, bovine */
		<<set $_i to $NPCNameList.indexOf($NPCList[_xx].fullDescription)>>
		<<if _args[1]>>
			<<run console.log("assign strapon from args", _args[1])>>
			<<set $_strapon to _args[1]>>
			<<setNPCStrapon $NPCList[_xx] $_strapon>>
			<<set $NPCList[_xx].strapon.temp to true>>
		<<elseif $_i isnot -1 and $NPCName[$_i].strapons and $NPCName[$_i].strapons.length gte 1>>
			<!-- If the NPC owns at least one strapon, they'll choose one they own and put it on. -->
			<<run console.log("assign strapon from collection", $NPCName[$_i].strapons)>>
			<<set $_strapon to clone($NPCName[$_i].strapons.random())>>
			<<setNPCStrapon $NPCList[_xx] $_strapon>>
		<<else>>
			/* Generate random */
			<<run console.log("generate random strapon")>>
			<<set _dildoType to either("dildo","penis","beaded dildo","horse cock","knotted cock", "tentacle","dolphin cock","studded cock","fist dildo")>>
			<<set _straponColor to either("black","red","pink","purple","fleshy","blue","green")>>
			<<set _bonusdescriptor to either("","","floppy","transparent","sparkly")>>

			<<switch random(1, 6)>>
			<<case 1>>
				<<set $NPCList[_xx].penisdesc to _bonusdescriptor +" "+_straponColor+" strap-on "+_dildoType>>
				<<set $NPCList[_xx].penissize to 2>>
			<<case 2 3>>
				<<set $NPCList[_xx].penisdesc to "large "+_straponColor+" strap-on cock">>
				<<set $NPCList[_xx].penissize to 3>>
			<<case 4>>
				<<set $NPCList[_xx].penisdesc to "large "+_straponColor+" strap-on "+_dildoType>>
				<<set $NPCList[_xx].penissize to 3>>
			<<case 5>>
				<<set $NPCList[_xx].penisdesc to "massive "+_straponColor+" strap-on "+_dildoType>>
				<<set $NPCList[_xx].penissize to 4>>
			<<default>>
				<<set $NPCList[_xx].penisdesc to "massive "+_straponColor+" strap-on cock">>
				<<set $NPCList[_xx].penissize to 4>>
			<</switch>>
			<!-- Set up like this for futureproofing -->
			<<set $NPCList[_xx].strapon to {state:"worn",color:_straponColor,description:$NPCList[_xx].penisdesc,size:$NPCList[_xx].penissize}>>

			<<if $_i isnot -1>>
				<!-- Give this named npc this strapon temporarily so that they will use it in future appearances (note: they are removed in the <<day>> widget) -->
				<<set $NPCList[_xx].strapon.temp to true>>
				<<set $randomNNPCStraponsToClear to true>>
				<<if !$NPCName[$_i].strapons or $NPCName[$_i].strapons.length is 0>>
					<<set $NPCName[$_i].strapons to [$NPCList[_xx].strapon]>>
				<<else>>
					<!-- This may not make sense? Why would a strapon be randomly generated if they already had one? -->
					<<run console.debug("Random strapon added to "+$NPCName[$_i].nam+"'s strapon collection when they already had one")>>
					<<set $NPCName[$_i].strapons.push($NPCList[_xx].strapon)>>
				<</if>>
			<</if>>
		<</if>>
		<<set $NPCList[_xx].strapon.state to "worn">>
	<</if>>
<</widget>>

<<widget "generateNewStrapon">>
	<<set $_straponSize to _args[0]>>
	<<set $_straponSizeDesc to {2: "", 3: "large", 4: "massive"}[_args[0]]>>
	<<set $_straponColour to _args[1]>>
	<<set $_straponShape to _args[2]>>
	<<set $_modifier to (_args[3] ? _args[3] : "")>>
	<<set $_straponDesc to `${$_straponSizeDesc} ${$_modifier} ${$_straponColour} strap-on ${$_straponShape}`.trim().replace(/\s\s+/, " ")>>
	<<set _newStrapon to {
		color: $_straponColour,
		size: $_straponSize,
		description: $_straponDesc,
	}>>
<</widget>>

<<widget "setNPCStrapon">>
	<<if _args[0] and _args[1]>>
		<<set $_npc to _args[0]>>
		<<set $_strapon to _args[1]>>

		<<set $_npc.strapon to clone($_strapon)>>
		<<set $_npc.strapon.state to "worn">>
		<<set $_npc.penisdesc to $_npc.strapon.description>>
		<<set $_npc.penissize to $_npc.strapon.size>>
	<</if>>
<</widget>>

<<widget "generate_npc_traits">>
	<<set $NPCList[_n].traits to []>>
	<<set _rng to random(1, 4)>>
	<<switch _rng>>
		<<case 1>>
			<<set $NPCList[_n].traits.push("relaxed")>>
		<<case 2>>
			<<set $NPCList[_n].traits.push("sociable")>>
		<<case 3>>
			<<set $NPCList[_n].traits.push("brooding")>>
		<<case 4>>
			<<set $NPCList[_n].traits.push("lecher")>>
	<</switch>>
	<<if $hallucinations gte 1 and $controlled is 0>>
		<!-- Update divisor when world corruption clamp changes-->
		<<set $_hypnoChance = Math.floor($world_corruption_soft / 10)>>
		<<if random(1, 100) lte $_hypnoChance>>
			<<set $NPCList[_n].traits.push("hypnotist")>>
		<</if>>
	<<else>>
		<<if random(1, 100) is 100>>
			<<set $NPCList[_n].traits.push("hypnotist")>>
		<</if>>
	<</if>>
	/*
	<<if random(1, 5) is 5>>
		<<if random(1, 2) is 2>>
			<<set $NPCList[_n].traits.push("lazy")>>
		<<else>>
			<<set $NPCList[_n].traits.push("energetic")>>
		<</if>>
	<</if>>
	<<if random(1, 10) is 10>>
		<<set $NPCList[_n].traits.push("watchful")>>
	<</if>>
	<<if random(1, 10) is 10>>
		<<set $NPCList[_n].traits.push("needs glasses")>>
	<</if>>
	<<if random(1, 10) is 10>>
		<<set $NPCList[_n].traits.push("scrappy")>>
	<</if>>
	<<if random(1, 10) is 10>>
		<<set $NPCList[_n].traits.push("skulduggerous")>>
	<</if>>
	<<if random(1, 10) is 10>>
		<<set $NPCList[_n].traits.push("promiscuous")>>
	<</if>>
	<<if random(1, 10) is 10>>
		<<set $NPCList[_n].traits.push("exhibitionist")>>
	<</if>>
	<<if random(1, 10) is 10>>
		<<set $NPCList[_n].traits.push("deviant")>>
	<</if>>
	<<if random(1, 10) is 10>>
		<<set $NPCList[_n].traits.push("willful")>>
	<</if>>
	<<if random(1, 10) is 10>>
		<<set $NPCList[_n].traits.push("strong")>>
	<</if>>
	<<if random(1, 10) is 10>>
		<<set $NPCList[_n].traits.push("beautiful")>>
	<</if>>
	*/
<</widget>>

<<widget "generate_npc_skills">>
	<<set $NPCList[_n].skills to {}>>
	<<set $NPCList[_n].skills.security to random(1, 1000)>>
	<<set $NPCList[_n].skills.athletics to random(1, 1000)>>
<</widget>>

<!-- Argument 0 is NPC object, Argument 1 is clothes name or type. -->
<<widget "npcClothesType">>
	<<if _args[0]>>
		<<run npcClothes(_args[0], _args[1])>>
	<</if>>
<</widget>>

<<widget "npcClothesName">>
	<<if _args[0] and _args[1]>>
		<<run npcSpecifiedClothes(_args[0], _args[1])>>
	<</if>>
<</widget>>

<<widget "generateNPCClothes">>
	<<if _args[0]>>
		<<set $_npc to _args[0]>>
		<<if _npcClothesPreset>>
			<!-- For clothing set in generation widgets -->
			<<if _npcClothesPreset is "school" and ($location is "pool" or $location is "beach" and Time.season isnot "winter")>>
				<<set _npcClothesPreset to "schoolSwim">>
			<</if>>
			<<set _npcClothingOptions to [_npcClothesPreset]>>
			<<unset _npcClothesPreset>>
		<<elseif $_npc.monster is "monster">>
			<<set _npcClothingOptions to ["naked"]>>
		<<elseif $location is "prison">>
			<<set _npcClothingOptions to ["prison"]>>
		<<else>>
			<!-- Determine possible NPC clothes types -->
			<<set _npcClothingOptions to ["default"]>>
			<<set $_schoolType to ($_npc.teen is 1 ? "school" : "teacher")>>
			<<switch $location>>
				<<case "brothel" "hospital" "temple" "spa">>
					<<set _npcClothingOptions.push($location, $location, "town", "town", "formal")>>
				<<case "moor" "farm" "alex_farm">>
					<<set _npcClothingOptions.push("town", "wilds", "wilds", "wilds", "riding")>>
				<<case "forest" "lake">>
					<<set _npcClothingOptions.push("town", "wilds", "wilds", "forest")>>
				<<case "beach">>
					<<if Time.season isnot "winter">>
						<<set _npcClothingOptions.push("town", "beach", "beach", "beach", "beach", "warm", "warm")>>
						<<if $_npc.teen is 1>>
							<<set _npcClothingOptions.push("schoolSwim", "schoolSwim")>>
						<</if>>
					<<else>>
						<<set _npcClothingOptions.push("town", "cold", "cold", "cold", "cold")>>
					<</if>>
				<<case "sea">>
					<<set _npcClothingOptions.push("town", "sailor", "sailor")>>
				<<case "docks">>
					<<set _npcClothingOptions.push("town", "docker", "docker")>>
				<<case "school">>
					<<set _npcClothingOptions to [$_schoolType]>>
				<<case "pool">>
					<<set _npcClothingOptions to ["schoolSwim"]>>
				<<case "dance_studio">>
					<<set _npcClothingOptions to ["dance_studio"]>>
				<<default>>
					<<set _npcClothingOptions.push("town", "town", "town")>>
					<<if $outside is 1>>
						<<switch $weather>>
							<<case "clear">>
								<<if Time.season isnot "winter">>
									<<set _npcClothingOptions.push("warm", "warm")>>
								<</if>>
							<<case "rain">>
								<<set _npcClothingOptions.push("cold", "wilds", "rain", "rain", "rain")>>
							<<case "snow">>
								<<set _npcClothingOptions.push("cold", "cold", "cold", "cold")>>
						<</switch>>
						<<if Time.season is "winter">>
							<<set _npcClothingOptions.push("cold", "cold", "cold", "cold")>>
						<</if>>
					<</if>>
					<<if Time.season is "summer">>
						<<set _npcClothingOptions.push("warm", "warm", "warm", "warm")>>
					<<elseif Time.hour gte 19 or Time.hour lte 6>>
						<<set _npcClothingOptions.push("cold", "cold", "formal", "formal", "formalRare")>>
					<</if>>
					<<if Time.season isnot "winter">>
						<<if Time.hour gt 9 and Time.hour lt 16>>
							<<set _npcClothingOptions.push("warm", "warm")>>
						<</if>>
					<</if>>
			<</switch>>
			<!-- For named NPCs. Remove "naked" outfit from outfits array. Find all outfit names in setup.
			Copy their types into an array. Compare this array with available options.
			Delete any possible options that the named NPC does not have a type of. -->
			<<if $_npc.outfits>>
				<<set $_npcOutfits to clone($_npc.outfits)>>
				<<set $_npcOutfits to $_npcOutfits.filter(x => !x.includes("naked"))>>
				<<set _npcOutfitsTypes to []>>
				<<for $_key, $_outfit range $_npcOutfits>>
					<<set _npcOutfitsTypes.push(setup.npcClothesSets.find(set => set.name === $_outfit).type)>>
				<</for>>
				<<for $_key, $_outfitType range _npcClothingOptions>>
					<<if !_npcOutfitsTypes.includes($_outfitType)>>
						<<run _npcClothingOptions.delete($_outfitType)>>
					<</if>>
				<</for>>
			<</if>>
			<<if _npcClothingOptions.length gt 1>>
				<<run _npcClothingOptions.delete("default")>>
			<</if>>
		<</if>>
		<<set _npcClothes to _npcClothingOptions.random()>>
		<<run npcClothes($_npc, _npcClothes)>>
	<</if>>
<</widget>>


<<widget "generateNPCvirginity">>
	<<set $_npc to _args[0]>>

	<<set $_npc.virginity to {
		"anal": true,
		"oral": true,
		"penile": true,
		"vaginal": true,
		"handholding": false,
		"temple": false,
		"kiss": false
	}>>

	<<set $_virginChance to ($_npc.adult is 1 ? $npcVirginityChanceAdult : $npcVirginityChance)>>
	<<if _npcPlant and $_virginChance lt 100>>
		<<set $_virginChance /= 20>>
	<</if>>

	<<set $_npc.virginity.penile to (random(1,100) lte $_virginChance)>>
	<<set $_npc.virginity.vaginal to (random(1,100) lte $_virginChance)>>

	<!-- Can't lose virginity if you don't have the part. -->
	<!-- Also, futureproofing for strapons; this runs before strapons are assigned, so they should not generate with both penile virginity AND a strapon. -->
	<<if $_npc.penis is "none">>
		<<set $_npc.virginity.penile to false>>
	<</if>>
	<<if $_npc.vagina is "none">>
		<<set $_npc.virginity.vaginal to false>>
	<</if>>

	<!-- this is quadratic, but basically it approaches 100% faster than regular virgin chance. -->
	<<set $_uncommonVirginChance to $_virginChance * (2 - ($_virginChance/100))>>

	<<if $analdisable is "f">>
		<<set $_npc.virginity.anal to (random(1,100) lte $_uncommonVirginChance)>>
	<</if>>

	<<set $_npc.virginity.oral to (random(1,100) lte $_uncommonVirginChance)>>
<</widget>>

